%YAML 1.2
---
# constant.language.float
DEG_TO_RAD:
  description: |-
    To convert from degrees to radians

    `1° * π/180 = 0.0174533 rad`
  related:
    constants:
      - PI
      - PI_BY_TWO
      - PRIM_ROT_LOCAL
      - RAD_TO_DEG
      - TWO_PI
    functions:
      - llAxisAngle2Rot
      - llEuler2Rot
      - llGetLocalRot
      - llGetRootRotation
      - llGetRot
      - llRezAtRoot
      - llRot2Euler
      - llRotTarget
      - llSetCameraEyeOffset
      - llSetKeyframedMotion
      - llSetRot
      - llTargetOmega
    wikipedia:
      en:
        - Euler_Angles
  scope: constant.language.float
  type: float
  value: 0.017453
  usage:
    - 'rotation rot = llEuler2Rot(vector euler_amgles * DEG_TO_RAD);'
PI:
  description: '3.141593'
  related:
    constants:
      - DEG_TO_RAD
      - PI_BY_TWO
      - RAD_TO_DEG
      - TWO_PI
    functions:
      - llAcos
      - llAsin
      - llAtan2
      - llCos
      - llDetectedRot
      - llRotateTexture
      - llSensor
      - llSensorRepeat
      - llSetLinkTextureAnim
      - llSetTextureAnim
      - llSin
      - llTan
    wikipedia:
      en:
        - Pi
  scope: constant.language.float
  type: float
  value: 3.141593
PI_BY_TWO:
  description: '1.570796'
  related:
    constants:
      - DEG_TO_RAD
      - PI
      - RAD_TO_DEG
      - TWO_PI
    functions:
      - llAcos
      - llAsin
      - llAtan2
      - llCos
      - llDetectedRot
      - llRotateTexture
      - llSensor
      - llSensorRepeat
      - llSetLinkTextureAnim
      - llSetTextureAnim
      - llSin
      - llTan
  scope: constant.language.float
  type: float
  value: 1.570796
RAD_TO_DEG:
  description: |-
    To convert from radians to degrees

    `1 rad * 180/π = 57.296°`
  related:
    constants:
      - DEG_TO_RAD
      - PI
      - PI_BY_TWO
      - TWO_PI
    functions:
      - llAxisAngle2Rot
      - llEuler2Rot
      - llGetLocalRot
      - llGetRootRotation
      - llGetRot
      - llRezAtRoot
      - llRot2Euler
      - llRotTarget
      - llSetCameraEyeOffset
      - llSetKeyframedMotion
      - llSetRot
      - llTargetOmega
  scope: constant.language.float
  type: float
  value: 57.295779
  usage:
    - 'vector euler_angles = llRot2Euler(rotation rot) * RAD_TO_DEG;'
TWO_PI:
  description: '6.283185'
  related:
    constants:
      - DEG_TO_RAD
      - PI
      - PI_BY_TWO
      - RAD_TO_DEG
    functions:
      - llAcos
      - llAsin
      - llAtan2
      - llCos
      - llDetectedRot
      - llRotateTexture
      - llSensor
      - llSensorRepeat
      - llSetLinkTextureAnim
      - llSetTextureAnim
      - llSin
      - llTan
    wikipedia:
      en:
        - Turn_(geometry)#Tau_proposals
  scope: constant.language.float
  type: float
  value: 6.283185
SQRT2:
  description: '1.414214'
  related:
    functions:
      - llSqrt
  scope: constant.language.float
  type: float
  value: 1.414214
  snippets:
    - 'integer test = (SQRT2 == llSqrt(2.0));'
# constant.language.integer
AGENT:
  description: |-
    Passed in llSensor library function to look for other agents (by legacy name
    if filtered)

    Using AGENT_BY_LEGACY_NAME instead is more informative.
  related:
    constants:
      - AGENT_BY_LEGACY_NAME
      - AGENT_BY_USERNAME
      - ACTIVE
      - PASSIVE
      - SCRIPTED
    functions:
      - llDetectedType
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Avatar/Name
      - LSL_Constants
      - LSL_Integer
      - LSL_Sensor
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x1'
  usage:
    - '(ACTIVE | AGENT) == llDetectedType(integer number); // for standing agent'
    - '(PASSIVE | AGENT) == llDetectedType(integer number); // for sitting agent'
AGENT_BY_LEGACY_NAME:
  description: |-
    Passed in llSensor library function to look for other Agents, filtering by
    legacy name
  related:
    constants:
      - AGENT
      - AGENT_BY_USERNAME
      - ACTIVE
      - PASSIVE
      - SCRIPTED
    functions:
      - llDetectedType
      - llSensor
      - llSensorRepeat
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x1'
  usage:
    - '(ACTIVE | AGENT_BY_LEGACY_NAME) == llDetectedType(integer number); // for standing agent'
    - '(PASSIVE | AGENT_BY_LEGACY_NAME) == llDetectedType(integer number); // for sitting agent'
ACTIVE:
  description: Passed in llSensor library function to look for moving objects
  related:
    constants:
      - AGENT_BY_LEGACY_NAME
      - AGENT
      - AGENT_BY_USERNAME
      - PASSIVE
      - SCRIPTED
    functions:
      - llDetectedType
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Sensor
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x2'
PASSIVE:
  description: |-
    Passed in llSensor library function to look for objects that aren't
    moving
  related:
    constants:
      - AGENT_BY_LEGACY_NAME
      - AGENT
      - AGENT_BY_USERNAME
      - ACTIVE
      - SCRIPTED
    functions:
      - llDetectedType
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Sensor
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x4'
SCRIPTED:
  description: Passed in llSensor library function to look for scripted objects
  related:
    constants:
      - AGENT_BY_LEGACY_NAME
      - AGENT
      - AGENT_BY_USERNAME
      - ACTIVE
      - PASSIVE
    functions:
      - llDetectedType
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Sensor
  scope: constant.language.integer
  type: integer
  value: 8
  value_description: '0x8'
AGENT_BY_USERNAME:
  description: |-
    Passed in llSensor library function to look for other Agents, filtering by
    username
  related:
    constants:
      - AGENT_BY_LEGACY_NAME
      - AGENT
      - ACTIVE
      - PASSIVE
      - SCRIPTED
    functions:
      - llDetectedType
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Sensor
  scope: constant.language.integer
  type: integer
  value: 16
  value_description: '0x10'
CONTROL_FWD:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent forward control
  related:
    constants:
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x1'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_BACK:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent back control
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x2'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_LEFT:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent left control
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x4'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_RIGHT:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent right control
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 8
  value_description: '0x8'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_UP:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent up control
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 16
  value_description: '0x10'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_DOWN:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent down control
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 32
  value_description: '0x20'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_ROT_LEFT:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent rotate left control
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 256
  value_description: '0x100'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_ROT_RIGHT:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent rotate right control
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 512
  value_description: '0x200'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_LBUTTON:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent left button control
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_ML_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 268435456
  value_description: '0x10000000'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
CONTROL_ML_LBUTTON:
  description: |-
    Passed to llTakeControls library function and used control event handler to
    test for agent left button control with the agent in mouse look
  related:
    constants:
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - PERMISSION_TAKE_CONTROLS
    events:
      - control
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReleaseControls
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Controls
      - LSL_Requires_Permissions
  scope: constant.language.integer
  type: integer
  value: 1073741824
  value_description: '0x40000000'
  usage:
    - |-
      llTakeControls(
          CONTROL_FWD |
              CONTROL_BACK |
              CONTROL_LEFT |
              CONTROL_RIGHT |
              CONTROL_ROT_LEFT |
              CONTROL_ROT_RIGHT |
              CONTROL_UP |
              CONTROL_DOWN |
              CONTROL_LBUTTON |
              CONTROL_ML_BUTTON,
          TRUE,
          TRUE
      )
PERMISSION_DEBIT:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    take L$ from agent's account.

    [http://secondlife.com/corporate/tos.php](http://secondlife.com/corporate/tos.php)
  related:
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llGiveMoney
      - llRequestPermissions
      - llTransferLindenDollars
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Money
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x2'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_DEBIT)
          {
              ;// granted debit permissions
          }
      )
PERMISSION_TAKE_CONTROLS:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    take agent's controls
  related:
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llReleaseControls
      - llRequestPermissions
      - llTakeControls
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x4'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_TAKE_CONTROLS)
          {
              ;// take controls
          }
      )
PERMISSION_TRIGGER_ANIMATION:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    trigger animation on agent
  related:
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llStartAnimation
      - llStopAnimation
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 16
  value_description: '0x10'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_TRIGGER_ANIMATION)
          {
              ;// animate
          }
      )
PERMISSION_ATTACH:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    attach/detach from agent
  related:
    events:
      - run_time_permissions
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 32
  value_description: '0x20'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_ATTACH)
          {
              ;// attach to Avatar
          }
      )
PERMISSION_CHANGE_LINKS:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    change links
  related:
    events:
      - run_time_permissions
    functions:
      - llBreakAllLinks
      - llBreakLink
      - llCreateLink
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 128
  value_description: '0x80'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_CHANGE_LINKS)
          {
              ;// break links or rez object and create link in object_rez event
          }
      )
PERMISSION_TRACK_CAMERA:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    track agent's camera
  related:
    events:
      - run_time_permissions
    functions:
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 1024
  value_description: '0x400'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_TRACK_CAMERA)
          {
              ;// usually set a timer here and track camera in timer event
          }
      )
PERMISSION_CONTROL_CAMERA:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    change agent's camera
  related:
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 2048
  value_description: '0x800'
  version: '1.9.0(15)'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_CONTROL_CAMERA)
          {
              ;// clear then set camera params
          }
      )
PERMISSION_TELEPORT:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    teleport an agent
  related:
    events:
      - run_time_permissions
    functions:
      - llAttachToAvatarTemp
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llTeleportAgent
      - llTeleportAgentGlobalCoords
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 4096
  value_description: '0x1000'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_TELEPORT)
          {
              ;// teleport agent
          }
      )
PERMISSION_SILENT_ESTATE_MANAGEMENT:
  description: |-
    A script with this permission does not notify the object owner when it
    modifies estate access rules via llManageEstateAccess
  related:
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llManageEstateAccess
      - llRequestPermissions
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 16384
  value_description: '0x4000'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_SILENT_ESTATE_MANAGEMENT)
          {
              ;// manage estate access
          }
      )
PERMISSION_OVERRIDE_ANIMATIONS:
  description: |-
    Passed to llRequestPermissions library function to request permission to
    override animations
  related:
    events:
      - run_time_permissions
    functions:
      - llGetAnimationOverride
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llResetAnimationOverride
      - llSetAnimationOverride
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 32768
  value_description: '0x8000'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_OVERRIDE_ANIMATIONS)
          {
              ;// get, set or reset animation override
          }
      )
PERMISSION_RETURN_OBJECTS:
  related:
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Permissions/Script
  scope: constant.language.integer
  type: integer
  value: 65536
  value_description: '0x10000'
  usage:
    - |-
      run_time_permissions(integer perm)
      (
          if (perm & PERMISSION_RETURN_OBJECTS)
          {
              ;// return objects by ID or Owner
          }
      )
PUBLIC_CHANNEL:
  description: Chat channel that broadcasts to all nearby users
  related:
    constants:
      - DEBUG_CHANNEL
    events:
      - listen
    functions:
      - llDialog
      - llListen
      - llSay
      - llShout
      - llRegionSayTo
      - llWhisper
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
      - LSL_Error
  scope: constant.language.integer
  type: integer
  value: 0
  usage:
    - 'llSay(PUBLIC_CHANNEL, "Hello, Avatar!");'
    - 'llShout(PUBLIC_CHANNEL, "Hello, Avatar!");'
    - 'llWhisper(PUBLIC_CHANNEL, "Hello, Avatar!");'
    - 'llRegionSayTo(llGetOwner(), PUBLIC_CHANNEL, "Hello, Owner!");'
DEBUG_CHANNEL:
  description: Chat channel reserved for debug and error messages from scripts
  related:
    constants:
      - PUBLIC_CHANNEL
    events:
      - listen
    functions:
      - llDialog
      - llListen
      - llSay
      - llShout
      - llRegionSay
      - llWhisper
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
      - LSL_Error
  scope: constant.language.integer
  type: integer
  value: 2147483647
  value_description: '0x7FFFFFFF'
  version: '1.9.0(15)'
AGENT_LIST_PARCEL:
  description: |-
    Passed to llGetAgentList to return only agents on the same parcel where the
    script is running
  related:
    constants:
      - AGENT_LIST_PARCEL_OWNER
      - AGENT_LIST_REGION
    functions:
      - llGetAgentList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Agent
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x1'
AGENT_LIST_PARCEL_OWNER:
  description: |-
    Passed to llGetAgentList to return only agents on any parcel in the region
    where the parcel owner is the same as the owner of the parcel under the
    scripted object
  related:
    constants:
      - AGENT_LIST_PARCEL
      - AGENT_LIST_REGION
    functions:
      - llGetAgentList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Agent
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x2'
AGENT_LIST_REGION:
  description: Passed to llGetAgentList to return any/all agents in the region
  related:
    constants:
      - AGENT_LIST_PARCEL
      - AGENT_LIST_PARCEL_OWNER
    functions:
      - llGetAgentList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Agent
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x4'
PSYS_PART_FLAGS:
  description: |-
    Various flags controlling the behavior of the particle system. The value may
    be specified as an integer in decimal or hex format, or by ORing together
    (using the | operator) one or more of the following flag constants.
  related:
    constants:
      - PSYS_PART_BOUNCE_MASK
      - PSYS_PART_EMISSIVE_MASK
      - PSYS_PART_FOLLOW_SRC_MASK
      - PSYS_PART_FOLLOW_VELOCITY_MASK
      - PSYS_PART_INTERP_COLOR_MASK
      - PSYS_PART_INTERP_SCALE_MASK
      - PSYS_PART_RIBBON_MASK
      - PSYS_PART_TARGET_LINEAR_MASK
      - PSYS_PART_TARGET_POS_MASK
      - PSYS_PART_WIND_MASK
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 0
PSYS_PART_START_COLOR:
  description: |-
    A vector specifiying the color of the particles upon emission.
  related:
    constants:
      - PSYS_PART_END_COLOR
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 1
PSYS_PART_START_ALPHA:
  description: |-
    Specifies the alpha of the particles upon emission. Valid values are in the
    range `[0.0 .. 1.0]`. `0.0` is transparent, `1.0` is opaque.
  related:
    constants:
      - PSYS_PART_END_ALPHA
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 2
PSYS_PART_END_COLOR:
  description: |-
    A vector specifiying the color the particles transition to during their
    lifetime. Only used if the `PSYS_PART_INTERP_COLOR_MASK` flag is set.
  related:
    constants:
      - PSYS_PART_START_COLOR
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 3
PSYS_PART_END_ALPHA:
  description: |-
    Specifies the alpha the particles transition to during their lifetime. Only
    used if the `PSYS_PART_INTERP_COLOR_MASK` flag is set. Valid values are the
    same as `PSYS_PART_START_ALPHA`.
  related:
    constants:
      - PSYS_PART_START_ALPHA
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 4
PSYS_PART_START_SCALE:
  description: |-
    Specifies the scale or size of the particles upon emission. Valid values for
    each direction are `[0.03125 .. 4.0]`, in meters. The actual particle size
    is always a multiple of `0.03125`. Smaller changes don't have any effect.
    Since particles are essentially 2D sprites, the `.z` component of the vector
    is ignored and can be set to `0.0`.
  related:
    constants:
      - PSYS_PART_END_SCALE
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 5
PSYS_PART_END_SCALE:
  description: |-
    Specifies the scale or size the particles transition to during their
    lifetime. Only used if the `PSYS_PART_INTERP_SCALE_MASK` flag is set. Valid
    values are the same as `PSYS_PART_START_SCALE`.
  related:
    constants:
      - PSYS_PART_START_SCALE
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 6
PSYS_PART_MAX_AGE:
  description: |-
    Specifies the lifetime of each particle emitted, in seconds. Maximum is
    `30.0` seconds. During this time, the particle will appear, change
    appearance and move according to the parameters specified in the other
    sections, and then disappear.
  related:
    constants:
      - PSYS_SRC_MAX_AGE
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 7
PSYS_PART_INTERP_COLOR_MASK:
  description: |-
    When set, particle color and alpha transition from their START settings to
    their END settings during the particle's lifetime. The transition is a
    smooth interpolation.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x001'
PSYS_PART_INTERP_SCALE_MASK:
  description: |-
    When set, particle size/scale transitions from its START setting to its END
    setting during the particle's lifetime.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x002'
PSYS_PART_BOUNCE_MASK:
  description: |-
    When set, specifies particles will bounce off a plane at the region Z height
    of the emitter. On "bounce", each particle reverses velocity and angle. This
    only works for particles above the plane falling down on it.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x004'
PSYS_PART_WIND_MASK:
  description: |-
    When set, particle movement is affected by the wind. It is applied as a
    secondary force on the particles.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
      - llWind
  scope: constant.language.integer
  type: integer
  value: 8
  value_description: '0x008'
PSYS_PART_FOLLOW_SRC_MASK:
  description: |-
    When set, particles move relative to the position of the emitter. Otherwise,
    particle position and movement are unaffected by the position/movement of
    the emitter. This flag disables the `PSYS_SRC_BURST_RADIUS` rule.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 16
  value_description: '0x010'
PSYS_PART_FOLLOW_VELOCITY_MASK:
  description: |-
    When set, particles rotate to orient their "top" towards the direction of
    movement or emission. Otherwise, particles are oriented vertically as their
    textures would appear (top of texture at top, left at left).
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 32
  value_description: '0x020'
PSYS_PART_TARGET_POS_MASK:
  description: |-
    When set, emitted particles change course during their lifetime, attempting
    to move towards the target specified by the `PSYS_SRC_TARGET_KEY` rule by
    the time they expire. Note that if no target is specified, the target moves
    out of range, or an invalid target is specified, the particles target the
    prim itself.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 64
  value_description: '0x040'
PSYS_PART_TARGET_LINEAR_MASK:
  description: |-
    When set, emitted particles move in a straight evenly-spaced line towards
    the target specified by the `PSYS_SRC_TARGET_KEY` rule. This option ignores
    all Non-DROP patterns and their dependent attributes (radius, burst speeds,
    angles, and omega). `PSYS_SRC_ACCEL` and `PSYS_PART_WIND_MASK` are ignored
    as well. Using PSYS_PART_BOUNCE_MASK while the target is 'below' the emitter
    will cause the linear particle stream to deflect upwards, terminating above
    the target.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 128
  value_description: '0x080'
PSYS_PART_EMISSIVE_MASK:
  description: |-
    When set, particles are full-bright and are unaffected by global lighting
    (sunlight). Otherwise, particles will be lit depending on the current global
    lighting conditions. Note that point lights do illuminate non-emissive
    particles.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 256
  value_description: '0x100'
PSYS_PART_RIBBON_MASK:
  description: |-
    Joins a stream of particles together into a continuous strip. Particle
    textures are stretched (or squeezed) to join their right edges to their
    predecessor's left. Ribbon 'width' is controlled by the 'x' values of start
    and end scale. (The 'y' values are ignored. The distance between particles
    controls the 'length' of each ribbon segment). Unlike other particle
    effects, ribbon segments are not rendered facing the viewer's camera. The Z
    axis of each new particle mimics the Z axis of the emitter prim. Ribbon
    segments will not render if they have no 'length' - this happens when
    particles move only 'up' or 'down' the local Z-axis of their emitter prim.
    `PSYS_PART_FOLLOW_VELOCITY_MASK` has no effect on ribbons. For a simple
    ribbon effect, try using the DROP pattern, TEXTURE_BLANK, ACCEL and/or WIND.
  related:
    constants:
      - PSYS_PART_FLAGS
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 1024
  value_description: '0x400'
PSYS_SRC_PATTERN:
  description: |-
    Specifies the general emission pattern.
  related:
    constants:
      - PSYS_SRC_PATTERN_EXPLODE
      - PSYS_SRC_PATTERN_ANGLE_CONE
      - PSYS_SRC_PATTERN_ANGLE
      - PSYS_SRC_PATTERN_DROP
      - PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 9
PSYS_PART_BF_ONE:
  description: |-
    Do not scale the source or destination RGBA values.
  related:
    constants:
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BLEND_FUNC_DEST
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 0
  value_description: '0x0'
PSYS_PART_BF_ZERO:
  description: |-
    Zero out the source or destination RGBA values.
  related:
    constants:
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BLEND_FUNC_DEST
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x1'
PSYS_PART_BF_DEST_COLOR:
  description: |-
    Scale the RGBA values by the RGBA values of the destination.
  related:
    constants:
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BLEND_FUNC_DEST
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x2'
PSYS_PART_BF_SOURCE_COLOR:
  description: |-
    Scale the RGBA values by the RGBA values of the particle source.
  related:
    constants:
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BLEND_FUNC_DEST
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 3
  value_description: '0x3'
PSYS_PART_BF_ONE_MINUS_DEST_COLOR:
  description: |-
    Scale the RGBA values by the inverted RGBA values of the destination.
  related:
    constants:
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BLEND_FUNC_DEST
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x4'
PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR:
  description: |-
    Scale the RGBA values by the inverted RGBA values of the particle source.
  related:
    constants:
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BLEND_FUNC_DEST
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 5
  value_description: '0x5'
PSYS_PART_BF_SOURCE_ALPHA:
  description: |-
    Scale the RGBA values by the alpha values of the particle source.
  related:
    constants:
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BLEND_FUNC_DEST
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 7
  value_description: '0x7'
PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA:
  description: |-
    Scale the RGBA values by the inverted alpha values of the particle source.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 9
  value_description: '0x9'
PSYS_SRC_ACCEL:
  description: |-
    Specifies a directional acceleration vector applied to each particle as it
    is emitted, in meters per second squared. Valid values are `[0.0 .. 100.0]`
    for each direction both positive and negative, as region coordinates.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 8
PSYS_SRC_TEXTURE:
  description: |-
    Specifies the name of a texture in the emitter prim's inventory to use for
    each particle. Alternatively, you may specify an asset key UUID for a
    texture. If using llLinkParticleSystem and texture is not a UUID, texture
    must be in the emitter prim (not necessarily with the script).
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 12
PSYS_SRC_BURST_RATE:
  description: |-
    Specifies the time interval, in seconds, between "bursts" of particles being
    emitted. Specifying a value of 0.0 will cause the emission of particles as
    fast as the viewer can do so.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 13
PSYS_SRC_BURST_PART_COUNT:
  description: |-
    Specifies the number of particles emitted in each "burst".
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 15
PSYS_SRC_BURST_RADIUS:
  description: |-
    Specifies the distance from the emitter where particles will be created.
    This rule is ignored when the `PSYS_PART_FOLLOW_SRC_MASK` flag is set. A
    test in http://forums-archive.secondlife.com/327/f5/226722/1.html indicates
    that the maximum value is 50.00
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 16
PSYS_SRC_BURST_SPEED_MIN:
  description: |-
    Specifies the minimum value of a random range of values which is selected
    for each particle in a burst as its initial speed upon emission, in meters
    per second. Note that the value of this parameter and
    `PSYS_SRC_BURST_SPEED_MAX` are internally re-ordered such that this
    parameter gets the smaller of the two values.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 17
PSYS_SRC_BURST_SPEED_MAX:
  description: |-
    Specifies the maximum value of a random range of values which is selected
    for each particle in a burst as its initial speed upon emission, in meters
    per second. Note that the value of this parameter and
    `PSYS_SRC_BURST_SPEED_MIN` are internally re-ordered such that this
    parameter gets the larger of the two values.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 18
PSYS_SRC_MAX_AGE:
  description: |-
    Specifies the length of time, in seconds, that the emitter will operate upon
    coming into view range (if the particle system is already set) or upon
    execution of this function (if already in view range). Upon expiration, no
    more particles will be emitted, except as specified above. Zero will give
    the particle system an infinite duration.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 19
PSYS_SRC_TARGET_KEY:
  description: |-
    Specifies the key of a target object, prim, or agent towards which the
    particles will change course and move (if `PSYS_PART_TARGET_POS_MASK` is
    specified) or will move in a straight line (if
    `PSYS_PART_TARGET_LINEAR_MASK` is specified). They will attempt to end up at
    the geometric center of the target at the end of their lifetime. Requires
    the `PSYS_PART_TARGET_POS_MASK` or `PSYS_PART_TARGET_LINEAR_MASK` flag be
    set.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 20
PSYS_SRC_OMEGA:
  description: |-
    Sets how far to rotate the "pattern" after each particle burst. (Burst
    frequency is set with `PSYS_SRC_BURST_RATE`.) Omega values are approximately
    'radians per burst' around the prim's global (not local) X,Y,Z axes. For
    precise and predictable pattern rotation, rotate the prim instead of using
    `PSYS_SRC_OMEGA`. Omega has no visible effect on drop, explode and certain
    specific angle and angle cone patterns, depending on prim orientation.
    Pattern rotation can be used with prim orientation and llTargetOmega() but
    won't produce consistent results.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 21
PSYS_SRC_ANGLE_BEGIN:
  description: |-
    Specifies a half angle, in radians, of a circular or spherical "dimple" or
    conic section (starting from the emitter facing) within which particles will
    NOT be emitted. Valid values are the same as for `PSYS_SRC_ANGLE_END`,
    though the effects are reversed accordingly. If the pattern is
    `PSYS_SRC_PATTERN_ANGLE`, the presentation is a 2D flat circular section. If
    `PSYS_SRC_PATTERN_ANGLE_CONE` or `PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY` is
    used, the presentation is a 3D spherical section. Note that the value of
    this parameter and `PSYS_SRC_ANGLE_END` are internally re-ordered such that
    this parameter gets the smaller of the two values.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 22
PSYS_SRC_ANGLE_END:
  description: |-
    Specifies a half angle, in radians, of a circular or spherical "dimple" or
    conic section (starting from the emitter facing) within which particles WILL
    be emitted. Valid values are 0.0, which will result in particles being
    emitted in a straight line in the direction of the emitter facing, to PI,
    which will result in particles being emitted in a full circular or spherical
    arc around the emitter, not including the "dimple" or conic section defined
    by `PSYS_SRC_ANGLE_BEGIN`. If the pattern is `PSYS_SRC_PATTERN_ANGLE`, the
    presentation is a 2D flat circular section. If
    `PSYS_SRC_PATTERN_ANGLE_CONE` or `PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY` is
    used, the presentation is a 3D spherical section. Note that the value of
    this parameter and `PSYS_SRC_ANGLE_BEGIN` are internally re-ordered such
    that this parameter gets the larger of the two values.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 23
PSYS_SRC_PATTERN_DROP:
  description: |-
    Creates particles with no initial velocity. The DROP pattern will override
    any values given for `PSYS_SRC_BURST_RADIUS`, `PSYS_SRC_BURST_SPEED_MIN`,
    and `PSYS_SRC_BURST_SPEED_MAX`, setting each to 0.00000. (All patterns will
    behave like the DROP pattern, if RADIUS, SPEED_MIN and SPEED_MAX are
    explicitly set to 0.0000.)
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x01'
PSYS_SRC_PATTERN_EXPLODE:
  description: |-
    Sprays particles outwards in a spherical area. The Initial velocity of each
    particle is determined by `PSYS_SRC_BURST_SPEED_MIN` and
    `PSYS_SRC_BURST_SPEED_MAX`. The EXPLODE pattern ignores the ANGLE
    parameters.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x02'
PSYS_SRC_PATTERN_ANGLE:
  description: |-
    Sprays particles outward in a flat circular, semi-circular, arc or ray
    shaped areas, as defined by `PSYS_SRC_ANGLE_BEGIN` and `PSYS_SRC_ANGLE_END`.
    The circular pattern radiates outwards around the prim's local X axis line.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x04'
PSYS_SRC_PATTERN_ANGLE_CONE:
  description: |-
    Sprays particles outwards in a spherical, sub-spherical, conical or ring
    shaped area, as defined by the ANGLE parameters `PSYS_SRC_ANGLE_BEGIN` and
    `PSYS_SRC_ANGLE_END`. The ANGLE_CONE pattern can be used to imitate the
    EXPLODE pattern by explicitly setting `PSYS_SRC_ANGLE_BEGIN` to 0.00000 and
    `PSYS_SRC_ANGLE_END` to 3.14159 (or PI) (or vice versa).
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 8
  value_description: '0x08'
PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY:
  description: |-
    (incomplete implementation) acts the same as the `PSYS_SRC_PATTERN_DROP`
    pattern, it is believed that the original intention for this pattern was to
    invert the effect of the ANGLE parameters, making them delineate an area
    where particles were NOT to be sprayed. (effectively the inverse or opposite
    of the behavior of the ANGLE_CONE pattern).
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 16
  value_description: '0x10'
PSYS_PART_BLEND_FUNC_SOURCE:
  description: |-
    Specifies how blending function uses the incoming particle's color and alpha
    information to produce the rendered result.
    Defaults to `PSYS_PART_BF_SOURCE_ALPHA`.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 24
PSYS_PART_BLEND_FUNC_DEST:
  description: |-
    Specifies how blending function uses the current framebuffer's color and
    alpha information to produce the rendered result. Defaults to
    `PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA`. To make particles blend with the
    background in a less opaque and more luminescent way use `PSYS_PART_BF_ONE`
    for dest and the default for source. Most other blending combinations will
    render the invisible/alpha portion of your particle texture, unless the
    invisible area of your texture is all black (or, in some cases, unless it is
    all white).
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 25
PSYS_PART_START_GLOW:
  description: |-
    Specifies the glow of the particles upon emission. Valid values are in the
    range of (no glow) `[0.0 .. 1.0]` (full glow).
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 26
PSYS_PART_END_GLOW:
  description: |-
    Specifies the glow that the particles transition to during their lifetime.
    Valid values are the same as `PSYS_PART_START_GLOW`.
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: constant.language.integer
  type: integer
  value: 27
OBJECT_UNKNOWN_DETAIL:
  description: |-
    Returned by llGetObjectDetails when passed an invalid object parameter type
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: -1
  version: '1.18.3(5)'
  usage:
    - |-
      touch_end(integer num_detected)
      {
          key user = llDetectedKey(num_detected);
          list details = llGetObjectDetails(user, [OBJECT_NAME]);
          if ( !llGetListLength(details) ) llInstantMessage(PUBLIC_CHANNEL, "You're touching me from another region!");
          else if (llList2Integer(details, 0) == OBJECT_UNKNOWN_DETAIL) llSay(PUBLIC_CHANNEL, "I do not know your name!");
          else llSay(PUBLIC_CHANNEL, "Your legacy name: " + llList2String(details, 0));
      }
OBJECT_NAME:
  description: Used with llGetObjectDetails to get an object's name
  related:
    functions:
      - llGetObjectDetails
      - llKey2Name
      - llDetectedName
      - llGetObjectName
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 1
  version: '1.18.3(5)'
OBJECT_DESC:
  description: Used with llGetObjectDetails to get an object's description
  related:
    functions:
      - llGetObjectDetails
      - llGetObjectDesc
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 2
  version: '1.18.3(5)'
OBJECT_POS:
  description: Used with llGetObjectDetails to get an object's position
  related:
    functions:
      - llGetObjectDetails
      - llDetectedPos
      - llGetPos
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 3
  version: '1.18.3(5)'
OBJECT_ROT:
  description: Used with llGetObjectDetails to get an object's rotation
  related:
    functions:
      - llGetObjectDetails
      - llDetectedRot
      - llGetRot
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 4
  version: '1.18.3(5)'
OBJECT_VELOCITY:
  description: Used with llGetObjectDetails to get an object's velocity
  related:
    functions:
      - llGetObjectDetails
      - llDetectedVel
      - llGetVel
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 5
  version: '1.18.3(5)'
OBJECT_OWNER:
  description: |-
    Used with llGetObjectDetails to get an object's owner's key. Will
    be NULL_KEY if group owned.
  related:
    functions:
      - llGetObjectDetails
      - llDetectedOwner
      - llGetOwnerKey
      - llGetOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 6
  version: '1.18.3(5)'
OBJECT_GROUP:
  description: Used with llGetObjectDetails to get an object's group's key
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Group
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 7
  version: '1.18.3(5)'
OBJECT_CREATOR:
  description: Used with llGetObjectDetails to get an object's creator's key
  related:
    functions:
      - llGetObjectDetails
      - llGetCreator
    slwiki_categories:
      - LSL_Creator
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 8
  version: '1.18.3(5)'
OBJECT_RUNNING_SCRIPT_COUNT:
  description: |-
    Used with llGetObjectDetails to get the number of running scripts
    attached to the object or agent
  related:
    functions:
      - llGetObjectDetails
      - llGetScriptState
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 9
OBJECT_TOTAL_SCRIPT_COUNT:
  description: |-
    Used with llGetObjectDetails to get the number of scripts, both running
    and stopped, attached to the object or agent
  related:
    functions:
      - llGetObjectDetails
      - llGetInventoryNumber
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 10
OBJECT_SCRIPT_MEMORY:
  description: |-
    Used with llGetObjectDetails to get the total amount of script memory
    allocated to the object or agent, in bytes
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 11
OBJECT_SCRIPT_TIME:
  description: |-
    Used with llGetObjectDetails to get the average script CPU time (in
    seconds) an object/avatar is using
  related:
    functions:
      - llGetObjectDetails
    slwiki:
      - Viewerhelp:Top_Colliders_and_Top_Scripts
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 12
OBJECT_PRIM_EQUIVALENCE:
  description: |-
    Used with llGetObjectDetails to get the prim equivalence (land impact)
    of the object
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 13
OBJECT_SERVER_COST:
  description: Used with llGetObjectDetails to get the server cost
  related:
    functions:
      - llGetObjectDetails
    slwiki:
      - Mesh/Mesh_Server_Weight
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 14
OBJECT_STREAMING_COST:
  description: Used with llGetObjectDetails to get the streaming (download) cost
  related:
    functions:
      - llGetObjectDetails
    slwiki:
      - Mesh/Mesh_Streaming_Cost
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 15
OBJECT_PHYSICS_COST:
  description: Used with llGetObjectDetails to get the physics cost
  related:
    functions:
      - llGetObjectDetails
    slwiki:
      - Mesh/Mesh_physics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 16
OBJECT_CHARACTER_TIME:
  description: Units in seconds
  related:
    functions:
      - llGetObjectDetails
    slwiki:
      - Viewerhelp:Pathfinding_characters
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 17
OBJECT_ROOT:
  description: |-
      Gets the id of the root prim of the object requested. If id is an avatar,
      return the id of the root prim of the linkset the avatar is sitting on (or
      the avatar's own id if the avatar is not sitting on an object within the
      region).
  related:
    functions:
      - llGetObjectDetails
      - llGetLinkKey
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 18
OBJECT_ATTACHED_POINT:
  description: |-
      Gets the attachment point to which the object is attached. Returns 0 if
      the object is not an attachment (or is an avatar, etc).
  related:
    functions:
      - llGetObjectDetails
      - llGetAttached
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 19
OBJECT_PATHFINDING_TYPE:
  description: |-
    Returns the pathfinding setting of any object in the region. It returns
    an integer matching one of the OPT_* constants.
  related:
    constants:
      - OPT_OTHER
      - OPT_LEGACY_LINKSET
      - OPT_AVATAR
      - OPT_CHARACTER
      - OPT_WALKABLE
      - OPT_STATIC_OBSTACLE
      - OPT_MATERIAL_VOLUME
      - OPT_EXCLUSION_VOLUME
    functions:
      - llGetObjectDetails
    slwiki:
      - Pathfinding_Quick_Start_Guide
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 20
OBJECT_RENDER_WEIGHT:
  description: |-
      This is a flag used with llGetObjectDetails to get the
      Avatar_Rendering_Cost of an avatar, based on values reported by nearby
      viewers. If no data is available, -1 is returned. The maximum render
      weight stored by the simulator is 500000. When called against an object,
      0 is returned.
  related:
    functions:
      - llGetObjectDetails
    slwiki:
      - Avatar_Rendering_Cost
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 24
OBJECT_HOVER_HEIGHT:
  description: |-
      This is a flag used with llGetObjectDetails to get hover height of the
      avatar. If no data is available, 0.0 is returned.
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 25
  version: '15.04.08.300724'
OBJECT_BODY_SHAPE_TYPE:
  description: |-
      This is a flag used with llGetObjectDetails to get the body type of the
      avatar, based on shape data. If no data is available, -1.0 is returned.
      This is normally between 0 and 1.0, with 0.5 and larger considered 'male'
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 26
  version: '15.04.08.300724'
OBJECT_LAST_OWNER_ID:
  description: Gets the object's last owner ID.
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 27
  version: '15.04.24.301279'
OBJECT_CLICK_ACTION:
  description: |-
      This is a flag used with llGetObjectDetails to get the click action.

      The default is CLICK_ACTION_NONE.
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 28
  version: '15.09.14.305056'
OBJECT_OMEGA:
  related:
    functions:
      - llGetObjectDetails
      - llGetOmega
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 29
  version: '15.12.01.308474'
OBJECT_PRIM_COUNT:
  scope: constant.language.integer
  type: integer
  value: 30
  related:
    functions:
      - llGetObjectPrimCount
      - llGetNumberOfPrims
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  version: '16.01.05.309639'
OBJECT_TOTAL_INVENTORY_COUNT:
  scope: constant.language.integer
  type: integer
  value: 31
  related:
    constants:
      - INVENTORY_ALL
    functions:
      - llGetInventoryNumber
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  version: '16.01.05.309639'
OBJECT_REZZER_KEY:
  scope: constant.language.integer
  type: integer
  value: 32
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  version: '16.01.19.310114'
OBJECT_GROUP_TAG:
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 33
  version: '16.11.02.321369'
OBJECT_TEMP_ATTACHED:
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 34
  version: '16.11.02.321369'
OBJECT_ATTACHED_SLOTS_AVAILABLE:
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 35
  version: '16.12.03.322072'
OBJECT_CREATION_TIME:
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 36
  version: '17.08.11.328159'
OBJECT_SELECT_COUNT:
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 37
  version: '17.08.11.328159'
OBJECT_SIT_COUNT:
  related:
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 38
  version: '17.08.11.328159'
OBJECT_ANIMATED_COUNT:
  related:
    constants:
      - OBJECT_ANIMATED_SLOTS_AVAILABLE
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 39
  version: '19.06.11.528038'
OBJECT_ANIMATED_SLOTS_AVAILABLE:
  related:
    constants:
      - OBJECT_ANIMATED_COUNT
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 40
  version: '19.06.11.528038'
OPT_OTHER:
  description: Returned for attachments, Linden trees, and grass.
  related:
    constants:
      - OBJECT_PATHFINDING_TYPE
      - OPT_LEGACY_LINKSET
      - OPT_AVATAR
      - OPT_CHARACTER
      - OPT_WALKABLE
      - OPT_STATIC_OBSTACLE
      - OPT_MATERIAL_VOLUME
      - OPT_EXCLUSION_VOLUME
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - '[OPT_OTHER] = llGetObjectDetails(key id, [OBJECT_PATHFINDING_TYPE])'
  value: -1
OPT_LEGACY_LINKSET:
  description: |-
    Returned for movable obstacles, movable phantoms, physical, and volumedetect
    objects.
  related:
    constants:
      - OBJECT_PATHFINDING_TYPE
      - OPT_OTHER
      - OPT_AVATAR
      - OPT_CHARACTER
      - OPT_WALKABLE
      - OPT_STATIC_OBSTACLE
      - OPT_MATERIAL_VOLUME
      - OPT_EXCLUSION_VOLUME
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - '[OPT_LEGACY_LINKSET] = llGetObjectDetails(key id, [OBJECT_PATHFINDING_TYPE])'
  value: 0
OPT_AVATAR:
  description: Returned for avatars.
  related:
    constants:
      - OBJECT_PATHFINDING_TYPE
      - OPT_OTHER
      - OPT_LEGACY_LINKSET
      - OPT_CHARACTER
      - OPT_WALKABLE
      - OPT_STATIC_OBSTACLE
      - OPT_MATERIAL_VOLUME
      - OPT_EXCLUSION_VOLUME
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - '[OPT_AVATAR] = llGetObjectDetails(key id, [OBJECT_PATHFINDING_TYPE])'
  value: 1
OPT_CHARACTER:
  description: Returned for pathfinding characters.
  related:
    constants:
      - OBJECT_PATHFINDING_TYPE
      - OPT_OTHER
      - OPT_LEGACY_LINKSET
      - OPT_AVATAR
      - OPT_WALKABLE
      - OPT_STATIC_OBSTACLE
      - OPT_MATERIAL_VOLUME
      - OPT_EXCLUSION_VOLUME
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - '[OPT_CHARACTER] = llGetObjectDetails(key id, [OBJECT_PATHFINDING_TYPE])'
  value: 2
OPT_WALKABLE:
  description: Returned for walkable objects.
  related:
    constants:
      - OBJECT_PATHFINDING_TYPE
      - OPT_OTHER
      - OPT_LEGACY_LINKSET
      - OPT_AVATAR
      - OPT_CHARACTER
      - OPT_STATIC_OBSTACLE
      - OPT_MATERIAL_VOLUME
      - OPT_EXCLUSION_VOLUME
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - '[OPT_WALKABLE] = llGetObjectDetails(key id, [OBJECT_PATHFINDING_TYPE])'
  value: 3
OPT_STATIC_OBSTACLE:
  description: Returned for static obstacles.
  related:
    constants:
      - OBJECT_PATHFINDING_TYPE
      - OPT_OTHER
      - OPT_LEGACY_LINKSET
      - OPT_AVATAR
      - OPT_CHARACTER
      - OPT_WALKABLE
      - OPT_MATERIAL_VOLUME
      - OPT_EXCLUSION_VOLUME
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - '[OPT_STATIC_OBSTACLE] = llGetObjectDetails(key id, [OBJECT_PATHFINDING_TYPE])'
  value: 4
OPT_MATERIAL_VOLUME:
  description: Returned for material volumes.
  related:
    constants:
      - OBJECT_PATHFINDING_TYPE
      - OPT_OTHER
      - OPT_LEGACY_LINKSET
      - OPT_AVATAR
      - OPT_CHARACTER
      - OPT_WALKABLE
      - OPT_STATIC_OBSTACLE
      - OPT_EXCLUSION_VOLUME
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - '[OPT_MATERIAL_VOLUME] = llGetObjectDetails(key id, [OBJECT_PATHFINDING_TYPE])'
  value: 5
OPT_EXCLUSION_VOLUME:
  description: Returned for exclusion volumes.
  related:
    constants:
      - OBJECT_PATHFINDING_TYPE
      - OPT_OTHER
      - OPT_LEGACY_LINKSET
      - OPT_AVATAR
      - OPT_CHARACTER
      - OPT_WALKABLE
      - OPT_STATIC_OBSTACLE
      - OPT_MATERIAL_VOLUME
    functions:
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - '[OPT_EXCLUSION_VOLUME] = llGetObjectDetails(key id, [OBJECT_PATHFINDING_TYPE])'
  value: 6
VEHICLE_TYPE_NONE:
  related:
    constants:
      - VEHICLE_TYPE_SLED
      - VEHICLE_TYPE_CAR
      - VEHICLE_TYPE_BOAT
      - VEHICLE_TYPE_AIRPLANE
      - VEHICLE_TYPE_BALLOON
    functions:
      - llSetVehicleType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
      - LSL_Vehicle/Types
    slwiki:
      - Linden_Vehicle_Tutorial
  scope: constant.language.integer
  type: integer
  value: 0
VEHICLE_TYPE_SLED:
  related:
    constants:
      - VEHICLE_TYPE_NONE
      - VEHICLE_TYPE_CAR
      - VEHICLE_TYPE_BOAT
      - VEHICLE_TYPE_AIRPLANE
      - VEHICLE_TYPE_BALLOON
    functions:
      - llSetVehicleType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
      - LSL_Vehicle/Types
    slwiki:
      - Linden_Vehicle_Tutorial
  scope: constant.language.integer
  type: integer
  value: 1
VEHICLE_TYPE_CAR:
  related:
    constants:
      - VEHICLE_TYPE_NONE
      - VEHICLE_TYPE_SLED
      - VEHICLE_TYPE_BOAT
      - VEHICLE_TYPE_AIRPLANE
      - VEHICLE_TYPE_BALLOON
    functions:
      - llSetVehicleType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
      - LSL_Vehicle/Types
    slwiki:
      - Linden_Vehicle_Tutorial
  scope: constant.language.integer
  type: integer
  value: 2
VEHICLE_TYPE_BOAT:
  related:
    constants:
      - VEHICLE_TYPE_NONE
      - VEHICLE_TYPE_SLED
      - VEHICLE_TYPE_CAR
      - VEHICLE_TYPE_AIRPLANE
      - VEHICLE_TYPE_BALLOON
    functions:
      - llSetVehicleType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
      - LSL_Vehicle/Types
    slwiki:
      - Linden_Vehicle_Tutorial
  scope: constant.language.integer
  type: integer
  value: 3
VEHICLE_TYPE_AIRPLANE:
  related:
    constants:
      - VEHICLE_TYPE_NONE
      - VEHICLE_TYPE_SLED
      - VEHICLE_TYPE_CAR
      - VEHICLE_TYPE_BOAT
      - VEHICLE_TYPE_BALLOON
    functions:
      - llSetVehicleType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
      - LSL_Vehicle/Types
    slwiki:
      - Linden_Vehicle_Tutorial
  scope: constant.language.integer
  type: integer
  value: 4
VEHICLE_TYPE_BALLOON:
  related:
    constants:
      - VEHICLE_TYPE_NONE
      - VEHICLE_TYPE_SLED
      - VEHICLE_TYPE_CAR
      - VEHICLE_TYPE_BOAT
      - VEHICLE_TYPE_AIRPLANE
    functions:
      - llSetVehicleType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
      - LSL_Vehicle/Types
    slwiki:
      - Linden_Vehicle_Tutorial
  scope: constant.language.integer
  type: integer
  value: 5
VEHICLE_LINEAR_FRICTION_TIMESCALE:
  description: |-
    A vector of timescales for exponential decay of linear velocity along
    the three vehicle axes
  related:
    constants:
      - VEHICLE_ANGULAR_FRICTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_MOTOR_OFFSET
    functions:
      - llSetVehicleVectorParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 16
VEHICLE_ANGULAR_FRICTION_TIMESCALE:
  description: |-
    A vector of timescales for exponential decay of angular velocity
    about the three vehicle axes
  related:
    constants:
      - VEHICLE_ANGULAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_FRICTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_MOTOR_OFFSET
    functions:
      - llSetVehicleVectorParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 17
VEHICLE_LINEAR_MOTOR_DIRECTION:
  description: The linear velocity that the vehicle will try to achieve
  related:
    constants:
      - VEHICLE_ANGULAR_FRICTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_FRICTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_OFFSET
    functions:
      - llSetVehicleVectorParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 18
VEHICLE_ANGULAR_MOTOR_DIRECTION:
  description: The angular velocity that the vehicle will try to achieve
  related:
    constants:
      - VEHICLE_ANGULAR_FRICTION_TIMESCALE
      - VEHICLE_LINEAR_FRICTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_MOTOR_OFFSET
    functions:
      - llSetVehicleVectorParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 19
VEHICLE_LINEAR_MOTOR_OFFSET:
  description: |-
    An offset from the center of mass of the vehicle where the linear
    motor is applied
  related:
    constants:
      - VEHICLE_ANGULAR_FRICTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_FRICTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DIRECTION
    functions:
      - llSetVehicleVectorParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 20
VEHICLE_HOVER_HEIGHT:
  description: The height the vehicle will try to hover
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 24
  version: '1.1.0'
VEHICLE_HOVER_EFFICIENCY:
  description: |-
    A slider between 0 (bouncy) and 1 (critically damped) hover behavior
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 25
VEHICLE_HOVER_TIMESCALE:
  description: The period of time for the vehicle to achieve its hover height
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 26
VEHICLE_BUOYANCY:
  description: A slider between 0 (no anti-gravity) and 1 (full anti-gravity)
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 27
VEHICLE_LINEAR_DEFLECTION_EFFICIENCY:
  description: A slider between 0 (no deflection) and 1 (maximum strength)
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 28
VEHICLE_LINEAR_DEFLECTION_TIMESCALE:
  description: |-
    The exponential timescale for the vehicle to redirect its velocity
    to be along its x-axis
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 29
VEHICLE_LINEAR_MOTOR_TIMESCALE:
  description: |-
    The exponential timescale for the vehicle to achive its full linear
    motor velocity
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 30
VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE:
  description: |-
    The exponential timescale for the linear motor's effectiveness to
    decay toward zero
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 31
VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY:
  description: A slider between 0 (no deflection) and 1 (maximum strength)
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 32
VEHICLE_ANGULAR_DEFLECTION_TIMESCALE:
  description: |-
    The exponential timescale for the vehicle to achieve full angular
    deflection
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 33
VEHICLE_ANGULAR_MOTOR_TIMESCALE:
  description: |-
    The exponential timescale for the vehicle to achive its full angular
    motor velocity
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 34
VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE:
  description: |-
    The exponential timescale for the angular motor's effectiveness to
    decay toward zero
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 35
VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY:
  description: |-
    A slider between 0 (bouncy) and 1 (critically damped) attraction
    of vehicle z-axis to world z-axis (vertical)
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 36
VEHICLE_VERTICAL_ATTRACTION_TIMESCALE:
  description: |-
    The exponential timescale for the vehicle to align its z-axis to
    the world z-axis (vertical)
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 37
VEHICLE_BANKING_EFFICIENCY:
  description: |-
    A slider between -1 (leans out of turns), 0 (no banking), and +1
    (leans into turns)
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 38
VEHICLE_BANKING_MIX:
  description: A slider between 0 (static banking) and 1 (dynamic banking)
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 39
VEHICLE_BANKING_TIMESCALE:
  description: |-
    The exponential timescale for the banking behavior to take full effect
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleFloatParam
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Vehicle
  scope: constant.language.integer
  type: integer
  value: 40
VEHICLE_REFERENCE_FRAME:
  description: Rotation of vehicle axes relative to local frame
  related:
    constants: []
    events: []
    functions:
      - llSetVehicleRotationParam
  scope: constant.language.integer
  type: integer
  value: 44
  version: '1.1.0'
VEHICLE_FLAG_NO_DEFLECTION_UP:
  description: Prevents linear deflection along world-z axis
  related:
    constants:
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 1
  value_description: '0x1'
  version: '1.1.5'
CAMERA_PITCH:
  description: |-
    (-45 to 80) Adjusts the angular amount that the camera aims straight
    ahead vs. straight down, maintaining the same distance. Analogous to
    'incidence'.
  params:
    - default: '1.0'
      name: degrees
      type: float
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 0
  version: '1.9.0(15)'
CAMERA_FOCUS_OFFSET:
  description: |-
    (-10 to 10) A vector that adjusts the position of the camera focus
    position relative to the subject
  params:
    - default: ZERO_VECTOR
      name: meters
      type: vector
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 1
  version: '1.9.0(15)'
CAMERA_POSITION_LAG:
  description: |-
    (0.0 to 3.0) How much the camera lags as it tries to move towards
    its 'ideal' position
  params:
    - default: '0.1'
      name: seconds
      type: float
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 5
  version: '1.9.0(15)'
CAMERA_FOCUS_LAG:
  description: |-
    (0.0 to 3.0) How much the camera lags as it tries to aim towards
    the subject
  params:
    - default: '1.0'
      name: seconds
      type: float
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 6
  version: '1.9.0(15)'
CAMERA_DISTANCE:
  description: |-
    (0.5 to 10) Sets how far away the camera wants to be from its subject
  params:
    - default: '3.0'
      name: meters
      type: float
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 7
  version: '1.9.0(15)'
CAMERA_BEHINDNESS_ANGLE:
  description: |-
    (0 to 180) Sets the angle in degrees within which the camera is not
    constrained by changes in subject rotation
  params:
    - default: '10.0'
      name: degrees
      type: float
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 8
  version: '1.9.0(15)'
CAMERA_BEHINDNESS_LAG:
  description: |-
    (0.0 to 3.0) Sets how strongly the camera is forced to stay behind
    the target if outside of behindness angle
  params:
    - default: '0.0'
      name: seconds
      type: float
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 9
  version: '1.9.0(15)'
CAMERA_POSITION_THRESHOLD:
  description: |-
    (0.0 to 4.0) Sets the radius of a sphere around the camera's ideal
    position within which it is not affected by subject motion
  params:
    - default: '1.0'
      name: meters
      type: float
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 10
  version: '1.9.0(15)'
CAMERA_FOCUS_THRESHOLD:
  description: |-
    (0.0 to 4.0) Sets the radius of a sphere around the camera's subject
    position within which its focus is not affected by subject motion
  params:
    - default: '1.0'
      name: meters
      type: float
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 11
  version: '1.9.0(15)'
CAMERA_ACTIVE:
  description: (0 or 1) Turns on or off scripted control of the camera
  params:
    - default: 'FALSE'
      name: isActive
      type: integer
  related:
    constants:
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 12
  version: '1.9.0(15)'
CAMERA_POSITION:
  description: Sets the position of the camera
  params:
    - name: position
      type: vector
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 13
  version: '1.9.0(15)'
CAMERA_FOCUS:
  description: Sets the focus (target position) of the camera
  params:
    - name: position
      type: vector
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 17
  version: '1.9.0(15)'
CAMERA_POSITION_LOCKED:
  description: (0 or 1) Locks the camera position so it will not move
  params:
    - default: 'FALSE'
      name: isLocked
      type: integer
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 21
  version: '1.9.0(15)'
CAMERA_FOCUS_LOCKED:
  description: (0 or 1) Locks the camera focus so it will not move
  params:
    - default: 'FALSE'
      name: isLocked
      type: integer
  related:
    constants:
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
    events:
      - run_time_permissions
    functions:
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetCameraParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: 22
  version: '1.9.0(15)'
INVENTORY_ALL:
  description: |-
    Passed to task inventory library functions to reference all inventory
    items
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Camera
  scope: constant.language.integer
  type: integer
  value: -1
  version: '1.6.0'
INVENTORY_NONE:
  description: Returned by llGetInventoryType when no item is found
  related:
    constants:
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: -1
INVENTORY_TEXTURE:
  description: |-
    Passed to task inventory library functions to reference textures
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 0
INVENTORY_SOUND:
  description: Passed to task inventory library functions to reference sounds
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 1
INVENTORY_LANDMARK:
  description: Passed to task inventory library functions to reference landmarks
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 3
INVENTORY_CLOTHING:
  description: Passed to task inventory library functions to reference clothing
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 5
INVENTORY_OBJECT:
  description: Passed to task inventory library functions to reference objects
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 6
INVENTORY_NOTECARD:
  description: Passed to task inventory library functions to reference notecards
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 7
INVENTORY_SCRIPT:
  description: Passed to task inventory library functions to reference scripts
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 10
INVENTORY_BODYPART:
  description: |-
    Passed to task inventory library functions to reference body parts
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 13
INVENTORY_ANIMATION:
  description: |-
    Passed to task inventory library functions to reference animations
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 20
INVENTORY_GESTURE:
  description: Passed to task inventory library functions to reference gestures
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
  scope: constant.language.integer
  type: integer
  value: 21
INVENTORY_SETTING:
  scope: constant.language.integer
  type: integer
  value: 56
  version: '19.02.01.523934'
ATTACH_CHEST:
  description: Passed to llAttachToAvatar to attach task to chest
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 1
ATTACH_HEAD:
  description: Passed to llAttachToAvatar to attach task to head
  related:
    constants:
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 2
ATTACH_LSHOULDER:
  description: Passed to llAttachToAvatar to attach task to left shoulder
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 3
ATTACH_RSHOULDER:
  description: Passed to llAttachToAvatar to attach task to right shoulder
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 4
ATTACH_LHAND:
  description: Passed to llAttachToAvatar to attach task to left hand
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 5
ATTACH_RHAND:
  description: Passed to llAttachToAvatar to attach task to right hand
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 6
ATTACH_LFOOT:
  description: Passed to llAttachToAvatar to attach task to left foot
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 7
ATTACH_RFOOT:
  description: Passed to llAttachToAvatar to attach task to right foot
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 8
ATTACH_BACK:
  description: Passed to llAttachToAvatar to attach task to back
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 9
ATTACH_PELVIS:
  description: Passed to llAttachToAvatar to attach task to pelvis
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 10
ATTACH_MOUTH:
  description: Passed to llAttachToAvatar to attach task to mouth
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 11
ATTACH_CHIN:
  description: Passed to llAttachToAvatar to attach task to chin
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 12
ATTACH_LEAR:
  description: Passed to llAttachToAvatar to attach task to left ear
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 13
ATTACH_REAR:
  description: Passed to llAttachToAvatar to attach task to right ear
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 14
ATTACH_LEYE:
  description: Passed to llAttachToAvatar to attach task to left eye
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 15
ATTACH_REYE:
  description: Passed to llAttachToAvatar to attach task to right eye
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 16
ATTACH_NOSE:
  description: Passed to llAttachToAvatar to attach task to nose
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 17
ATTACH_RUARM:
  description: Passed to llAttachToAvatar to attach task to right upper arm
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 18
ATTACH_RLARM:
  description: Passed to llAttachToAvatar to attach task to right lower arm
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 19
ATTACH_LUARM:
  description: Passed to llAttachToAvatar to attach task to left upper arm
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 20
ATTACH_LLARM:
  description: Passed to llAttachToAvatar to attach task to left lower arm
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 21
ATTACH_RHIP:
  description: Passed to llAttachToAvatar to attach task to right hip
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 22
ATTACH_RULEG:
  description: Passed to llAttachToAvatar to attach task to right upper leg
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 23
ATTACH_RLLEG:
  description: Passed to llAttachToAvatar to attach task to right lower leg
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 24
ATTACH_LHIP:
  description: Passed to llAttachToAvatar to attach task to left hip
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 25
ATTACH_LULEG:
  description: Passed to llAttachToAvatar to attach task to left upper leg
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 26
ATTACH_LLLEG:
  description: Passed to llAttachToAvatar to attach task to left lower leg
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 27
ATTACH_BELLY:
  description: Passed to llAttachToAvatar to attach task to belly
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 28
ATTACH_LEFT_PEC:
  description: Passed to llAttachToAvatar to attach task to left pectoral
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 29
ATTACH_RIGHT_PEC:
  description: Passed to llAttachToAvatar to attach task to right pectoral
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 30
ATTACH_HUD_CENTER_2:
  description: Passed to llAttachToAvatar to attach task to center 2 HUD area
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 31
ATTACH_HUD_TOP_RIGHT:
  description: Passed to llAttachToAvatar to attach task to top right HUD area
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 32
ATTACH_HUD_TOP_CENTER:
  description: Passed to llAttachToAvatar to attach task to top center HUD area
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 33
ATTACH_HUD_TOP_LEFT:
  description: Passed to llAttachToAvatar to attach task to top left HUD area
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 34
ATTACH_HUD_CENTER_1:
  description: Passed to llAttachToAvatar to attach task to center 1 HUD area
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 35
ATTACH_HUD_BOTTOM_LEFT:
  description: Passed to llAttachToAvatar to attach task to bottom left HUD area
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 36
ATTACH_HUD_BOTTOM:
  description: Passed to llAttachToAvatar to attach task to bottom HUD area
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 37
ATTACH_HUD_BOTTOM_RIGHT:
  description: |-
    Passed to llAttachToAvatar to attach task to bottom right HUD area
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 38
ATTACH_NECK:
  description: Passed to llAttachToAvatar to attach task to neck
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 39
ATTACH_AVATAR_CENTER:
  description: Passed to llAttachToAvatar to attach task to avatar center
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 40
ATTACH_LHAND_RING1:
  description: Passed to llAttachToAvatar to attach task to left ring finger
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 41
  version: '16.05.24.315768'
ATTACH_RHAND_RING1:
  description: Passed to llAttachToAvatar to attach task to right ring finger
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 42
  version: '16.05.24.315768'
ATTACH_TAIL_BASE:
  description: Passed to llAttachToAvatar to attach task to tail base
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 43
  version: '16.05.24.315768'
ATTACH_TAIL_TIP:
  description: Passed to llAttachToAvatar to attach task to tail tip
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 44
  version: '16.05.24.315768'
ATTACH_LWING:
  description: Passed to llAttachToAvatar to attach task to left wing
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 45
  version: '16.05.24.315768'
ATTACH_RWING:
  description: Passed to llAttachToAvatar to attach task to right wing
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 46
  version: '16.05.24.315768'
ATTACH_FACE_JAW:
  description: Passed to llAttachToAvatar to attach task to jaw
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 47
  version: '16.05.24.315768'
ATTACH_FACE_LEAR:
  description: Passed to llAttachToAvatar to attach task to left ear (extended)
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 48
  version: '16.05.24.315768'
ATTACH_FACE_REAR:
  description: Passed to llAttachToAvatar to attach task to right ear (extended)
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 49
  version: '16.05.24.315768'
ATTACH_FACE_LEYE:
  description: Passed to llAttachToAvatar to attach task to left eye (extended)
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 50
  version: '16.05.24.315768'
ATTACH_FACE_REYE:
  description: Passed to llAttachToAvatar to attach task to right eye (extended)
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 51
  version: '16.05.24.315768'
ATTACH_FACE_TONGUE:
  description: Passed to llAttachToAvatar to attach task to tongue
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 52
  version: '16.05.24.315768'
ATTACH_GROIN:
  description: Passed to llAttachToAvatar to attach task to groin
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 53
  version: '16.05.24.315768'
ATTACH_HIND_LFOOT:
  description: Passed to llAttachToAvatar to attach task to left hindfoot
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 54
  version: '16.05.24.315768'
ATTACH_HIND_RFOOT:
  description: Passed to llAttachToAvatar to attach task to right hindfoot
  related:
    constants:
      - ATTACH_HEAD
      - ATTACH_NOSE
      - ATTACH_MOUTH
      - ATTACH_FACE_TONGUE
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_LEAR
      - ATTACH_REAR
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_REAR
      - ATTACH_LEYE
      - ATTACH_REYE
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REYE
      - ATTACH_NECK
      - ATTACH_LSHOULDER
      - ATTACH_RSHOULDER
      - ATTACH_LUARM
      - ATTACH_RUARM
      - ATTACH_LLARM
      - ATTACH_RLARM
      - ATTACH_LHAND
      - ATTACH_RHAND
      - ATTACH_LHAND_RING1
      - ATTACH_RHAND_RING1
      - ATTACH_LWING
      - ATTACH_RWING
      - ATTACH_CHEST
      - ATTACH_LEFT_PEC
      - ATTACH_RIGHT_PEC
      - ATTACH_BELLY
      - ATTACH_BACK
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - ATTACH_AVATAR_CENTER
      - ATTACH_PELVIS
      - ATTACH_GROIN
      - ATTACH_LHIP
      - ATTACH_RHIP
      - ATTACH_LULEG
      - ATTACH_RULEG
      - ATTACH_RLLEG
      - ATTACH_LLLEG
      - ATTACH_LFOOT
      - ATTACH_RFOOT
      - ATTACH_HIND_LFOOT
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_RIGHT
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
    events:
      - attach
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Attachment
  scope: constant.language.integer
  type: integer
  value: 55
  version: '16.05.24.315768'
LAND_LEVEL:
  description: Passed to llModifyLand to level terrain
  related:
    constants:
      - LAND_RAISE
      - LAND_LOWER
      - LAND_SMOOTH
      - LAND_NOISE
      - LAND_REVERT
    functions:
      - llModifyLand
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 0
LAND_RAISE:
  description: Passed to llModifyLand to raise terrain
  related:
    constants:
      - LAND_LEVEL
      - LAND_LOWER
      - LAND_SMOOTH
      - LAND_NOISE
      - LAND_REVERT
    functions:
      - llModifyLand
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 1
LAND_LOWER:
  description: Passed to llModifyLand to lower terrain
  related:
    constants:
      - LAND_LEVEL
      - LAND_RAISE
      - LAND_SMOOTH
      - LAND_NOISE
      - LAND_REVERT
    functions:
      - llModifyLand
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 2
LAND_SMOOTH:
  description: Passed to llModifyLand to smooth terrain
  related:
    constants:
      - LAND_LEVEL
      - LAND_RAISE
      - LAND_LOWER
      - LAND_NOISE
      - LAND_REVERT
    functions:
      - llModifyLand
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 3
LAND_NOISE:
  description: Passed to llModifyLand to randomize terrain
  related:
    constants:
      - LAND_LEVEL
      - LAND_RAISE
      - LAND_LOWER
      - LAND_SMOOTH
      - LAND_REVERT
    functions:
      - llModifyLand
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 4
LAND_REVERT:
  description: Passed to llModifyLand to revert terrain toward original state
  related:
    constants:
      - LAND_LEVEL
      - LAND_RAISE
      - LAND_LOWER
      - LAND_SMOOTH
      - LAND_NOISE
    functions:
      - llModifyLand
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 5
DATA_ONLINE:
  description: Passed to llRequestAgentData to determine if agent is online
  related:
    constants:
      - DATA_NAME
      - DATA_BORN
      - DATA_PAYINFO
    functions:
      - llRequestAgentData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 1
DATA_NAME:
  description: Passed to llRequestAgentData to get full agent name
  related:
    constants:
      - DATA_ONLINE
      - DATA_BORN
      - DATA_PAYINFO
    functions:
      - llRequestAgentData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 2
  version: '1.1.0'
DATA_BORN:
  description: Passed to llRequestAgentData to get born on date as a string
  related:
    constants:
      - DATA_ONLINE
      - DATA_NAME
      - DATA_PAYINFO
    functions:
      - llRequestAgentData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 3
  version: '1.1.0'
DATA_SIM_POS:
  description: |-
    Passed to llRequestSimulatorData to get a string (cast to vector)
    of a simulator's global position
  related:
    constants:
      - DATA_SIM_STATUS
      - DATA_SIM_RATING
    functions:
      - llRequestSimulatorData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 5
DATA_SIM_STATUS:
  description: |-
      Passed to llRequestSimulatorData to get the status of a simulator.
      Values: "up","down","starting","stopping","crashed","unknown"
  related:
    constants:
      - DATA_SIM_POS
      - DATA_SIM_RATING
    functions:
      - llRequestSimulatorData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 6
DATA_SIM_RATING:
  description: |-
      Passed to llRequestSimulatorData to get the rating of a simulator.
      Values: "PG","MATURE","ADULT","UNKNOWN"
  related:
    constants:
      - DATA_SIM_POS
      - DATA_SIM_STATUS
    functions:
      - llRequestSimulatorData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 7
  version: '1.7.0'
DATA_PAYINFO:
  description: Passed to llRequestAgentData to get payment status of an agent
  related:
    constants:
      - DATA_ONLINE
      - DATA_NAME
      - DATA_BORN
      - PAYMENT_INFO_ON_FILE
      - PAYMENT_INFO_USED
    functions:
      - llRequestAgentData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 8
  version: '1.11.2(1)'
PAYMENT_INFO_ON_FILE:
  description: |-
    Used with llRequestAgentData to tell if Agent is of "Payment Info
    On File" status
  related:
    constants:
      - DATA_PAYINFO
      - PAYMENT_INFO_USED
    functions:
      - llRequestAgentData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x1'
PAYMENT_INFO_USED:
  description: |-
    Used with llRequestAgentData to tell if Agent is of "Payment Info
    Used" status
  related:
    constants:
      - DATA_PAYINFO
      - PAYMENT_INFO_ON_FILE
    functions:
      - llRequestAgentData
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x2'
ANIM_ON:
  description: Enable texture animation
  related:
    constants:
      - LOOP
      - REVERSE
      - PING_PONG
      - SMOOTH
      - ROTATE
      - SCALE
    functions:
      - llSetLinkTextureAnim
      - llSetTextureAnim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 1
  value_description: '0x1'
LOOP:
  description: Loop when animating textures
  related:
    constants:
      - ANIM_ON
      - REVERSE
      - PING_PONG
      - SMOOTH
      - ROTATE
      - SCALE
    functions:
      - llSetLinkTextureAnim
      - llSetTextureAnim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x2'
REVERSE:
  description: Animate in the reverse direction
  related:
    constants:
      - ANIM_ON
      - LOOP
      - PING_PONG
      - SMOOTH
      - ROTATE
      - SCALE
    functions:
      - llSetLinkTextureAnim
      - llSetTextureAnim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x4'
PING_PONG:
  description: Animate forward, then reverse
  related:
    constants:
      - ANIM_ON
      - LOOP
      - REVERSE
      - SMOOTH
      - ROTATE
      - SCALE
    functions:
      - llSetLinkTextureAnim
      - llSetTextureAnim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 8
  value_description: '0x8'
SMOOTH:
  description: Textures slides, instead of stepping
  related:
    constants:
      - ANIM_ON
      - LOOP
      - REVERSE
      - PING_PONG
      - ROTATE
      - SCALE
    functions:
      - llSetLinkTextureAnim
      - llSetTextureAnim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 16
  value_description: '0x10'
ROTATE:
  description: Rotates the texture, instead of using frames
  related:
    constants:
      - ANIM_ON
      - LOOP
      - REVERSE
      - PING_PONG
      - SMOOTH
      - SCALE
    functions:
      - llSetLinkTextureAnim
      - llSetTextureAnim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 32
  value_description: '0x20'
SCALE:
  description: Scales the texture, instead of using frames
  related:
    constants:
      - ANIM_ON
      - LOOP
      - REVERSE
      - PING_PONG
      - SMOOTH
      - ROTATE
    functions:
      - llSetLinkTextureAnim
      - llSetTextureAnim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  value: 64
  value_description: '0x40'
ALL_SIDES:
  description: |-
    Passed to various texture and color library functions to modify all
    sides
  related:
    functions:
      - llGetAlpha
      - llGetColor
      - llGetLinkPrimitiveParams
      - llGetNumberOfSides
      - llGetPrimitiveParams
      - llGetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llGetTextureScale
      - llOffsetTexture
      - llRotateTexture
      - llScaleTexture
      - llSetAlpha
      - llSetColor
      - llSetLinkAlpha
      - llSetLinkColor
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetLinkTexture
      - llSetLinkTextureAnim
      - llSetPrimitiveParams
      - llSetTexture
      - llSetTextureAnim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Face
      - LSL_Texture
      - LSL_Alpha
      - LSL_Color
  scope: constant.language.integer
  type: integer
  value: -1
LINK_ROOT:
  description: |-
    Passed to various link functions to modify only the root block (no
    effect on single block objects)
  related:
    constants:
      - LINK_SET
      - LINK_ALL_OTHERS
      - LINK_ALL_CHILDREN
      - LINK_THIS
    events:
      - link_message
    functions:
      - llBreakLink
      - llBreakAllLinks
      - llCreateLink
      - llGetLinkKey
      - llGetLinkName
      - llGetLinkNumber
      - llGetLinkNumberOfSides
      - llGetLinkPrimitiveParams
      - llLinkParticleSystem
      - llMessageLinked
      - llSetLinkAlpha
      - llSetLinkColor
      - llSetLinkTexture
      - llSetLinkTextureAnim
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Link
      - LSL_Link_Message
  scope: constant.language.integer
  type: integer.link
  value: 1
LINK_SET:
  description: |-
    Passed to various link functions to modify all blocks in the object
  related:
    constants:
      - LINK_ROOT
      - LINK_ALL_OTHERS
      - LINK_ALL_CHILDREN
      - LINK_THIS
    events:
      - link_message
    functions:
      - llBreakLink
      - llBreakAllLinks
      - llCreateLink
      - llGetLinkKey
      - llGetLinkName
      - llGetLinkNumber
      - llGetLinkPrimitiveParams
      - llLinkParticleSystem
      - llMessageLinked
      - llSetLinkAlpha
      - llSetLinkColor
      - llSetLinkTexture
      - llSetLinkTextureAnim
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Link
      - LSL_Link_Message
  scope: constant.language.integer
  type: integer.link
  value: -1
LINK_ALL_OTHERS:
  description: |-
    Passed to various link functions to modify all other blocks in the
    object
  related:
    constants:
      - LINK_ROOT
      - LINK_SET
      - LINK_ALL_CHILDREN
      - LINK_THIS
    events:
      - link_message
    functions:
      - llBreakLink
      - llBreakAllLinks
      - llCreateLink
      - llGetLinkKey
      - llGetLinkName
      - llGetLinkNumber
      - llGetLinkPrimitiveParams
      - llLinkParticleSystem
      - llMessageLinked
      - llSetLinkAlpha
      - llSetLinkColor
      - llSetLinkTexture
      - llSetLinkTextureAnim
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Link
      - LSL_Link_Message
  scope: constant.language.integer
  type: integer.link
  value: -2
LINK_ALL_CHILDREN:
  description: |-
    Passed to various link functions to modify all child blocks in the
    object
  related:
    constants:
      - LINK_ROOT
      - LINK_SET
      - LINK_ALL_OTHERS
      - LINK_THIS
    events:
      - link_message
    functions:
      - llBreakLink
      - llBreakAllLinks
      - llCreateLink
      - llGetLinkKey
      - llGetLinkName
      - llGetLinkNumber
      - llGetLinkPrimitiveParams
      - llLinkParticleSystem
      - llMessageLinked
      - llSetLinkAlpha
      - llSetLinkColor
      - llSetLinkTexture
      - llSetLinkTextureAnim
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Link
      - LSL_Link_Message
  scope: constant.language.integer
  type: integer.link
  value: -3
LINK_THIS:
  description: Passed to various link functions to modify only the calling block
  related:
    constants:
      - LINK_ROOT
      - LINK_SET
      - LINK_ALL_OTHERS
      - LINK_ALL_CHILDREN
    events:
      - link_message
    functions:
      - llBreakLink
      - llBreakAllLinks
      - llCreateLink
      - llGetLinkKey
      - llGetLinkName
      - llGetLinkNumber
      - llGetLinkNumberOfSides
      - llGetLinkPrimitiveParams
      - llLinkParticleSystem
      - llMessageLinked
      - llSetLinkAlpha
      - llSetLinkColor
      - llSetLinkTexture
      - llSetLinkTextureAnim
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Link
      - LSL_Link_Message
  scope: constant.language.integer
  type: integer.link
  value: -4
  version: '1.6.0'
TYPE_INVALID:
  description: Indicates that this wasn't a valid list entry
  related:
    constants:
      - TYPE_INTEGER
      - TYPE_FLOAT
      - TYPE_STRING
      - TYPE_KEY
      - TYPE_VECTOR
      - TYPE_ROTATION
    functions:
      - llGetListEntryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/type/Values
      - LSL_List/Entry_Types
  scope: constant.language.integer
  type: integer.type
  value: 0
TYPE_INTEGER:
  description: Indicates that the list entry is holding an integer
  related:
    constants:
      - TYPE_FLOAT
      - TYPE_STRING
      - TYPE_KEY
      - TYPE_VECTOR
      - TYPE_ROTATION
      - TYPE_INVALID
    functions:
      - llGetListEntryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/type/Values
      - LSL_List/Entry_Types
  scope: constant.language.integer
  type: integer.type
  value: 1
TYPE_FLOAT:
  description: Indicates that the list entry is holding an float
  related:
    constants:
      - TYPE_INTEGER
      - TYPE_STRING
      - TYPE_KEY
      - TYPE_VECTOR
      - TYPE_ROTATION
      - TYPE_INVALID
    functions:
      - llGetListEntryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/type/Values
      - LSL_List/Entry_Types
  scope: constant.language.integer
  type: integer.type
  value: 2
TYPE_STRING:
  description: Indicates that the list entry is holding an string
  related:
    constants:
      - TYPE_INTEGER
      - TYPE_FLOAT
      - TYPE_KEY
      - TYPE_VECTOR
      - TYPE_ROTATION
      - TYPE_INVALID
    functions:
      - llGetListEntryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/type/Values
      - LSL_List/Entry_Types
  scope: constant.language.integer
  type: integer.type
  value: 3
TYPE_KEY:
  description: Indicates that the list entry is holding an key
  related:
    constants:
      - TYPE_INTEGER
      - TYPE_FLOAT
      - TYPE_STRING
      - TYPE_VECTOR
      - TYPE_ROTATION
      - TYPE_INVALID
    functions:
      - llGetListEntryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/type/Values
      - LSL_List/Entry_Types
  scope: constant.language.integer
  type: integer.type
  value: 4
TYPE_VECTOR:
  description: Indicates that the list entry is holding an vector
  related:
    constants:
      - TYPE_INTEGER
      - TYPE_FLOAT
      - TYPE_STRING
      - TYPE_KEY
      - TYPE_ROTATION
      - TYPE_INVALID
    functions:
      - llGetListEntryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/type/Values
      - LSL_List/Entry_Types
  scope: constant.language.integer
  type: integer.type
  value: 5
TYPE_ROTATION:
  description: Indicates that the list entry is holding an rotation
  related:
    constants:
      - TYPE_INTEGER
      - TYPE_FLOAT
      - TYPE_STRING
      - TYPE_KEY
      - TYPE_VECTOR
      - TYPE_INVALID
    functions:
      - llGetListEntryType
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/type/Values
      - LSL_List/Entry_Types
  scope: constant.language.integer
  type: integer.type
  value: 6
REMOTE_DATA_CHANNEL:
  description: |-
    Value of event_type in remote_event after successful llOpenRemoteDataChannel
  related:
    events:
      - remote_data
    functions:
      - llRemoteDataReply
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_XML-RPC
  scope: constant.language.integer
  type: integer
  value: 1
REMOTE_DATA_REQUEST:
  description: |-
    Value of event_type in remote_event if XML-RPC request is received
  related:
    events:
      - remote_data
    functions:
      - llRemoteDataReply
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_XML-RPC
  scope: constant.language.integer
  type: integer
  value: 2
REMOTE_DATA_REPLY:
  description: |-
    Value of event_type in remote_event if XML-RPC reply is received
  related:
    events:
      - remote_data
    functions:
      - llRemoteDataReply
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_XML-RPC
  scope: constant.language.integer
  type: integer
  value: 3
SIT_NOT_EXPERIENCE:
  description: |-
    The script is not running as part of an experience with a valid experience
    key.
  related:
    constants:
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
    functions:
      - llSitOnLink
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSitOnLink(key agent_id, integer link) == SIT_NOT_EXPERIENCE)
      {
          ; // do something
      }
  value: -1
SIT_NO_EXPERIENCE_PERMISSION:
  description: The agent has not granted permission.
  related:
    constants:
      - SIT_NOT_EXPERIENCE
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
    functions:
      - llSitOnLink
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSitOnLink(key agent_id, integer link) == SIT_NO_EXPERIENCE_PERMISSION)
      {
          ; // do something
      }
  value: -2
SIT_NO_SIT_TARGET:
  description: Unable to find an open sit target.
  related:
    constants:
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
    functions:
      - llSitOnLink
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSitOnLink(key agent_id, integer link) == SIT_NO_SIT_TARGET)
      {
          ; // do something
      }
  value: -3
SIT_INVALID_AGENT:
  description: Unable to find specified agent.
  related:
    constants:
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
    functions:
      - llSitOnLink
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSitOnLink(key agent_id, integer link) == SIT_INVALID_AGENT)
      {
          ; // do something
      }
  value: -4
SIT_INVALID_LINK:
  description: |-
    Unable to find specified link or the link constant would return multiple
    prims.
  related:
    constants:
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
    functions:
      - llSitOnLink
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSitOnLink(key agent_id, integer link) == SIT_INVALID_LINK)
      {
          ; // do something
      }
  value: -5
SIT_NO_ACCESS:
  description: |-
    The avatar does not have access to the parcel that the prim running
    this script is located in.
  related:
    constants:
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_INVALID_OBJECT
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
    functions:
      - llSitOnLink
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSitOnLink(key agent_id, integer link) == SIT_NO_ACCESS)
      {
          ; // do something
      }
  value: -6
SIT_INVALID_OBJECT:
  description: |-
    This value is returned if the llSitOnLink is trying to force the
    user to sit on something that cannot be sat upon (such as an attachment).
  related:
    constants:
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
    functions:
      - llSitOnLink
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSitOnLink(key agent_id, integer link) == SIT_INVALID_OBJECT)
      {
          ; // do something
      }
  value: -7
PRIM_ALLOW_UNSIT:
  params:
    - default: 'TRUE'
      name: boolean
      type: integer
  related:
    constants:
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
    functions:
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
      - llSitOnLink
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_ALLOW_UNSIT, integer flag
  value: 39
PRIM_SCRIPTED_SIT_ONLY:
  params:
    - name: flag
      type: integer
  related:
    constants:
      - PRIM_ALLOW_UNSIT
      - PRIM_SIT_TARGET
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
    functions:
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
      - llSitOnLink
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_SCRIPTED_SIT_ONLY, integer flag
  value: 40
PRIM_SIT_TARGET:
  params:
    - name: active
      type: integer
    - name: offset
      type: vector
    - name: rot
      type: rotation
  related:
    constants:
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
    functions:
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
      - llSitOnLink
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_SIT_TARGET, integer active, vector offset, rotation rot
  value: 41
PRIM_TYPE:
  description: |-
    Followed by PRIM_TYPE_BOX, PRIM_TYPE_CYLINDER, PRIM_TYPE_PRISM,
    PRIM_TYPE_SPHERE, PRIM_TYPE_TORUS, PRIM_TYPE_TUBE, or PRIM_TYPE_SCULPT and
    their arguments
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_BOX, integer hole_shape, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_CYLINDER, integer hole_shape, vector cut,
      float hollow, vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_PRISM, integer hole_shape, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_SPHERE, integer hole_shape, vector cut, float hollow,
      vector twist, vector dimple
    - PRIM_TYPE, PRIM_TYPE_TORUS, integer hole_shape, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_TUBE, integer hole_shape, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_RING, integer hole_shape, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, integer type
  value: 9
PRIM_MATERIAL:
  description: |-
    Followed by PRIM_MATERIAL_STONE, PRIM_MATERIAL_METAL, PRIM_MATERIAL_GLASS,
    PRIM_MATERIAL_WOOD, PRIM_MATERIAL_FLESH, PRIM_MATERIAL_PLASTIC, or
    PRIM_MATERIAL_RUBBER
  params:
    - name: flag
      type: integer
  related:
    constants:
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_PLASTIC
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_MATERIAL, integer material
  value: 2
PRIM_PHYSICS:
  description: Sets physics to TRUE or FALSE
  params:
    - name: boolean
      type: integer
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Object
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_PHYSICS, integer boolean
  value: 3
PRIM_FLEXIBLE:
  description: |-
    Followed by TRUE or FALSE, integer softness, float gravity, float friction,
    float wind, float tension, and vector force
  params:
    - name: face
      type: integer
    - name: color
      type: vector
    - name: alpha
      type: float
  related:
    constants: []
    events: []
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_FLEXIBLE, integer boolean, integer softness, float gravity,
      float friction, float wind, float tension, vector force
  value: 21
  version: '1.9.1.13'
PRIM_POINT_LIGHT:
  description: |-
    Followed by TRUE or FALSE, vector color, float intensity, float radius,
    float falloff
  params:
    - name: boolean
      type: integer
    - name: color
      type: vector
    - name: intensity
      type: float
    - name: radius
      type: float
    - name: falloff
      type: float
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_POINT_LIGHT, integer boolean, vector color, float intensity,
      float radius, float falloff
  value: 23
  version: '1.9.1.13'
PRIM_TEMP_ON_REZ:
  description: Sets temporary on rez to TRUE or FALSE
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Object
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TEMP_ON_REZ, integer boolean
  value: 4
PRIM_PHANTOM:
  description: Sets phantom to TRUE or FALSE
  params:
    - name: boolean
      type: integer
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Object
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_PHANTOM, integer boolean
  value: 5
PRIM_POSITION:
  description: |-
    Sets prim's local position to a vector position, gets prim's world
    position
  params:
    - name: position
      type: vector
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetObjectDetails
      - llGetPrimitiveParams
      - llGetRootPosition
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPos
      - llSetPrimitiveParams
      - llSetRegionPos
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_POSITION, vector position
  value: 6
PRIM_POS_LOCAL:
  description: |-
    Gets/Sets primitive local (root-prim relative) position (vector position)
  params:
    - name: position
      type: vector
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetLocalPos
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPos
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_POS_LOCAL, vector position
  value: 33
PRIM_SIZE:
  description: Sets primitive size to a vector size
  params:
    - name: size
      type: vector
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
      - llSetScale
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_SIZE, vector size
  value: 7
PRIM_ROTATION:
  description: |-
    Gets primitive absolute rotation. Sets absolute rotation for root,
    and local rotation offset by root's rotation for children.
  params:
    - name: rot
      type: rotation
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetObjectDetails
      - llGetPrimitiveParams
      - llGetRootRotation
      - llGetRot
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
      - llSetRot
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_ROTATION, rotation rot
  value: 8
PRIM_ROT_LOCAL:
  description: Gets/Sets primitive local (root-prim relative) rotation
  params:
    - name: rot
      type: rotation
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llGetLocalRot
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetLocalRot
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_ROT_LOCAL, rotation rot
  value: 29
PRIM_TEXTURE:
  description: |-
      Followed by an integer face, string name, vector repeats, vector offsets,
      and float rotation in radians
  related:
    constants:
      - ALL_SIDES
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llOffsetTexture
      - llRotateTexture
      - llScaleTexture
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
      - llSetTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Face
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TEXTURE, integer face, string texture, vector repeats,
      vector offsets, float rotation_in_radians
  value: 17
PRIM_COLOR:
  description: Followed by an integer face, vector color, and float alpha
  params:
    - name: face
      type: integer
    - name: color
      type: vector
    - name: alpha
      type: float
  related:
    constants:
      - ALL_SIDES
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetAlpha
      - llSetColor
      - llSetLinkAlpha
      - llSetLinkColor
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Face
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_COLOR, integer face, vector color, float alpha
  value: 18
PRIM_BUMP_SHINY:
  description: |-
      Followed by an integer face, one of PRIM_SHINY_NONE, PRIM_SHINY_LOW,
      PRIM_SHINY_MEDIUM, or PRIM_SHINY_HIGH, and one of PRIM_BUMP_NONE,
      PRIM_BUMP_BRIGHT, PRIM_BUMP_DARK, etc
  params:
    - name: face
      type: integer
    - name: shiny
      type: integer
    - name: bump
      type: integer
  scope: constant.language.integer
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Face
      - LSL_Prim
  type: integer
  value: 19
PRIM_FULLBRIGHT:
  description: Followed by an integer face, and TRUE or FALSE
  params:
    - name: face
      type: integer
    - name: boolean
      type: integer
  related:
    constants:
      - ALL_SIDES
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Face
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_FULLBRIGHT, integer face, integer boolean
  value: 20
  version: '1.7.0'
PRIM_TEXGEN:
  description: |-
    Followed by an integer face, and one of PRIM_TEXGEN_DEFAULT or
    PRIM_TEXGEN_PLANAR
  related:
    constants:
      - ALL_SIDES
      - PRIM_TEXGEN_DEFAULT
      - PRIM_TEXGEN_PLANAR
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Face
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TEXGEN, integer face, integer mode
    - PRIM_TEXGEN, integer face, PRIM_TEXGEN_DEFAULT
    - PRIM_TEXGEN, integer face, PRIM_TEXGEN_PLANAR
  value: 22
PRIM_GLOW:
  description: |-
    Followed by an integer face, and a float from 0.0 to 1.0 specifying
    glow amount
  params:
    - name: face
      type: integer
    - name: intensity
      type: float
  related:
    constants:
      - ALL_SIDES
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Face
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_GLOW, integer face, float intensity
  value: 25
  version: '1.20.15'
PRIM_TEXT:
  description: |-
    For floating text. Followed by a string text, vector color, and float
    alpha.
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
      - llSetText
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TEXT, string text, vector color, float alpha
  value: 26
PRIM_NAME:
  description: For primitive name. Followed by a string.
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetObjectName
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_NAME, string name
  value: 27
PRIM_DESC:
  description: For primitive description. Followed by a string.
  params:
    - name: desc
      type: string
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetObjectDesc
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_DESC, string description
  value: 28
PRIM_OMEGA:
  description: |-
    For primitive target omega. Followed by vector axis, float spinrate,
    float gain.
  params:
    - name: axis
      type: vector
    - name: spinrate
      type: float
    - name: gain
      type: float
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llRot2Fwd
      - llRot2Left
      - llRot2Up
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
      - llTargetOmega
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_OMEGA, vector axis, float spinrate, float gain
  value: 32
PRIM_LINK_TARGET:
  description: |-
    Will cause subsequent parameters to affect the prim which link number
    parameter follows this flag, independently of the original prim(s) being
    affected. Compatible with all PrimitiveParams functions.
  params:
    - name: link_target
      type: integer.link
  related:
    functions:
      - llGetLinkNumber
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Link
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_LINK_TARGET, integer link_target
  value: 34
PRIM_PHYSICS_SHAPE_TYPE:
  description: |-
    For primitive physics shape type. Followed with either
    PRIM_PHYSICS_SHAPE_PRIM, PRIM_PHYSICS_SHAPE_NONE or
    PRIM_PHYSICS_SHAPE_CONVEX.
  params:
    - name: type
      type: integer
  related:
    constants:
      - PRIM_PHYSICS_SHAPE_PRIM
      - PRIM_PHYSICS_SHAPE_CONVEX
      - PRIM_PHYSICS_SHAPE_NONE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
    slwiki:
      - Physics_Optimization
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_PHYSICS_SHAPE_TYPE, integer type
  value: 30
PRIM_SLICE:
  description: |-
    Get and set the 'slice' parameter of all shapes. Takes a vector parameter
    of the form <start_slice, end_slice, 0>.
  params:
    - name: slice
      type: vector
  related:
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Prim
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_SLICE, vector slice
  value: 35
PRIM_TYPE_BOX:
  description: |-
      Followed by integer hole_shape, vector cut, float hollow, vector twist,
      vector top size, and vector top shear
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
      - PRIM_TYPE
      - PRIM_TYPE_CYLINDER
      - PRIM_TYPE_PRISM
      - PRIM_TYPE_SPHERE
      - PRIM_TYPE_TORUS
      - PRIM_TYPE_TUBE
      - PRIM_TYPE_RING
      - PRIM_TYPE_SCULPT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parameters/hole_shape
      - LSL_Parameters/cut
      - LSL_Parameters/hollow
      - LSL_Parameters/twist
      - LSL_Parameters/top_size
      - LSL_Parameters/top_shear
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_BOX, integer hole_shape, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
  value: 0
PRIM_TYPE_CYLINDER:
  description: |-
      Followed by integer hole_shape, vector cut, float hollow, vector twist,
      vector top size, and vector top shear
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
      - PRIM_TYPE
      - PRIM_TYPE_BOX
      - PRIM_TYPE_PRISM
      - PRIM_TYPE_SPHERE
      - PRIM_TYPE_TORUS
      - PRIM_TYPE_TUBE
      - PRIM_TYPE_RING
      - PRIM_TYPE_SCULPT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parameters/hole_shape
      - LSL_Parameters/cut
      - LSL_Parameters/hollow
      - LSL_Parameters/twist
      - LSL_Parameters/top_size
      - LSL_Parameters/top_shear
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_CYLINDER, integer hole_shape, vector cut,
      float hollow, vector twist, vector top_size, vector top_shear
  value: 1
PRIM_TYPE_PRISM:
  description: |-
      Followed by integer hole_shape, vector cut, float hollow, vector twist,
      vector top size, and vector top shear
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
      - PRIM_TYPE
      - PRIM_TYPE_BOX
      - PRIM_TYPE_CYLINDER
      - PRIM_TYPE_SPHERE
      - PRIM_TYPE_TORUS
      - PRIM_TYPE_TUBE
      - PRIM_TYPE_RING
      - PRIM_TYPE_SCULPT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parameters/hole_shape
      - LSL_Parameters/cut
      - LSL_Parameters/hollow
      - LSL_Parameters/twist
      - LSL_Parameters/top_size
      - LSL_Parameters/top_shear
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_PRISM, integer hole_shape, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
  value: 2
PRIM_TYPE_SPHERE:
  description: |-
      Followed by integer hole_shape, vector cut, float hollow, vector twist,
      and vector dimple
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
      - PRIM_TYPE
      - PRIM_TYPE_BOX
      - PRIM_TYPE_CYLINDER
      - PRIM_TYPE_PRISM
      - PRIM_TYPE_TORUS
      - PRIM_TYPE_TUBE
      - PRIM_TYPE_RING
      - PRIM_TYPE_SCULPT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parameters/hole_shape
      - LSL_Parameters/cut
      - LSL_Parameters/hollow
      - LSL_Parameters/twist
      - LSL_Parameters/dimple
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SPHERE, integer hole_shape, vector cut, float hollow,
      vector twist, vector dimple
  value: 3
PRIM_TYPE_TORUS:
  description: |-
      Followed by integer hole_shape, vector cut, float hollow, vector twist,
      vector hole size, vector top shear, vector advanced cut, vector taper,
      float revolutions, float radius offset, and float skew
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
      - PRIM_TYPE
      - PRIM_TYPE_BOX
      - PRIM_TYPE_CYLINDER
      - PRIM_TYPE_PRISM
      - PRIM_TYPE_SPHERE
      - PRIM_TYPE_TUBE
      - PRIM_TYPE_RING
      - PRIM_TYPE_SCULPT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parameters/hole_shape
      - LSL_Parameters/cut
      - LSL_Parameters/hollow
      - LSL_Parameters/twist
      - LSL_Parameters/hole_size
      - LSL_Parameters/top_shear
      - LSL_Parameters/advanced_cut
      - LSL_Parameters/taper
      - LSL_Parameters/revolutions
      - LSL_Parameters/radius_offset
      - LSL_Parameters/skew
      - LSL_Parameters/twist_end
      - LSL_Parameters/hole_size_y
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_TORUS, integer hole_shape, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
  value: 4
PRIM_TYPE_TUBE:
  description: |-
      Followed by integer hole_shape, vector cut, float hollow, vector twist,
      vector hole size, vector top shear, vector advanced cut, vector taper,
      float revolutions, float radius offset, and float skew
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
      - PRIM_TYPE
      - PRIM_TYPE_BOX
      - PRIM_TYPE_CYLINDER
      - PRIM_TYPE_PRISM
      - PRIM_TYPE_SPHERE
      - PRIM_TYPE_TORUS
      - PRIM_TYPE_RING
      - PRIM_TYPE_SCULPT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parameters/hole_shape
      - LSL_Parameters/cut
      - LSL_Parameters/hollow
      - LSL_Parameters/twist
      - LSL_Parameters/hole_size
      - LSL_Parameters/top_shear
      - LSL_Parameters/advanced_cut
      - LSL_Parameters/taper
      - LSL_Parameters/revolutions
      - LSL_Parameters/radius_offset
      - LSL_Parameters/skew
      - LSL_Parameters/twist_end
      - LSL_Parameters/topshear_x
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_TUBE, integer hole_shape, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
  value: 5
PRIM_TYPE_RING:
  description: |-
      Followed by integer hole_shape, vector cut, float hollow, vector twist,
      vector hole size, vector top shear, vector advanced cut, vector taper,
      float revolutions, float radius offset, and float skew
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
      - PRIM_TYPE
      - PRIM_TYPE_BOX
      - PRIM_TYPE_CYLINDER
      - PRIM_TYPE_PRISM
      - PRIM_TYPE_SPHERE
      - PRIM_TYPE_TORUS
      - PRIM_TYPE_TUBE
      - PRIM_TYPE_SCULPT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parameters/hole_shape
      - LSL_Parameters/cut
      - LSL_Parameters/hollow
      - LSL_Parameters/twist
      - LSL_Parameters/hole_size
      - LSL_Parameters/top_shear
      - LSL_Parameters/advanced_cut
      - LSL_Parameters/taper
      - LSL_Parameters/revolutions
      - LSL_Parameters/radius_offset
      - LSL_Parameters/skew
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_RING, integer hole_shape, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
  value: 6
PRIM_TYPE_SCULPT:
  description: |-
    Followed by a key/string texture uuid, and one of PRIM_SCULPT_TYPE_SPHERE,
    PRIM_SCULPT_TYPE_TORUS, PRIM_SCULPT_TYPE_PLANE, or PRIM_SCULPT_TYPE_CYLINDER
  related:
    constants:
      - PRIM_SCULPT_TYPE_SPHERE
      - PRIM_SCULPT_TYPE_TORUS
      - PRIM_SCULPT_TYPE_PLANE
      - PRIM_SCULPT_TYPE_CYLINDER
      - PRIM_TYPE
      - PRIM_TYPE_BOX
      - PRIM_TYPE_CYLINDER
      - PRIM_TYPE_PRISM
      - PRIM_TYPE_SPHERE
      - PRIM_TYPE_TORUS
      - PRIM_TYPE_TUBE
      - PRIM_TYPE_RING
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parameters/map
      - LSL_Parameters/type
      - LSL_Prim
    slwiki:
      - 'Sculpted_Prims:_FAQ'
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, integer type
  value: 7
PRIM_HOLE_DEFAULT:
  description: Sets hole type to match the prim type
  related:
    constants:
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_BOX, PRIM_HOLE_DEFAULT, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_CYLINDER, PRIM_HOLE_DEFAULT, vector cut,
      float hollow, vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_PRISM, PRIM_HOLE_DEFAULT, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_SPHERE, PRIM_HOLE_DEFAULT, vector cut, float hollow,
      vector twist, vector dimple
    - PRIM_TYPE, PRIM_TYPE_TORUS, PRIM_HOLE_DEFAULT, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_TUBE, PRIM_HOLE_DEFAULT, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_RING, PRIM_HOLE_DEFAULT, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
  value: 0
  value_description: '0x0'
PRIM_HOLE_SQUARE:
  description: Sets hole type to square
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_TRIANGLE
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_BOX, PRIM_HOLE_SQUARE, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_CYLINDER, PRIM_HOLE_SQUARE, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_PRISM, PRIM_HOLE_SQUARE, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_SPHERE, PRIM_HOLE_SQUARE, vector cut, float hollow,
      vector twist, vector dimple
    - PRIM_TYPE, PRIM_TYPE_TORUS, PRIM_HOLE_SQUARE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_TUBE, PRIM_HOLE_SQUARE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_RING, PRIM_HOLE_SQUARE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
  value: 32
  value_description: '0x20'
PRIM_HOLE_CIRCLE:
  description: Sets hole type to circle
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_SQUARE
      - PRIM_HOLE_TRIANGLE
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_BOX, PRIM_HOLE_CIRCLE, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_CYLINDER, PRIM_HOLE_CIRCLE, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_PRISM, PRIM_HOLE_CIRCLE, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_SPHERE, PRIM_HOLE_CIRCLE, vector cut, float hollow,
      vector twist, vector dimple
    - PRIM_TYPE, PRIM_TYPE_TORUS, PRIM_HOLE_CIRCLE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_TUBE, PRIM_HOLE_CIRCLE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_RING, PRIM_HOLE_CIRCLE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
  value: 16
  value_description: '0x10'
PRIM_HOLE_TRIANGLE:
  description: Sets hole type to triangle
  related:
    constants:
      - PRIM_HOLE_DEFAULT
      - PRIM_HOLE_CIRCLE
      - PRIM_HOLE_SQUARE
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_BOX, PRIM_HOLE_TRIANGLE, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_CYLINDER, PRIM_HOLE_TRIANGLE, vector cut,
      float hollow, vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_PRISM, PRIM_HOLE_TRIANGLE, vector cut, float hollow,
      vector twist, vector top_size, vector top_shear
    - PRIM_TYPE, PRIM_TYPE_SPHERE, PRIM_HOLE_TRIANGLE, vector cut, float hollow,
      vector twist, vector dimple
    - PRIM_TYPE, PRIM_TYPE_TORUS, PRIM_HOLE_TRIANGLE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_TUBE, PRIM_HOLE_TRIANGLE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
    - PRIM_TYPE, PRIM_TYPE_RING, PRIM_HOLE_TRIANGLE, vector cut, float hollow,
      vector twist, vector hole_size, vector top_shear, vector advanced_cut,
      vector taper, float revolutions, float radius_offset, float skew
  value: 48
  value_description: '0x30'
PRIM_MATERIAL_STONE:
  description: Sets material to stone
  related:
    constants:
      - PRIM_MATERIAL
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_PLASTIC
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim/Materials
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_MATERIAL, PRIM_MATERIAL_STONE
  value: 0
PRIM_MATERIAL_METAL:
  description: Sets material to metal
  related:
    constants:
      - PRIM_MATERIAL
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_PLASTIC
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim/Materials
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_MATERIAL, PRIM_MATERIAL_METAL
  value: 1
PRIM_MATERIAL_GLASS:
  description: Sets material to glass
  related:
    constants:
      - PRIM_MATERIAL
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_PLASTIC
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim/Materials
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_MATERIAL, PRIM_MATERIAL_GLASS
  value: 2
PRIM_MATERIAL_WOOD:
  description: Sets material to wood
  related:
    constants:
      - PRIM_MATERIAL
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_PLASTIC
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim/Materials
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_MATERIAL, PRIM_MATERIAL_WOOD
  value: 3
PRIM_MATERIAL_FLESH:
  description: Sets material to flesh
  related:
    constants:
      - PRIM_MATERIAL
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_PLASTIC
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim/Materials
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_MATERIAL, PRIM_MATERIAL_FLESH
  value: 4
PRIM_MATERIAL_PLASTIC:
  description: Sets material to plastic
  related:
    constants:
      - PRIM_MATERIAL
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim/Materials
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_MATERIAL, PRIM_MATERIAL_PLASTIC
  value: 5
PRIM_MATERIAL_RUBBER:
  description: Sets material to rubber
  related:
    constants:
      - PRIM_MATERIAL
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_PLASTIC
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim/Materials
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_MATERIAL, PRIM_MATERIAL_RUBBER
  value: 6
PRIM_SHINY_NONE:
  description: No shininess
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_SHINY_LOW
      - PRIM_SHINY_MEDIUM
      - PRIM_SHINY_HIGH
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Shiny
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, PRIM_SHINY_NONE, integer bump
  value: 0
PRIM_SHINY_LOW:
  description: Low shininess
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_SHINY_NONE
      - PRIM_SHINY_MEDIUM
      - PRIM_SHINY_HIGH
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Shiny
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, PRIM_SHINY_LOW, integer bump
  value: 1
PRIM_SHINY_MEDIUM:
  description: Medium shininess
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_SHINY_NONE
      - PRIM_SHINY_LOW
      - PRIM_SHINY_HIGH
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Shiny
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, PRIM_SHINY_MEDIUM, integer bump
  value: 2
PRIM_SHINY_HIGH:
  description: High shininess
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_SHINY_NONE
      - PRIM_SHINY_LOW
      - PRIM_SHINY_MEDIUM
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Shiny
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, PRIM_SHINY_HIGH, integer bump
  value: 3
PRIM_BUMP_NONE:
  description: No bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_NONE
  value: 0
PRIM_BUMP_BRIGHT:
  description: Generate bump map from highlights
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_BRIGHT
  value: 1
PRIM_BUMP_DARK:
  description: Generate bump map from lowlights
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_DARK
  value: 2
PRIM_BUMP_WOOD:
  description: Wood bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_WOOD
  value: 3
PRIM_BUMP_BARK:
  description: Bark bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_BARK
  value: 4
PRIM_BUMP_BRICKS:
  description: Brick bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_BRICKS
  value: 5
PRIM_BUMP_CHECKER:
  description: Checker bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_CHECKER
  value: 6
PRIM_BUMP_CONCRETE:
  description: Concrete bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_CONCRETE
  value: 7
PRIM_BUMP_TILE:
  description: Tile bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_TILE
  value: 8
PRIM_BUMP_STONE:
  description: Stone bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_STONE
  value: 9
PRIM_BUMP_DISKS:
  description: Disk bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_DISKS
  value: 10
PRIM_BUMP_GRAVEL:
  description: Gravel bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_GRAVEL
  value: 11
PRIM_BUMP_BLOBS:
  description: Blob bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_BLOBS
  value: 12
PRIM_BUMP_SIDING:
  description: Siding bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_SIDING
  value: 13
PRIM_BUMP_LARGETILE:
  description: Large tile bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_LARGETILE
  value: 14
PRIM_BUMP_STUCCO:
  description: Stucco bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_SUCTION
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_STUCCO
  value: 15
PRIM_BUMP_SUCTION:
  description: Suction cup bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_WEAVE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_SUCTION
  value: 16
PRIM_BUMP_WEAVE:
  description: Weave bump map
  related:
    constants:
      - PRIM_BUMP_SHINY
      - PRIM_BUMP_NONE
      - PRIM_BUMP_BRIGHT
      - PRIM_BUMP_DARK
      - PRIM_BUMP_WOOD
      - PRIM_BUMP_BARK
      - PRIM_BUMP_BRICKS
      - PRIM_BUMP_CHECKER
      - PRIM_BUMP_CONCRETE
      - PRIM_BUMP_TILE
      - PRIM_BUMP_STONE
      - PRIM_BUMP_DISKS
      - PRIM_BUMP_GRAVEL
      - PRIM_BUMP_BLOBS
      - PRIM_BUMP_SIDING
      - PRIM_BUMP_LARGETILE
      - PRIM_BUMP_STUCCO
      - PRIM_BUMP_SUCTION
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Bump_Mapping
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_BUMP_SHINY, integer shiny, PRIM_BUMP_WEAVE
  value: 17
PRIM_TEXGEN_DEFAULT:
  description: Default texture mapping
  related:
    constants:
      - ALL_SIDES
      - PRIM_TEXGEN
      - PRIM_TEXGEN_PLANAR
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TEXGEN, integer face, PRIM_TEXGEN_DEFAULT
  value: 0
PRIM_TEXGEN_PLANAR:
  description: Planar texture mapping
  related:
    constants:
      - ALL_SIDES
      - PRIM_TEXGEN
      - PRIM_TEXGEN_DEFAULT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TEXGEN, integer face, PRIM_TEXGEN_PLANAR
  value: 1
PRIM_SCULPT_TYPE_SPHERE:
  description: Stitch edges in a sphere-like way
  related:
    constants:
      - PRIM_TYPE
      - PRIM_TYPE_SCULPT
      - PRIM_SCULPT_TYPE_TORUS
      - PRIM_SCULPT_TYPE_PLANE
      - PRIM_SCULPT_TYPE_CYLINDER
      - PRIM_SCULPT_FLAG_INVERT
      - PRIM_SCULPT_FLAG_MIRROR
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_SPHERE
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_SPHERE | PRIM_SCULPT_FLAG_INVERT
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_SPHERE | PRIM_SCULPT_FLAG_MIRROR
  value: 1
PRIM_SCULPT_TYPE_TORUS:
  description: Stitch edges in a torus-like way
  related:
    constants:
      - PRIM_TYPE
      - PRIM_TYPE_SCULPT
      - PRIM_SCULPT_TYPE_SPHERE
      - PRIM_SCULPT_TYPE_PLANE
      - PRIM_SCULPT_TYPE_CYLINDER
      - PRIM_SCULPT_FLAG_INVERT
      - PRIM_SCULPT_FLAG_MIRROR
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_TORUS
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_TORUS | PRIM_SCULPT_FLAG_INVERT
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_TORUS | PRIM_SCULPT_FLAG_MIRROR
  value: 2
PRIM_SCULPT_TYPE_PLANE:
  description: Do not stitch edges
  related:
    constants:
      - PRIM_TYPE
      - PRIM_TYPE_SCULPT
      - PRIM_SCULPT_TYPE_SPHERE
      - PRIM_SCULPT_TYPE_TORUS
      - PRIM_SCULPT_TYPE_CYLINDER
      - PRIM_SCULPT_FLAG_INVERT
      - PRIM_SCULPT_FLAG_MIRROR
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_PLANE
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_PLANE | PRIM_SCULPT_FLAG_INVERT
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_PLANE | PRIM_SCULPT_FLAG_MIRROR
  value: 3
PRIM_SCULPT_TYPE_CYLINDER:
  description: Stitch edges in a cylinder-like way
  related:
    constants:
      - PRIM_TYPE
      - PRIM_TYPE_SCULPT
      - PRIM_SCULPT_TYPE_SPHERE
      - PRIM_SCULPT_TYPE_TORUS
      - PRIM_SCULPT_TYPE_PLANE
      - PRIM_SCULPT_FLAG_INVERT
      - PRIM_SCULPT_FLAG_MIRROR
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_CYLINDER
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_CYLINDER | PRIM_SCULPT_FLAG_INVERT
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, PRIM_SCULPT_TYPE_CYLINDER | PRIM_SCULPT_FLAG_MIRROR
  value: 4
PRIM_SCULPT_TYPE_MASK:
  description: Mask used to determine stitching type
  related:
    constants:
      - PRIM_TYPE
      - PRIM_TYPE_SCULPT
      - PRIM_SCULPT_TYPE_SPHERE
      - PRIM_SCULPT_TYPE_TORUS
      - PRIM_SCULPT_TYPE_PLANE
      - PRIM_SCULPT_TYPE_CYLINDER
      - PRIM_SCULPT_FLAG_INVERT
      - PRIM_SCULPT_FLAG_MIRROR
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Sculpted
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, integer type
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, integer type | PRIM_SCULPT_FLAG_INVERT
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, integer type | PRIM_SCULPT_FLAG_MIRROR
  value: 7
PRIM_SCULPT_FLAG_INVERT:
  description: Flag to specify that the surface normals should be inverted
  related:
    constants:
      - PRIM_TYPE
      - PRIM_TYPE_SCULPT
      - PRIM_SCULPT_TYPE_SPHERE
      - PRIM_SCULPT_TYPE_TORUS
      - PRIM_SCULPT_TYPE_PLANE
      - PRIM_SCULPT_TYPE_CYLINDER
      - PRIM_SCULPT_FLAG_MIRROR
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Sculpted
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, integer type | PRIM_SCULPT_FLAG_INVERT
  value: 64
  value_description: '0x40'
PRIM_SCULPT_FLAG_MIRROR:
  description: Flag to specify that the prim should be reflected along X axis
  related:
    constants:
      - PRIM_TYPE
      - PRIM_TYPE_SCULPT
      - PRIM_SCULPT_TYPE_SPHERE
      - PRIM_SCULPT_TYPE_TORUS
      - PRIM_SCULPT_TYPE_PLANE
      - PRIM_SCULPT_TYPE_CYLINDER
      - PRIM_SCULPT_FLAG_INVERT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Sculpted
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_TYPE, PRIM_TYPE_SCULPT, string map, integer type | PRIM_SCULPT_FLAG_MIRROR
  value: 128
  value_description: '0x80'
PRIM_PHYSICS_SHAPE_PRIM:
  description: |-
    Use the normal prim shape for physics (this is the default for all
    non-mesh objects)
  related:
    constants:
      - PRIM_PHYSICS_SHAPE_TYPE
      - PRIM_PHYSICS_SHAPE_CONVEX
      - PRIM_PHYSICS_SHAPE_NONE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
      - LSL_Physics
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_PHYSICS_SHAPE_TYPE, PRIM_PHYSICS_SHAPE_PRIM
  value: 0
PRIM_PHYSICS_SHAPE_CONVEX:
  description: |-
    Use the convex hull of the prim shape for physics (this is the default
    for mesh objects)
  related:
    constants:
      - PRIM_PHYSICS_SHAPE_TYPE
      - PRIM_PHYSICS_SHAPE_PRIM
      - PRIM_PHYSICS_SHAPE_NONE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
      - LSL_Physics
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_PHYSICS_SHAPE_TYPE, PRIM_PHYSICS_SHAPE_CONVEX
  value: 2
PRIM_PHYSICS_SHAPE_NONE:
  description: |-
    Ignore this prim in the physics shape. This cannot be applied to
    the root prim.
  related:
    constants:
      - PRIM_PHYSICS_SHAPE_TYPE
      - PRIM_PHYSICS_SHAPE_PRIM
      - PRIM_PHYSICS_SHAPE_CONVEX
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
      - LSL_Physics
  scope: constant.language.integer
  type: integer
  usage:
    - PRIM_PHYSICS_SHAPE_TYPE, PRIM_PHYSICS_SHAPE_NONE
  value: 1
DENSITY:
  description: |-
    For use with llSetPhysicsMaterial() as a bitwise value in its material_bits
    parameter, to set the density
  related:
    constants:
      - PRIM_MATERIAL
    functions:
      - llGetPhysicsMaterial
      - llSetPhysicsMaterial
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
      - LSL_Physics
    slwiki:
      - Physics_Material_Settings_test
  scope: constant.language.integer
  type: integer
  usage:
    - llSetPhysicsMaterial(DENSITY, float gravity_multiplier, float restitution,
      float friction, float density);
    - llSetPhysicsMaterial(integer mask | DENSITY, float gravity_multiplier,
      float restitution, float friction, float density);
    - list physics_material = llGetPhysicsMaterial() { return [float
      gravity_multiplier, float restitution, float friction, float density]}
  value: 1
  value_description: '0x1'
  version: '11.09.23.241511'
FRICTION:
  description: |-
    For use with llSetPhysicsMaterial as a bitwise value in its material_bits
    parameter, to set the friction
  related:
    constants:
      - PRIM_MATERIAL
    functions:
      - llGetPhysicsMaterial
      - llSetPhysicsMaterial
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
      - LSL_Physics
    slwiki:
      - Physics_Material_Settings_test
  scope: constant.language.integer
  type: integer
  usage:
    - llSetPhysicsMaterial(FRICTION, float gravity_multiplier, float
      restitution, float friction, float density);
    - llSetPhysicsMaterial(integer mask | FRICTION, float gravity_multiplier,
      float restitution, float friction, float density);
    - list physics_material = llGetPhysicsMaterial() { return [float
      gravity_multiplier, float restitution, float friction, float density]}
  value: 2
  value_description: '0x2'
  version: '11.09.23.241511'
RESTITUTION:
  description: |-
    For use with llSetPhysicsMaterial as a bitwise value in its material_bits
    parameter, to set the restitution
  related:
    constants:
      - PRIM_MATERIAL
    functions:
      - llGetPhysicsMaterial
      - llSetPhysicsMaterial
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
      - LSL_Physics
    slwiki:
      - Physics_Material_Settings_test
  scope: constant.language.integer
  type: integer
  usage:
    - llSetPhysicsMaterial(RESTITUTION, float gravity_multiplier, float
      restitution, float friction, float density);
    - llSetPhysicsMaterial(integer mask | RESTITUTION, float gravity_multiplier,
      float restitution, float friction, float density);
    - list physics_material = llGetPhysicsMaterial() { return [float
      gravity_multiplier, float restitution, float friction, float density]}
  value: 4
  value_description: '0x4'
  version: '11.09.23.241511'
GRAVITY_MULTIPLIER:
  description: |-
    For use with llSetPhysicsMaterial as a bitwise value in its material_bits
    parameter, to set the gravity multiplier
  related:
    constants:
      - PRIM_MATERIAL
    functions:
      - llGetPhysicsMaterial
      - llSetPhysicsMaterial
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim
      - LSL_Physics
    slwiki:
      - Physics_Material_Settings_test
  scope: constant.language.integer
  type: integer
  usage:
    - llSetPhysicsMaterial(GRAVITY_MULTIPLIER, float gravity_multiplier, float
      restitution, float friction, float density);
    - llSetPhysicsMaterial(integer mask | GRAVITY_MULTIPLIER, float
      gravity_multiplier, float restitution, float friction, float density);
    - list physics_material = llGetPhysicsMaterial(); // returns [float
      gravity_multiplier, float restitution, float friction, float density]
  value: 8
  value_description: '0x8'
  version: '11.09.23.241511'
MASK_BASE:
  description: Base permissions
  related:
    constants:
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, MASK_BASE);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(MASK_BASE);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 0
MASK_OWNER:
  description: Owner permissions
  related:
    constants:
      - MASK_BASE
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
      - LSL_Permissions/Asset
      - LSL_Owner
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, MASK_OWNER);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(MASK_OWNER);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 1
MASK_GROUP:
  description: Group permissions
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, MASK_GROUP);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(MASK_GROUP);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 2
MASK_EVERYONE:
  description: Everyone permissions
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, MASK_EVERYONE);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(MASK_EVERYONE);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 3
MASK_NEXT:
  description: Next owner permissions
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, MASK_NEXT);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(MASK_NEXT);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 4
PERM_TRANSFER:
  description: Transfer permission
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 8192
  value_description: '0x2000'
PERM_MODIFY:
  description: Modify permission
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 16384
  value_description: '0x4000'
PERM_COPY:
  description: Copy permission
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 32768
  value_description: '0x8000'
PERM_MOVE:
  description: Move permission
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 524288
  value_description: '0x80000'
PERM_ALL:
  description: Move/Modify/Copy/Transfer permissions
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryType
      - llGetObjectPermMask
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Inventory
      - LSL_Permissions/Asset
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      integer perm = llGetInventoryPermMask(string item, integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
    - |-
      integer perm = llGetObjectPermMask(integer category);
      // returns a bit-field: PERM_ALL, PERM_COPY, PERM_MODIFY, PERM_MOVE, PERM_TRANSFER
  value: 2147483647
  value_description: '0x7FFFFFFF'
PARCEL_MEDIA_COMMAND_STOP:
  description: Stop media stream
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 0
  usage:
    - 'llParcelMediaCommandList([PARCEL_MEDIA_COMMAND_STOP]);'
PARCEL_MEDIA_COMMAND_PAUSE:
  description: Pause media stream
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 1
  usage:
    - 'llParcelMediaCommandList([PARCEL_MEDIA_COMMAND_PAUSE]);'
PARCEL_MEDIA_COMMAND_PLAY:
  description: Play media stream
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 2
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_TEXTURE, string texture,
          PARCEL_MEDIA_COMMAND_PLAY
      ]);'
PARCEL_MEDIA_COMMAND_LOOP:
  description: Loop media stream
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 3
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_TEXTURE, string texture,
          PARCEL_MEDIA_COMMAND_LOOP
      ]);'
PARCEL_MEDIA_COMMAND_LOOP_SET:
  description: Get or set the parcel's media loop duration
  params:
    - name: loop
      type: float
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 13
  version: '1.19.1-RC0'
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_TEXTURE, string texture,
          PARCEL_MEDIA_COMMAND_LOOP,
          PARCEL_MEDIA_COMMAND_LOOP_SET, float loop
      ]);
PARCEL_MEDIA_COMMAND_TEXTURE:
  description: Get or set the parcel's media texture
  params:
    - name: uuid
      type: key
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 4
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_TEXTURE, string texture,
          PARCEL_MEDIA_COMMAND_PLAY
      ]);'
PARCEL_MEDIA_COMMAND_URL:
  description: Get or set the parcel's media url
  params:
    - name: url
      type: string
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 5
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_URL, string url,
          PARCEL_MEDIA_COMMAND_PLAY
      ]);
PARCEL_MEDIA_COMMAND_TYPE:
  description: Get or set the parcel's media mimetype
  params:
    - name: MIME_type
      type: string
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 10
  version: '1.19.1-RC0'
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_URL, string url,
          PARCEL_MEDIA_COMMAND_TYPE, string mimetype,
          PARCEL_MEDIA_COMMAND_PLAY
      ]);
PARCEL_MEDIA_COMMAND_DESC:
  description: Get or set the parcel's media description
  params:
    - name: desc
      type: string
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 12
  version: '1.19.1-RC0'
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_URL, string url,
          PARCEL_MEDIA_COMMAND_DESC, string description,
          PARCEL_MEDIA_COMMAND_PLAY
      ]);
PARCEL_MEDIA_COMMAND_TIME:
  description: Set media stream to specific time
  params:
    - name: time
      type: float
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 6
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_URL, string url,
          PARCEL_MEDIA_COMMAND_TIME, float time,
          PARCEL_MEDIA_COMMAND_PLAY
      ]);
PARCEL_MEDIA_COMMAND_SIZE:
  description: Get or set the parcel's media pixel resolution
  params:
    - name: 'x'
      type: integer
    - name: 'y'
      type: integer
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 11
  version: '1.19.1-RC0'
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_URL, string url,
          PARCEL_MEDIA_COMMAND_SIZE, integer x, integer y,
          PARCEL_MEDIA_COMMAND_PLAY
      ]);
PARCEL_MEDIA_COMMAND_AGENT:
  description: Allows media stream commands to apply to only one agent
  params:
    - name: uuid
      type: key
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 7
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_URL, string url,
          PARCEL_MEDIA_COMMAND_AGENT, key agent,
          PARCEL_MEDIA_COMMAND_PLAY
      ]);
PARCEL_MEDIA_COMMAND_UNLOAD:
  description: Unloads the media stream
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 8
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_STOP,
          PARCEL_MEDIA_COMMAND_TEXTURE, string texture,
          PARCEL_MEDIA_COMMAND_UNLOAD
      ]);
PARCEL_MEDIA_COMMAND_AUTO_ALIGN:
  description: |-
    Auto aligns the media stream to the texture size. May cause a performance
    hit and loss of some visual quality.
  params:
    - name: boolean
      type: integer
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetLinkTextureAnim
      - llSetTexture
      - llSetLinkTexture
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Video
      - LSL_Video/Parcel_Media_Commands
      - LSL_Media
      - LSL_Parcel
  scope: constant.language.integer
  type: integer
  value: 9
  usage:
    - |-
      llParcelMediaCommandList([
          PARCEL_MEDIA_COMMAND_AUTO_ALIGN, integer boolean
      ]);
PAY_HIDE:
  description: Used with llSetPayPrice to hide a button
  related:
    constants:
      - PAY_DEFAULT
    functions:
      - llSetPayPrice
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetPayPrice(integer price, list quick_pay_buttons);
    - llSetPayPrice(PAY_DEFAULT, [1, 5, 10, 20]); // default
    - llSetPayPrice(PAY_HIDE, [PAY_HIDE, PAY_HIDE, PAY_HIDE, PAY_HIDE]);
  value: -1
PAY_DEFAULT:
  description: Used with llSetPayPrice to use the default price for a button
  related:
    constants:
      - PAY_HIDE
    functions:
      - llSetPayPrice
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetPayPrice(integer price, list quick_pay_buttons);
    - llSetPayPrice(PAY_DEFAULT, [1, 5, 10, 20]); // default
    - llSetPayPrice(PAY_HIDE, [PAY_HIDE, PAY_HIDE, PAY_HIDE, PAY_HIDE]);
  value: -2
LIST_STAT_MAX:
  description: Used with llListStatistics to find the largest number in a list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_NUM_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_MAX, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 2
  version: '1.9.0(15)'
LIST_STAT_MIN:
  description: Used with llListStatistics to find the smallest number in a list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_NUM_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_MIN, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 1
  version: '1.9.0(15)'
LIST_STAT_MEAN:
  description: |-
    Used with llListStatistics to find the mean of the numbers in a list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_NUM_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_MEAN, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 3
  version: '1.9.0(15)'
LIST_STAT_MEDIAN:
  description: |-
    Used with llListStatistics to find the median of the numbers in a list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_NUM_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_MEDIAN, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 4
  version: '1.9.0(15)'
LIST_STAT_STD_DEV:
  description: |-
    Used with llListStatistics to find the standard deviation of the
    numbers in a list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_NUM_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_STD_DEV, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 5
  version: '1.9.0(15)'
LIST_STAT_SUM:
  description: |-
    Used with llListStatistics to find the sum of the numbers in a list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_NUM_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_SUM, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 6
  version: '1.9.0(15)'
LIST_STAT_SUM_SQUARES:
  description: |-
    Used with llListStatistics to find the sum of the squares of the
    numbers in a list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_NUM_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_SUM_SQUARES, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 7
  version: '1.9.0(15)'
LIST_STAT_NUM_COUNT:
  description: Used with llListStatistics to find how many numbers are in a list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_NUM_COUNT, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 8
  version: '1.9.0(15)'
LIST_STAT_GEOMETRIC_MEAN:
  description: |-
    Used with llListStatistics to find the geometric mean of the numbers
    in a list (all numbers must be > 0)
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_NUM_COUNT
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_GEOMETRIC_MEAN, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 9
  version: '1.9.0(15)'
LIST_STAT_RANGE:
  description: |-
    Used with llListStatistics to find the range of the numbers in a list
  related:
    constants:
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_NUM_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
      - llListStatistics
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float result = llListStatistics(LIST_STAT_RANGE, list src);
    - float result = llListStatistics(integer operation, list src);
  value: 0
  version: '1.9.0(15)'
PARCEL_FLAG_ALLOW_FLY:
  description: Used with llGetParcelFlags to find if a parcel allows flying
  related:
    constants:
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 1
  value_description: '0x1'
  version: '1.9.1.9'
PARCEL_FLAG_ALLOW_GROUP_SCRIPTS:
  description: |-
    Used with llGetParcelFlags to find if a parcel allows group scripts
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 33554432
  value_description: '0x2000000'
PARCEL_FLAG_ALLOW_SCRIPTS:
  description: |-
    Used with llGetParcelFlags to find if a parcel allows outside scripts
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 2
  value_description: '0x2'
  version: '1.9.1.9'
PARCEL_FLAG_ALLOW_LANDMARK:
  description: |-
    Used with llGetParcelFlags to find if a parcel allows landmarks to
    be created
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 8
  value_description: '0x8'
  version: '1.9.1.9'
PARCEL_FLAG_ALLOW_TERRAFORM:
  description: |-
    Used with llGetParcelFlags to find if a parcel allows anyone to terraform
    the land
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 16
  value_description: '0x10'
  version: '1.9.1.9'
PARCEL_FLAG_ALLOW_DAMAGE:
  description: Used with llGetParcelFlags to find if a parcel allows damage
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 32
  value_description: '0x20'
  version: '1.9.1.9'
PARCEL_FLAG_ALLOW_CREATE_OBJECTS:
  description: |-
    Used with llGetParcelFlags to find if a parcel allows anyone to create
    objects
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 64
  value_description: '0x40'
  version: '1.9.1.9'
PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS:
  description: |-
    Used with llGetParcelFlags to find if a parcel allows group members
    or objects to create objects
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 67108864
  value_description: '0x4000000'
PARCEL_FLAG_USE_ACCESS_GROUP:
  description: |-
    Used with llGetParcelFlags to find if a parcel limits access to a group
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 256
  value_description: '0x100'
  version: '1.9.1.9'
PARCEL_FLAG_USE_ACCESS_LIST:
  description: |-
    Used with llGetParcelFlags to find if a parcel limits access to a
    list of residents
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 512
  value_description: '0x200'
  version: '1.9.1.9'
PARCEL_FLAG_USE_BAN_LIST:
  description: Used with llGetParcelFlags to find if a parcel uses a ban list
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 1024
  value_description: '0x400'
  version: '1.9.1.9'
PARCEL_FLAG_USE_LAND_PASS_LIST:
  description: |-
    Used with llGetParcelFlags to find if a parcel allows passes to be
    purchased
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 2048
  value_description: '0x800'
  version: '1.9.1.9'
PARCEL_FLAG_LOCAL_SOUND_ONLY:
  description: |-
    Used with llGetParcelFlags to find if a parcel restricts spacialized
    sound to the parcel
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 32768
  value_description: '0x8000'
  version: '1.9.1.9'
PARCEL_FLAG_RESTRICT_PUSHOBJECT:
  description: |-
    Used with llGetParcelFlags to find if a parcel restricts llPushObject
    calls
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 2097152
  value_description: '0x200000'
  version: '1.11.2(1)'
PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY:
  description: |-
    Used with llGetParcelFlags to find if a parcel allows all objects
    to enter
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 134217728
  value_description: '0x8000000'
  version: '1.15.0(2)'
PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY:
  description: |-
    Used with llGetParcelFlags to find if a parcel only allows group
    (and owner) objects to enter
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY
    functions:
      - llGetParcelFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetParcelFlags(vector pos);
  value: 268435456
  value_description: '0x10000000'
  version: '1.15.0(2)'
REGION_FLAG_ALLOW_DAMAGE:
  description: |-
    Used with llGetRegionFlags to find if a region is entirely damage
    enabled
  related:
    constants:
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
      - REGION_FLAG_RESTRICT_PUSHOBJECT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 1
  value_description: '0x1'
  version: '1.9.0(15)'
REGION_FLAG_FIXED_SUN:
  description: |-
    Used with llGetRegionFlags to find if a region has a fixed sun position
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
      - REGION_FLAG_RESTRICT_PUSHOBJECT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 16
  value_description: '0x10'
  version: '1.9.0(15)'
REGION_FLAG_BLOCK_TERRAFORM:
  description: |-
    Used with llGetRegionFlags to find if a region terraforming disabled
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
      - REGION_FLAG_RESTRICT_PUSHOBJECT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 64
  value_description: '0x40'
  version: '1.9.0(15)'
REGION_FLAG_SANDBOX:
  description: Used with llGetRegionFlags to find if a region is a sandbox
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
      - REGION_FLAG_RESTRICT_PUSHOBJECT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 256
  value_description: '0x100'
  version: '1.9.0(15)'
REGION_FLAG_DISABLE_COLLISIONS:
  description: |-
    Used with llGetRegionFlags to find if a region has disabled collisions
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
      - REGION_FLAG_RESTRICT_PUSHOBJECT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 4096
  value_description: '0x1000'
  version: '1.9.0(15)'
REGION_FLAG_DISABLE_PHYSICS:
  description: |-
    Used with llGetRegionFlags to find if a region has disabled physics
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
      - REGION_FLAG_RESTRICT_PUSHOBJECT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 16384
  value_description: '0x4000'
  version: '1.9.0(15)'
REGION_FLAG_BLOCK_FLY:
  description: |-
    Used with llGetRegionFlags to find if a region blocks flying
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
      - REGION_FLAG_RESTRICT_PUSHOBJECT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 524288
  value_description: '0x80000'
  version: '1.9.0(15)'
REGION_FLAG_ALLOW_DIRECT_TELEPORT:
  description: |-
    Used with llGetRegionFlags to find if a region allows direct teleports
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_RESTRICT_PUSHOBJECT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 1048576
  value_description: '0x100000'
  version: '1.9.0(15)'
REGION_FLAG_RESTRICT_PUSHOBJECT:
  description: |-
    Used with llGetRegionFlags to find if a region restricts llPushObject
    calls
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
    functions:
      - llGetRegionFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer bit_field = llGetRegionFlags();
  value: 4194304
  value_description: '0x400000'
  version: '1.11.2(1)'
HTTP_METHOD:
  description: |-
    Used with llHTTPRequest to specify the method, such as "GET" or "POST"
  params:
    - default: GET
      name: method
      type: string
  related:
    constants:
      - HTTP_MIMETYPE
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_VERBOSE_THROTTLE
      - HTTP_CUSTOM_HEADER
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_USER_AGENT
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP/Client
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [HTTP_METHOD, "GET"], string
      body);
    - key request_id = llHTTPRequest(string url, [HTTP_METHOD, "POST"], string
      body);
    - key request_id = llHTTPRequest(string url, [HTTP_METHOD, "PUT"], string
      body);
    - key request_id = llHTTPRequest(string url, [HTTP_METHOD, "DELETE"], string
      body);
  value: 0
HTTP_MIMETYPE:
  description: |-
    Used with llHTTPRequest to specify the MIME type, defaults to "text/plain"
  params:
    - default: text/plain;charset=utf-8
      name: MIME_type
      type: string
  related:
    constants:
      - HTTP_METHOD
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_VERBOSE_THROTTLE
      - HTTP_CUSTOM_HEADER
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_USER_AGENT
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP/Client
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [
      HTTP_MIMETYPE, "text/plain;charset=utf-8"], string body);
    - key request_id = llHTTPRequest(string url, [
      HTTP_MIMETYPE, "text/html"], string body);
    - key request_id = llHTTPRequest(string url, [
      HTTP_MIMETYPE, "application/json"], string body);
  value: 1
  version: '1.10.4(0)'
HTTP_BODY_MAXLENGTH:
  description: |-
    Used with llHTTPRequest to specify the maximum reponse body to return
  params:
    - default: '2048'
      name: length
      type: integer
  related:
    constants:
      - HTTP_METHOD
      - HTTP_MIMETYPE
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_VERBOSE_THROTTLE
      - HTTP_CUSTOM_HEADER
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_USER_AGENT
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP/Client
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [HTTP_BODY_MAXLENGTH, 2048],
      string body);
    - key request_id = llHTTPRequest(string url, [HTTP_BODY_MAXLENGTH, 16384],
      string body);
    - key request_id = llHTTPRequest(string url, [HTTP_BODY_MAXLENGTH, 4096],
      string body);
  value: 2
HTTP_VERIFY_CERT:
  description: Used with llHTTPRequest to specify SSL certificate verification
  params:
    - default: 'TRUE'
      name: verify
      type: integer
  related:
    constants:
      - HTTP_METHOD
      - HTTP_MIMETYPE
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERBOSE_THROTTLE
      - HTTP_CUSTOM_HEADER
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_USER_AGENT
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP/Client
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [HTTP_VERIFY_CERT, TRUE],
      string body);
    - key request_id = llHTTPRequest(string url, [HTTP_VERIFY_CERT, FALSE],
      string body);
  value: 3
  version: '1.10.4(0)'
HTTP_BODY_TRUNCATED:
  description: Used with http_response to indicate truncation point in bytes
  related:
    constants:
      - HTTP_METHOD
      - HTTP_MIMETYPE
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_VERBOSE_THROTTLE
      - HTTP_CUSTOM_HEADER
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_USER_AGENT
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_response(key request_id, integer status, list metadata, string body)
      {
          if (~llListFindList(metadata, [HTTP_BODY_TRUNCATED]))
          {
              ; // do something
          }
      }
  value: 0
HTTP_CUSTOM_HEADER:
  description: Used with http_response to indicate truncation point in bytes
  params:
    - name: name
      type: string
    - name: value
      type: string
  related:
    constants:
      - HTTP_METHOD
      - HTTP_MIMETYPE
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_VERBOSE_THROTTLE
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_USER_AGENT
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [HTTP_CUSTOM_HEADER, string
      name, string value], string body);
  value: 5
HTTP_VERBOSE_THROTTLE:
  description: |-
    Used with llHTTPRequest to toggle errors on outgoing requests throttling hit
  params:
    - default: 'TRUE'
      name: noisy
      type: integer
  related:
    constants:
      - HTTP_METHOD
      - HTTP_MIMETYPE
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_CUSTOM_HEADER
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_USER_AGENT
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP/Client
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [HTTP_VERBOSE_THROTTLE, TRUE],
      string body);
    - key request_id = llHTTPRequest(string url, [HTTP_VERBOSE_THROTTLE, FALSE],
      string body);
  value: 4
HTTP_USER_AGENT:
  description: |-
    The user agent value is appended to the one generated by LSL itself. It
    should follow the syntax from the HTTP standard like: "My-Script-Name/1.0
    (Mozilla compatible)".
  params:
    - name: user_agent_value
      type: string
  related:
    constants:
      - HTTP_METHOD
      - HTTP_MIMETYPE
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_CUSTOM_HEADER
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_VERBOSE_THROTTLE
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP/Client
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [HTTP_USER_AGENT, string
      user_agent_value], string body);
  value: 7
  version: '17.06.13.327111'
HTTP_ACCEPT:
  description: |-
    HTTP_ACCEPT parameters can be passed to limit the number of mime types that
    are sent in the Accept: header of the HTTP request. Specified mime types may
    include character set and q parameters. This parameter may be specified
    multiple times. The specified mime type must be one already recognized by
    llHTTPRequest. The Content-Type header in the response is checked against
    the specified HTTP_ACCEPT parameters. If the value of the header is not in
    the list of acceptable mime types, llHTTPRequest will return 415 as a result
    code and the body will be `"Unsupported or unknown Content-Type."`
  params:
    - default: text/plain;charset=utf-8
      name: MIME_type
      type: string
  related:
    constants:
      - HTTP_METHOD
      - HTTP_MIMETYPE
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_CUSTOM_HEADER
      - HTTP_PRAGMA_NO_CACHE
      - HTTP_VERBOSE_THROTTLE
      - HTTP_USER_AGENT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP/Client
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [HTTP_ACCEPT, string
      MIME_type], string body);
  value: 8
  version: '17.06.13.327111'
PARCEL_COUNT_TOTAL:
  description: |-
    Used with llGetParcelPrimCount to get the total number of prims on
    the parcel
  related:
    constants:
      - PARCEL_COUNT_OWNER
      - PARCEL_COUNT_GROUP
      - PARCEL_COUNT_OTHER
      - PARCEL_COUNT_SELECTED
      - PARCEL_COUNT_TEMP
    functions:
      - llGetParcelMaxPrims
      - llGetParcelPrimCount
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Prim_Count
  scope: constant.language.integer
  type: integer
  usage:
    - integer li = llGetParcelPrimCount(vector pos, integer category, integer
      sim_wide);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_TOTAL, TRUE);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_TOTAL, FALSE);
  value: 0
  version: '1.13.0(8)'
PARCEL_COUNT_OWNER:
  description: |-
    Used with llGetParcelPrimCount to get the number of prims on the parcel
    owned by the owner
  related:
    constants:
      - PARCEL_COUNT_TOTAL
      - PARCEL_COUNT_GROUP
      - PARCEL_COUNT_OTHER
      - PARCEL_COUNT_SELECTED
      - PARCEL_COUNT_TEMP
    functions:
      - llGetParcelMaxPrims
      - llGetParcelPrimCount
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Prim_Count
  scope: constant.language.integer
  type: integer
  usage:
    - integer li = llGetParcelPrimCount(vector pos, integer category, integer
      sim_wide);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_OWNER, TRUE);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_OWNER, FALSE);
  value: 1
  version: '1.13.0(8)'
PARCEL_COUNT_GROUP:
  description: |-
    Used with llGetParcelPrimCount to get the number of prims on the
    parcel owned by the group
  related:
    constants:
      - PARCEL_COUNT_TOTAL
      - PARCEL_COUNT_OWNER
      - PARCEL_COUNT_OTHER
      - PARCEL_COUNT_SELECTED
      - PARCEL_COUNT_TEMP
    functions:
      - llGetParcelMaxPrims
      - llGetParcelPrimCount
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Prim_Count
  scope: constant.language.integer
  type: integer
  usage:
    - integer li = llGetParcelPrimCount(vector pos, integer category, integer
      sim_wide);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_GROUP, TRUE);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_GROUP, FALSE);
  value: 2
  version: '1.13.0(8)'
PARCEL_COUNT_OTHER:
  description: |-
    Used with llGetParcelPrimCount to get the number of prims on the
    parcel owned by others
  related:
    constants:
      - PARCEL_COUNT_TOTAL
      - PARCEL_COUNT_OWNER
      - PARCEL_COUNT_GROUP
      - PARCEL_COUNT_SELECTED
      - PARCEL_COUNT_TEMP
    functions:
      - llGetParcelMaxPrims
      - llGetParcelPrimCount
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Prim_Count
  scope: constant.language.integer
  type: integer
  usage:
    - integer li = llGetParcelPrimCount(vector pos, integer category, integer
      sim_wide);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_OTHER, TRUE);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_OTHER, FALSE);
  value: 3
  version: '1.13.0(8)'
PARCEL_COUNT_SELECTED:
  description: |-
    Used with llGetParcelPrimCount to get the number of prims on the
    parcel currently selected or sat upon
  related:
    constants:
      - PARCEL_COUNT_TOTAL
      - PARCEL_COUNT_OWNER
      - PARCEL_COUNT_GROUP
      - PARCEL_COUNT_OTHER
      - PARCEL_COUNT_TEMP
    functions:
      - llGetParcelMaxPrims
      - llGetParcelPrimCount
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Prim_Count
  scope: constant.language.integer
  type: integer
  usage:
    - integer li = llGetParcelPrimCount(vector pos, integer category, integer
      sim_wide);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_SELECTED,
      TRUE);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_SELECTED,
      FALSE);
  value: 4
  version: '1.13.0(8)'
PARCEL_COUNT_TEMP:
  description: |-
    Used with llGetParcelPrimCount to get the number of prims on the
    parcel that are temp on rez
  related:
    constants:
      - PARCEL_COUNT_TOTAL
      - PARCEL_COUNT_OWNER
      - PARCEL_COUNT_GROUP
      - PARCEL_COUNT_OTHER
      - PARCEL_COUNT_SELECTED
    functions:
      - llGetParcelMaxPrims
      - llGetParcelPrimCount
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Prim_Count
  scope: constant.language.integer
  type: integer
  usage:
    - integer li = llGetParcelPrimCount(vector pos, integer category, integer
      sim_wide);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_TEMP, TRUE);
    - integer li = llGetParcelPrimCount(vector pos, PARCEL_COUNT_TEMP, FALSE);
  value: 5
  version: '1.13.0(8)'
PARCEL_DETAILS_NAME:
  description: Used with llGetParcelDetails to get the parcel name
  related:
    constants:
      - PARCEL_DETAILS_DESC
      - PARCEL_DETAILS_OWNER
      - PARCEL_DETAILS_GROUP
      - PARCEL_DETAILS_AREA
      - PARCEL_DETAILS_ID
      - PARCEL_DETAILS_SEE_AVATARS
    functions:
      - llGetParcelDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Details
  scope: constant.language.integer
  type: integer
  usage:
    - list details = llGetParcelDetails(vector pos, list params); // pos.z is
      ignored
    - list details = llGetParcelDetails(vector pos, [PARCEL_DETAILS_NAME]);
  value: 0
  version: '1.13.0(8)'
PARCEL_DETAILS_DESC:
  description: Used with llGetParcelDetails to get the parcel description
  related:
    constants:
      - PARCEL_DETAILS_NAME
      - PARCEL_DETAILS_OWNER
      - PARCEL_DETAILS_GROUP
      - PARCEL_DETAILS_AREA
      - PARCEL_DETAILS_ID
      - PARCEL_DETAILS_SEE_AVATARS
    functions:
      - llGetParcelDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Details
  scope: constant.language.integer
  type: integer
  usage:
    - list details = llGetParcelDetails(vector pos, list params); // pos.z is
      ignored
    - list details = llGetParcelDetails(vector pos, [PARCEL_DETAILS_DESC]);
  value: 1
  version: '1.13.0(8)'
PARCEL_DETAILS_OWNER:
  description: Used with llGetParcelDetails to get the parcel owner id
  related:
    constants:
      - PARCEL_DETAILS_NAME
      - PARCEL_DETAILS_DESC
      - PARCEL_DETAILS_GROUP
      - PARCEL_DETAILS_AREA
      - PARCEL_DETAILS_ID
      - PARCEL_DETAILS_SEE_AVATARS
    functions:
      - llGetParcelDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Details
  scope: constant.language.integer
  type: integer
  usage:
    - list details = llGetParcelDetails(vector pos, list params); // pos.z is
      ignored
    - list details = llGetParcelDetails(vector pos, [PARCEL_DETAILS_OWNER]);
  value: 2
  version: '1.13.0(8)'
PARCEL_DETAILS_GROUP:
  description: Used with llGetParcelDetails to get the parcel group id
  related:
    constants:
      - PARCEL_DETAILS_NAME
      - PARCEL_DETAILS_DESC
      - PARCEL_DETAILS_OWNER
      - PARCEL_DETAILS_AREA
      - PARCEL_DETAILS_ID
      - PARCEL_DETAILS_SEE_AVATARS
    functions:
      - llGetParcelDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Details
  scope: constant.language.integer
  type: integer
  usage:
    - list details = llGetParcelDetails(vector pos, list params); // pos.z is
      ignored
    - list details = llGetParcelDetails(vector pos, [PARCEL_DETAILS_GROUP]);
  value: 3
  version: '1.13.0(8)'
PARCEL_DETAILS_AREA:
  description: |-
    Used with llGetParcelDetails to get the parcel area in square meters
  related:
    constants:
      - PARCEL_DETAILS_NAME
      - PARCEL_DETAILS_DESC
      - PARCEL_DETAILS_OWNER
      - PARCEL_DETAILS_GROUP
      - PARCEL_DETAILS_ID
      - PARCEL_DETAILS_SEE_AVATARS
    functions:
      - llGetParcelDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Details
  scope: constant.language.integer
  type: integer
  usage:
    - list details = llGetParcelDetails(vector pos, list params); // pos.z is
      ignored
    - list details = llGetParcelDetails(vector pos, [PARCEL_DETAILS_AREA]);
  value: 4
  version: '1.13.0(8)'
PARCEL_DETAILS_ID:
  description: Used with llGetParcelDetails to get the parcel id
  related:
    constants:
      - PARCEL_DETAILS_NAME
      - PARCEL_DETAILS_DESC
      - PARCEL_DETAILS_OWNER
      - PARCEL_DETAILS_GROUP
      - PARCEL_DETAILS_AREA
      - PARCEL_DETAILS_SEE_AVATARS
    functions:
      - llGetParcelDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Details
  scope: constant.language.integer
  type: integer
  usage:
    - list details = llGetParcelDetails(vector pos, list params); // pos.z is
      ignored
    - list details = llGetParcelDetails(vector pos, [PARCEL_DETAILS_ID]);
  value: 5
PARCEL_DETAILS_SEE_AVATARS:
  description: |-
    Used with llGetParcelDetails to get the avatars visibility setting
  related:
    constants:
      - PARCEL_DETAILS_NAME
      - PARCEL_DETAILS_DESC
      - PARCEL_DETAILS_OWNER
      - PARCEL_DETAILS_GROUP
      - PARCEL_DETAILS_AREA
      - PARCEL_DETAILS_ID
    functions:
      - llGetParcelDetails
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Parcel/Details
  scope: constant.language.integer
  type: integer
  usage:
    - list details = llGetParcelDetails(vector pos, list params); // pos.z is
      ignored
    - list details = llGetParcelDetails(vector pos, [
      PARCEL_DETAILS_SEE_AVATARS]);
  value: 6
STRING_TRIM_HEAD:
  description: Used with llStringTrim to trim leading spaces from a string
  related:
    constants:
      - STRING_TRIM
      - STRING_TRIM_TAIL
    functions:
      - llStringTrim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - string trimmed = llStringTrim(string src, integer type);
    - string trimmed = llStringTrim(string src, STRING_TRIM_HEAD);
  value: 1
  value_description: '0x1'
  version: '1.15.0(2)'
STRING_TRIM_TAIL:
  description: Used with llStringTrim to trim trailing spaces from a string
  related:
    constants:
      - STRING_TRIM
      - STRING_TRIM_HEAD
    functions:
      - llStringTrim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - string trimmed = llStringTrim(string src, integer type);
    - string trimmed = llStringTrim(string src, STRING_TRIM_TAIL);
  value: 2
  value_description: '0x2'
  version: '1.15.0(2)'
STRING_TRIM:
  description: |-
    Used with llStringTrim to trim both leading and trailing spaces from
    a string
  related:
    constants:
      - STRING_TRIM_HEAD
      - STRING_TRIM_TAIL
    functions:
      - llStringTrim
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - string trimmed = llStringTrim(string src, integer type);
    - string trimmed = llStringTrim(string src, STRING_TRIM);
  value: 3
  value_description: '0x3'
  version: '1.15.0(2)'
CLICK_ACTION_NONE:
  description: Used with llSetClickAction to disable the click action
  related:
    constants:
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_SIT
      - CLICK_ACTION_BUY
      - CLICK_ACTION_PAY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_OPEN_MEDIA
      - CLICK_ACTION_ZOOM
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_NONE);
  value: 0
  version: '1.19.1(0)'
CLICK_ACTION_TOUCH:
  description: |-
    Used with llSetClickAction to set touch as the default action when
    object is clicked
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_SIT
      - CLICK_ACTION_BUY
      - CLICK_ACTION_PAY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_OPEN_MEDIA
      - CLICK_ACTION_ZOOM
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_TOUCH);
  value: 0
  version: '1.19.1(0)'
CLICK_ACTION_SIT:
  description: |-
    Used with llSetClickAction to set sit as the default action when
    object is clicked
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_BUY
      - CLICK_ACTION_PAY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_OPEN_MEDIA
      - CLICK_ACTION_ZOOM
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_SIT);
  value: 1
  version: '1.19.1(0)'
CLICK_ACTION_BUY:
  description: |-
    Used with llSetClickAction to set buy as the default action when
    object is clicked
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_SIT
      - CLICK_ACTION_PAY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_OPEN_MEDIA
      - CLICK_ACTION_ZOOM
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_BUY);
  value: 2
  version: '1.19.1(0)'
CLICK_ACTION_PAY:
  description: |-
    Used with llSetClickAction to set pay as the default action when
    object is clicked
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_SIT
      - CLICK_ACTION_BUY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_OPEN_MEDIA
      - CLICK_ACTION_ZOOM
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_PAY);
  value: 3
  version: '1.19.1(0)'
CLICK_ACTION_OPEN:
  description: |-
    Used with llSetClickAction to set open as the default action when
    object is clicked
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_SIT
      - CLICK_ACTION_BUY
      - CLICK_ACTION_PAY
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_OPEN_MEDIA
      - CLICK_ACTION_ZOOM
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_OPEN);
  value: 4
  version: '1.19.1(0)'
CLICK_ACTION_PLAY:
  description: |-
    Used with llSetClickAction to set play as the default action when
    object is clicked
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_SIT
      - CLICK_ACTION_BUY
      - CLICK_ACTION_PAY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_OPEN_MEDIA
      - CLICK_ACTION_ZOOM
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_PLAY);
  value: 5
  version: '1.19.1(0)'
CLICK_ACTION_OPEN_MEDIA:
  description: |-
    Used with llSetClickAction to set open-media as the default action
    when object is clicked
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_SIT
      - CLICK_ACTION_BUY
      - CLICK_ACTION_PAY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_ZOOM
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_OPEN_MEDIA);
  value: 6
  version: '1.19.1(0)'
CLICK_ACTION_ZOOM:
  description: |-
    Used with llSetClickAction to set zoom in as the default action when
    object is clicked
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_SIT
      - CLICK_ACTION_BUY
      - CLICK_ACTION_PAY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_OPEN_MEDIA
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llPassTouches
      - llSetClickAction
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Click_Action
  scope: constant.language.integer
  type: integer
  usage:
    - llSetClickAction(integer action);
    - llSetClickAction(CLICK_ACTION_ZOOM);
  value: 7
  version: '1.32'
TOUCH_INVALID_FACE:
  description: |-
    Value returned by llDetectedTouchFace when the touch position is
    not valid
  related:
    functions:
      - llDetectedTouchFace
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Touch
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llDetectedTouchFace(0) == TOUCH_INVALID_FACE)
      {
          ; // do something
      }
  value: -1
  value_description: '0xFFFFFFFF'
PRIM_MEDIA_ALT_IMAGE_ENABLE:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to enable the default alt image
    for media
  params:
    - name: boolean
      type: integer
  related:
    constants:
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_ALT_IMAGE_ENABLE, integer boolean]);
    - integer boolean = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_ALT_IMAGE_ENABLE]);
  value: 0
PRIM_MEDIA_CONTROLS:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine the controls shown
    for media
  params:
    - name: controls
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [PRIM_MEDIA_CONTROLS,
      integer control]);
    - integer status = llSetPrimMediaParams(integer face, [PRIM_MEDIA_CONTROLS,
      PRIM_MEDIA_CONTROLS_STANDARD]);
    - integer status = llSetPrimMediaParams(integer face, [PRIM_MEDIA_CONTROLS,
      PRIM_MEDIA_CONTROLS_MINI]);
    - integer control = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_CONTROLS]);
  value: 1
PRIM_MEDIA_CURRENT_URL:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to navigate/access the current URL
  params:
    - name: current_url
      type: string
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_CURRENT_URL, string current_url]);
    - string current_url = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_CURRENT_URL]);
  value: 2
PRIM_MEDIA_HOME_URL:
  description: Used with ll{Get,Set}PrimMediaParams to access the home URL
  params:
    - name: home_url
      type: string
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_HOME_URL, string home_url]);
    - string home_url = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_HOME_URL]);
  value: 3
PRIM_MEDIA_AUTO_LOOP:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine if media should
    auto-loop (if applicable)
  params:
    - name: boolean
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [PRIM_MEDIA_AUTO_LOOP,
      integer boolean]);
    - integer boolean = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_AUTO_LOOP]);
  value: 4
PRIM_MEDIA_AUTO_PLAY:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine if media should
    start playing as soon as it is created
  params:
    - name: boolean
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [PRIM_MEDIA_AUTO_PLAY,
      integer boolean]);
    - integer boolean = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_AUTO_PLAY]);
  value: 5
PRIM_MEDIA_AUTO_SCALE:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine if media should
    scale to fit the face it is on
  params:
    - name: boolean
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_AUTO_SCALE, integer boolean]);
    - integer boolean = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_AUTO_SCALE]);
  value: 6
PRIM_MEDIA_AUTO_ZOOM:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine if the user would zoom in
    when viewing media
  params:
    - name: boolean
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_AUTO_ZOOM, integer boolean]);
    - integer boolean = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_AUTO_ZOOM]);
  value: 7
PRIM_MEDIA_FIRST_CLICK_INTERACT:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine whether the user
    interacts with media or not when she first clicks it (versus selection)
  params:
    - name: boolean
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_FIRST_CLICK_INTERACT, integer boolean]);
    - integer boolean = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_FIRST_CLICK_INTERACT]);
  value: 8
PRIM_MEDIA_WIDTH_PIXELS:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to access the media's width
    in pixels
  params:
    - name: width
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_WIDTH_PIXELS, integer width]);
    - integer width = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_WIDTH_PIXELS]);
  value: 9
PRIM_MEDIA_HEIGHT_PIXELS:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to access the media's height
    in pixels
  params:
    - name: height
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_HEIGHT_PIXELS, integer height]);
    - integer height = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_HEIGHT_PIXELS]);
  value: 10
PRIM_MEDIA_WHITELIST_ENABLE:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine if the domain whitelist
    is enabled
  params:
    - name: boolean
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_WHITELIST_ENABLE, integer boolean]);
    - integer boolean = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_WHITELIST_ENABLE]);
  value: 11
PRIM_MEDIA_WHITELIST:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to access the media's list of
    allowable URL prefixes to navigate to
  params:
    - name: CSV
      type: string
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_WHITELIST, string csv]);
    - string csv = llGetPrimMediaParams(integer face, [PRIM_MEDIA_WHITELIST]);
  value: 12
PRIM_MEDIA_PERMS_INTERACT:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine the permissions
    for who can interact with the media
  params:
    - name: perms
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, integer perms]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, PRIM_MEDIA_PERM_NONE]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, PRIM_MEDIA_PERM_OWNER]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, PRIM_MEDIA_PERM_GROUP]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, PRIM_MEDIA_PERM_ANYONE]);
    - integer perms = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT]);
  value: 13
PRIM_MEDIA_PERMS_CONTROL:
  description: |-
    Used with ll{Get,Set}PrimMediaParams to determine the permissions
    for who has controls
  params:
    - name: perms
      type: integer
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, integer perms]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, PRIM_MEDIA_PERM_NONE]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, PRIM_MEDIA_PERM_OWNER]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, PRIM_MEDIA_PERM_GROUP]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, PRIM_MEDIA_PERM_ANYONE]);
    - integer perms = llGetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL]);
  value: 14
PRIM_MEDIA_PARAM_MAX:
  description: The value of the largest media param
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
  scope: constant.language.integer
  type: integer
  value: 14
PRIM_MEDIA_CONTROLS_STANDARD:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_CONTROLS value
    meaning "standard controls"
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_CONTROLS, PRIM_MEDIA_CONTROLS_STANDARD]);
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_CONTROLS]) == PRIM_MEDIA_CONTROLS_STANDARD)
      {
          ; // do something
      }
  value: 0
PRIM_MEDIA_CONTROLS_MINI:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_CONTROLS value
    meaning "mini controls"
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_CONTROLS, PRIM_MEDIA_CONTROLS_MINI]);
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_CONTROLS]) == PRIM_MEDIA_CONTROLS_MINI)
      {
          ; // do something
      }
  value: 1
PRIM_MEDIA_PERM_NONE:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT
    or PRIM_MEDIA_PERMS_CONTROL bit, no permissions
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, PRIM_MEDIA_PERM_NONE]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, PRIM_MEDIA_PERM_NONE]);
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_PERMS_INTERACT]) == PRIM_MEDIA_PERM_NONE)
      {
          ; // do something
      }
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_PERMS_CONTROL]) == PRIM_MEDIA_PERM_NONE)
      {
          ; // do something
      }
  value: 0
  value_description: '0x0'
PRIM_MEDIA_PERM_OWNER:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT
    or PRIM_MEDIA_PERMS_CONTROL bit, owner permissions
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, PRIM_MEDIA_PERM_OWNER]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, PRIM_MEDIA_PERM_OWNER]);
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_PERMS_INTERACT]) == PRIM_MEDIA_PERM_OWNER)
      {
          ; // do something
      }
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_PERMS_CONTROL]) == PRIM_MEDIA_PERM_OWNER)
      {
          ; // do something
      }
  value: 1
  value_description: '0x1'
PRIM_MEDIA_PERM_GROUP:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT
    or PRIM_MEDIA_PERMS_CONTROL bit, group permissions
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, PRIM_MEDIA_PERM_GROUP]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, PRIM_MEDIA_PERM_GROUP]);
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_PERMS_INTERACT]) == PRIM_MEDIA_PERM_GROUP)
      {
          ; // do something
      }
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_PERMS_CONTROL]) == PRIM_MEDIA_PERM_GROUP)
      {
          ; // do something
      }
  value: 2
  value_description: '0x2'
PRIM_MEDIA_PERM_ANYONE:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT
    or PRIM_MEDIA_PERMS_CONTROL bit, anyone has permissions
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_INTERACT, PRIM_MEDIA_PERM_ANYONE]);
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_PERMS_CONTROL, PRIM_MEDIA_PERM_ANYONE]);
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_PERMS_INTERACT]) == PRIM_MEDIA_PERM_ANYONE)
      {
          ; // do something
      }
    - |-
      if (llGetPrimMediaParams(integer face, [PRIM_MEDIA_PERMS_CONTROL]) == PRIM_MEDIA_PERM_ANYONE)
      {
          ; // do something
      }
  value: 4
  value_description: '0x4'
PRIM_MEDIA_MAX_URL_LENGTH:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, the maximum length of
    PRIM_MEDIA_CURRENT_URL or PRIM_MEDIA_HOME_URL
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
  scope: constant.language.integer
  type: integer
  value: 1024
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_MAX_URL_LENGTH, 1024])
PRIM_MEDIA_MAX_WHITELIST_SIZE:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, the maximum length, in bytes,
    of PRIM_MEDIA_WHITELIST
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
  scope: constant.language.integer
  type: integer
  value: 1024
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_MAX_WHITELIST_SIZE, 1024])
PRIM_MEDIA_MAX_WHITELIST_COUNT:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, the maximum number of items
    allowed in PRIM_MEDIA_WHITELIST
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
  scope: constant.language.integer
  type: integer
  value: 64
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_MAX_WHITELIST_COUNT, 64])
PRIM_MEDIA_MAX_WIDTH_PIXELS:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, the maximum width allowed in
    PRIM_MEDIA_WIDTH_PIXELS
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
  scope: constant.language.integer
  type: integer
  value: 2048
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_MAX_WIDTH_PIXELS, 1024])
PRIM_MEDIA_MAX_HEIGHT_PIXELS:
  description: |-
    Used with ll{Get,Set}PrimMediaParams, the maximum width allowed in
    PRIM_MEDIA_HEIGHT_PIXELS
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
  scope: constant.language.integer
  type: integer
  value: 2048
  usage:
    - integer status = llSetPrimMediaParams(integer face, [
      PRIM_MEDIA_MAX_HEIGHT_PIXELS, 1024])
STATUS_OK:
  description: Result of llSetPrimMediaParams function call was success
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSetPrimMediaParams(integer face, list params) == STATUS_OK)
      {
          ; // do something
      }
  value: 0
STATUS_MALFORMED_PARAMS:
  description: |-
    llSetPrimMediaParams function was called with malformed params
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSetPrimMediaParams(integer face, list params) == STATUS_MALFORMED_PARAMS)
      {
          ; // do something
      }
  value: 1000
STATUS_TYPE_MISMATCH:
  description: |-
    Argument(s) passed to llSetPrimMediaParams function had a type mismatch
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSetPrimMediaParams(integer face, list params) == STATUS_TYPE_MISMATCH)
      {
          ; // do something
      }
  value: 1001
STATUS_BOUNDS_ERROR:
  description: |-
    Argument(s) passed to llSetPrimMediaParams function had a bounds error
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSetPrimMediaParams(integer face, list params) == STATUS_BOUNDS_ERROR)
      {
          ; // do something
      }
  value: 1002
STATUS_NOT_FOUND:
  description: |-
    llSetPrimMediaParams reported that the object or other item was not found
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSetPrimMediaParams(integer face, list params) == STATUS_NOT_FOUND)
      {
          ; // do something
      }
  value: 1003
STATUS_NOT_SUPPORTED:
  description: Feature not supported in llSetPrimMediaParams
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSetPrimMediaParams(integer face, list params) == STATUS_NOT_SUPPORTED)
      {
          ; // do something
      }
  value: 1004
STATUS_INTERNAL_ERROR:
  description: An internal error occurred in llSetPrimMediaParams
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_WHITELIST_FAILED
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSetPrimMediaParams(integer face, list params) == STATUS_INTERNAL_ERROR)
      {
          ; // do something
      }
  value: 1999
STATUS_WHITELIST_FAILED:
  description: URL failed to pass whitelist in llSetPrimMediaParams
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_MAX_URL_LENGTH
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_MAX_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_MAX_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_MAX_WHITELIST_COUNT
      - PRIM_MEDIA_MAX_WHITELIST_SIZE
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERMS_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
      - PRIM_MEDIA_PARAM_MAX
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
    functions:
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      if (llSetPrimMediaParams(integer face, list params) == STATUS_WHITELIST_FAILED)
      {
          ; // do something
      }
  value: 2001
CONTENT_TYPE_TEXT:
  description: Used with llSetContentType to indicate text contents
  related:
    constants:
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_TEXT);
          llHTTPResponse(request_id, 200, body);
      }
  value: 0
CONTENT_TYPE_HTML:
  description: Used with llSetContentType to indicate HTML contents
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_HTML);
          llHTTPResponse(request_id, 200, body);
      }
  value: 1
CONTENT_TYPE_XML:
  description: Used with llSetContentType to indicate XML contents
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_XML);
          llHTTPResponse(request_id, 200, body);
      }
  value: 2
CONTENT_TYPE_XHTML:
  description: Used with llSetContentType to indicate XHTML contents
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_XHTML);
          llHTTPResponse(request_id, 200, body);
      }
  value: 3
CONTENT_TYPE_ATOM:
  description: |-
    Used with llSetContentType to indicate Atom Syndication Format contents
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_ATOM);
          llHTTPResponse(request_id, 200, body);
      }
  value: 4
CONTENT_TYPE_JSON:
  description: |-
    Used with llSetContentType to indicate JSON (JavaScript Object Notation)
    contents
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_JSON);
          llHTTPResponse(request_id, 200, body);
      }
  value: 5
CONTENT_TYPE_LLSD:
  description: |-
    Used with llSetContentType to indicate LLSD (Linden Lab Serialized
    Data) contents
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_LLSD);
          llHTTPResponse(request_id, 200, body);
      }
  value: 6
CONTENT_TYPE_FORM:
  description: Used with llSetContentType to indicate form data contents
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_FORM);
          llHTTPResponse(request_id, 200, body);
      }
  value: 7
CONTENT_TYPE_RSS:
  description: Used with llSetContentType to indicate RSS contents
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
    events:
      - http_request
      - http_response
    functions:
      - llHTTPRequest
      - llHTTPResponse
      - llSetContentType
    wikipedia:
      en:
        - Internet_media_type
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Chat
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      http_request(key request_id, string method, string body)
      {
          llSetContentType(request_id, CONTENT_TYPE_RSS);
          llHTTPResponse(request_id, 200, body);
      }
  value: 8
KFM_COMMAND:
  description: |-
    Option for llSetKeyframedMotion, followed by one of KFM_CMD_STOP,
    KFM_CMD_PLAY, KFM_CMD_PAUSE. Note that KFM_COMMAND must be the only option
    in the list, and cannot be specified in the same function call that sets the
    keyframes list.
  params:
    - name: command
      type: integer
  related:
    constants:
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, integer command]);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, KFM_CMD_PLAY]);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, KFM_CMD_STOP]);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, KFM_CMD_PAUSE]);
  value: 0
KFM_MODE:
  description: |-
    Option for llSetKeyframedMotion, used to specify the playback mode,
    followed by one of KFM_FORWARD, KFM_LOOP, KFM_PING_PONG or KFM_REVERSE
  params:
    - default: KFM_FORWARD
      name: mode
      type: integer
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, integer mode]);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, KFM_FORWARD]);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, KFM_LOOP]);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, KFM_PING_PONG]);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, KFM_REVERSE]);
  value: 1
KFM_DATA:
  description: |-
    Option for llSetKeyframedMotion, followed by a bitwise combination
    of KFM_TRANSLATION and KFM_ROTATION. If you specify one or the other, you
    should only include translations or rotations in your keyframe list.
  params:
    - default: (KFM_ROTATION | KFM_TRANSLATION)
      name: fields
      type: integer
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA, integer fields]);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA,
      (KFM_ROTATION | KFM_TRANSLATION)]);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA, KFM_ROTATION]);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA, KFM_TRANSLATION]);
  value: 2
KFM_FORWARD:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_MODE to specify the
    forward playback mode
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, integer mode]);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, KFM_FORWARD]);
  value: 0
KFM_LOOP:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_MODE to specify the
    loop playback mode
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, integer mode]);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, KFM_LOOP]);
  value: 1
KFM_PING_PONG:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_MODE to specify the
    ping pong playback mode
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, integer mode]);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, KFM_PING_PONG]);
  value: 2
KFM_REVERSE:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_MODE to specify the
    reverse playback mode
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, integer mode]);
    - llSetKeyframedMotion(list keyframes, [KFM_MODE, KFM_REVERSE]);
  value: 3
KFM_ROTATION:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_DATA, possibly as
    a bitwise combination with KFM_TRANSLATION
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA, integer fields]);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA,
      (KFM_ROTATION | KFM_TRANSLATION)]);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA, KFM_ROTATION]);
  value: 1
KFM_TRANSLATION:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_DATA, possibly as
    a bitwise combination with KFM_ROTATION
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA, integer fields]);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA,
      (KFM_ROTATION | KFM_TRANSLATION)]);
    - llSetKeyframedMotion(list keyframes, [KFM_DATA, KFM_TRANSLATION]);
  value: 2
KFM_CMD_PLAY:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_COMMAND to play the
    motion
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, integer command]);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, KFM_CMD_PLAY]);
  value: 0
KFM_CMD_STOP:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_COMMAND to stop the
    motion
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, integer command]);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, KFM_CMD_STOP]);
  value: 1
KFM_CMD_PAUSE:
  description: |-
    Option for llSetKeyframedMotion, used after KFM_COMMAND to pause
    the motion
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
    functions:
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - llSetKeyframedMotion(list keyframes, list options);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, integer command]);
    - llSetKeyframedMotion(list keyframes, [KFM_COMMAND, KFM_CMD_PAUSE]);
  value: 2
ESTATE_ACCESS_ALLOWED_AGENT_ADD:
  description: |-
    Used with llManageEstateAccess to add an agent to this estate's allowed
    residents list
  related:
    constants:
      - ESTATE_ACCESS_ALLOWED_AGENT_REMOVE
      - ESTATE_ACCESS_ALLOWED_GROUP_ADD
      - ESTATE_ACCESS_ALLOWED_GROUP_REMOVE
      - ESTATE_ACCESS_BANNED_AGENT_ADD
      - ESTATE_ACCESS_BANNED_AGENT_REMOVE
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llManageEstateAccess
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Security
      - LSL_Region
      - LSL_Estate
  scope: constant.language.integer
  type: integer
  usage:
    - integer success = llManageEstateAccess(integer action, key avatar);
    - integer success = llManageEstateAccess(ESTATE_ACCESS_ALLOWED_AGENT_ADD,
      key avatar);
  value: 4
  value_description: '0x4'
ESTATE_ACCESS_ALLOWED_AGENT_REMOVE:
  description: |-
    Used with llManageEstateAccess to remove an agent from this estate's
    allowed residents list
  related:
    constants:
      - ESTATE_ACCESS_ALLOWED_AGENT_ADD
      - ESTATE_ACCESS_ALLOWED_GROUP_ADD
      - ESTATE_ACCESS_ALLOWED_GROUP_REMOVE
      - ESTATE_ACCESS_BANNED_AGENT_ADD
      - ESTATE_ACCESS_BANNED_AGENT_REMOVE
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llManageEstateAccess
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Security
      - LSL_Region
      - LSL_Estate
  scope: constant.language.integer
  type: integer
  usage:
    - integer success = llManageEstateAccess(integer action, key avatar);
    - integer success = llManageEstateAccess(ESTATE_ACCESS_ALLOWED_AGENT_REMOVE,
      key avatar);
  value: 8
  value_description: '0x8'
ESTATE_ACCESS_ALLOWED_GROUP_ADD:
  description: |-
    Used with llManageEstateAccess to add a group to this estate's allowed
    groups list
  related:
    constants:
      - ESTATE_ACCESS_ALLOWED_AGENT_ADD
      - ESTATE_ACCESS_ALLOWED_AGENT_REMOVE
      - ESTATE_ACCESS_ALLOWED_GROUP_REMOVE
      - ESTATE_ACCESS_BANNED_AGENT_ADD
      - ESTATE_ACCESS_BANNED_AGENT_REMOVE
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llManageEstateAccess
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Security
      - LSL_Region
      - LSL_Estate
  scope: constant.language.integer
  type: integer
  usage:
    - integer success = llManageEstateAccess(integer action, key avatar);
    - integer success = llManageEstateAccess(ESTATE_ACCESS_ALLOWED_GROUP_ADD,
      key avatar);
  value: 16
  value_description: '0x10'
ESTATE_ACCESS_ALLOWED_GROUP_REMOVE:
  description: |-
    Used with llManageEstateAccess to remove a group from this estate's
    allowed groups list
  related:
    constants:
      - ESTATE_ACCESS_ALLOWED_AGENT_ADD
      - ESTATE_ACCESS_ALLOWED_AGENT_REMOVE
      - ESTATE_ACCESS_ALLOWED_GROUP_ADD
      - ESTATE_ACCESS_BANNED_AGENT_ADD
      - ESTATE_ACCESS_BANNED_AGENT_REMOVE
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llManageEstateAccess
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Security
      - LSL_Region
      - LSL_Estate
  scope: constant.language.integer
  type: integer
  usage:
    - integer success = llManageEstateAccess(integer action, key avatar);
    - integer success = llManageEstateAccess(ESTATE_ACCESS_ALLOWED_GROUP_REMOVE,
      key avatar);
  value: 32
  value_description: '0x20'
ESTATE_ACCESS_BANNED_AGENT_ADD:
  description: |-
    Used with llManageEstateAccess to add an agent to this estate's banned
    residents list
  related:
    constants:
      - ESTATE_ACCESS_ALLOWED_AGENT_ADD
      - ESTATE_ACCESS_ALLOWED_AGENT_REMOVE
      - ESTATE_ACCESS_ALLOWED_GROUP_ADD
      - ESTATE_ACCESS_ALLOWED_GROUP_REMOVE
      - ESTATE_ACCESS_BANNED_AGENT_REMOVE
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llManageEstateAccess
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Security
      - LSL_Region
      - LSL_Estate
  scope: constant.language.integer
  type: integer
  usage:
    - integer success = llManageEstateAccess(integer action, key avatar);
    - integer success = llManageEstateAccess(ESTATE_ACCESS_BANNED_AGENT_ADD,
      key avatar);
  value: 64
  value_description: '0x40'
ESTATE_ACCESS_BANNED_AGENT_REMOVE:
  description: |-
    Used with llManageEstateAccess to remove an agent from this estate's
    banned residents list
  related:
    constants:
      - ESTATE_ACCESS_ALLOWED_AGENT_ADD
      - ESTATE_ACCESS_ALLOWED_AGENT_REMOVE
      - ESTATE_ACCESS_ALLOWED_GROUP_ADD
      - ESTATE_ACCESS_ALLOWED_GROUP_REMOVE
      - ESTATE_ACCESS_BANNED_AGENT_ADD
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llManageEstateAccess
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Security
      - LSL_Region
      - LSL_Estate
  scope: constant.language.integer
  type: integer
  usage:
    - integer success = llManageEstateAccess(integer action, key avatar);
    - integer success = llManageEstateAccess(ESTATE_ACCESS_BANNED_AGENT_REMOVE,
      key avatar);
  value: 128
  value_description: '0x80'
PROFILE_NONE:
  description: Disables memory profiling when passed to llScriptProfiler
  related:
    constants:
      - PROFILE_SCRIPT_MEMORY
    functions:
      - llGetMemoryLimit
      - llGetSPMaxMemory
      - llScriptProfiler
      - llSetMemoryLimit
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Script_Profiler
  scope: constant.language.integer
  type: integer
  usage:
    - llScriptProfiler(integer flags);
    - llScriptProfiler(PROFILE_NONE);
  value: 0
PROFILE_SCRIPT_MEMORY:
  description: Enables memory profiling when passed to llScriptProfiler
  related:
    constants:
      - PROFILE_NONE
    functions:
      - llGetMemoryLimit
      - llGetSPMaxMemory
      - llScriptProfiler
      - llSetMemoryLimit
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Script_Profiler
  scope: constant.language.integer
  type: integer
  usage:
    - llScriptProfiler(integer flags);
    - llScriptProfiler(PROFILE_SCRIPT_MEMORY);
  value: 1
RCERR_UNKNOWN:
  description: Returned by llCastRay when the raycast failed for an unspecified
      reason
  related:
    constants:
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
    - '[key uuid, vector position, /* integer link_num, vector normal, */ RCERR_UNKNOWN]
      = llCastRay(vector start, vector end, list options);'
  value: -1
RCERR_SIM_PERF_LOW:
  description: |-
    Returned by llCastRay when the raycast failed because simulator performance
    is low
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
    - '[key uuid, vector position, /* integer link_num, vector normal, */ RCERR_SIM_PERF_LOW]
      = llCastRay(vector start, vector end, list options);'
  value: -2
RCERR_CAST_TIME_EXCEEDED:
  description: |-
    Returned by llCastRay when the raycast failed because the parcel
    or agent has exceeded the maximum time allowed for raycasting
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
    - '[key uuid, vector position, /* integer link_num, vector normal, */ RCERR_CAST_TIME_EXCEEDED]
      = llCastRay(vector start, vector end, list options);'
  value: -3
RC_REJECT_TYPES:
  description: |-
    Option for llCastRay used to ignore specific types of objects, followed
    with a bitwise combination of RC_REJECT_AGENTS, RC_REJECT_PHYSICAL,
    RC_REJECT_NONPHYSICAL and RC_REJECT_LAND
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, integer filter]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 0
RC_DETECT_PHANTOM:
  description: |-
    Option for llCastRay followed with TRUE to detect phantom AND volume
    detect objects, FASLE otherwise
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DETECT_PHANTOM, integer detect_phantom]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 1
RC_DATA_FLAGS:
  description: |-
    Option for llCastRay followed with a bitwise combination of RC_GET_NORMAL,
    RC_GET_ROOT_KEY and RC_GET_LINK_NUM
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, integer flags]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 2
RC_MAX_HITS:
  description: |-
    Option for llCastRay followed with an integer specifying the maximum
    number of hits to return (must be <= 256)
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_MAX_HITS, integer max_hits]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 3
RC_REJECT_AGENTS:
  description: |-
    Flag used in the RC_REJECT_TYPES mask to reject agents in llCastRay
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, integer filter]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, RC_REJECT_AGENTS]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_AGENTS | RC_REJECT_PHYSICAL)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_AGENTS | RC_REJECT_NONPHYSICAL)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_AGENTS | RC_REJECT_LAND)]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 1
  value_description: '0x1'
RC_REJECT_PHYSICAL:
  description: |-
    Flag used in the RC_REJECT_TYPES mask to reject physical objects
    in llCastRay
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, integer filter]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, RC_REJECT_PHYSICAL]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_PHYSICAL | RC_REJECT_AGENTS)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_PHYSICAL | RC_REJECT_NONPHYSICAL)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_PHYSICAL | RC_REJECT_LAND)]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 2
  value_description: '0x2'
RC_REJECT_NONPHYSICAL:
  description: |-
    Flag used in the RC_REJECT_TYPES mask to reject non-physical objects
    in llCastRay
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, integer filter]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, RC_REJECT_NONPHYSICAL]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_NONPHYSICAL | RC_REJECT_AGENTS)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_NONPHYSICAL | RC_REJECT_PHYSICAL)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_NONPHYSICAL | RC_REJECT_LAND)]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 4
  value_description: '0x4'
RC_REJECT_LAND:
  description: Flag used in the RC_REJECT_TYPES mask to reject land in llCastRay
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, integer filter]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, RC_REJECT_LAND]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_LAND | RC_REJECT_AGENTS)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_LAND | RC_REJECT_PHYSICAL)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_REJECT_TYPES, (RC_REJECT_LAND | RC_REJECT_NONPHYSICAL)]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 8
  value_description: '0x8'
RC_GET_NORMAL:
  description: |-
    Flag used in the RC_DATA_FLAGS mask to get hit normals in llCastRay
    results
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, integer flags]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, RC_GET_NORMAL]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, (RC_GET_NORMAL | RC_GET_ROOT_KEY)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, (RC_GET_NORMAL | RC_GET_LINK_NUM)]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 1
  value_description: '0x1'
RC_GET_ROOT_KEY:
  description: |-
    Flag used in the RC_DATA_FLAGS mask to get root keys in llCastRay
    results
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, integer flags]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, RC_GET_ROOT_KEY]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, (RC_GET_ROOT_KEY | RC_GET_NORMAL)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, (RC_GET_ROOT_KEY | RC_GET_LINK_NUM)]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 2
  value_description: '0x2'
RC_GET_LINK_NUM:
  description: |-
    Flag used in the RC_DATA_FLAGS mask to get link numbers in llCastRay
    results
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Physics
      - LSL_Light
    wikipedia:
      en:
        - Ray_casting
  scope: constant.language.integer
  type: integer
  usage:
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      list options);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, integer flags]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, RC_GET_LINK_NUM]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, (RC_GET_LINK_NUM | RC_GET_NORMAL)]);
    - list strided_values_and_status_code = llCastRay(vector start, vector end,
      [RC_DATA_FLAGS, (RC_GET_LINK_NUM | RC_GET_ROOT_KEY)]);
    - '[key uuid, vector position, /* integer link_num, vector normal, */ integer
      status_code] = llCastRay(vector start, vector end, list options);'
  value: 4
  value_description: '0x4'
PURSUIT_OFFSET:
  related:
    constants:
      - REQUIRE_LINE_OF_SIGHT
      - PURSUIT_FUZZ_FACTOR
      - PURSUIT_INTERCEPT
      - PURSUIT_GOAL_TOLERANCE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llPursue(key target, list options);
    - llPursue(key target, [PURSUIT_OFFSET, vector offset]);
    - llPursue(key target, [PURSUIT_OFFSET, ZERO_VECTOR]);
  value: 1
REQUIRE_LINE_OF_SIGHT:
  related:
    constants:
      - PURSUIT_OFFSET
      - PURSUIT_FUZZ_FACTOR
      - PURSUIT_INTERCEPT
      - PURSUIT_GOAL_TOLERANCE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llPursue(key target, list options);
    - llPursue(key target, [REQUIRE_LINE_OF_SIGHT, integer boolean]);
    - llPursue(key target, [REQUIRE_LINE_OF_SIGHT, FALSE]);
  value: 2
PURSUIT_FUZZ_FACTOR:
  related:
    constants:
      - PURSUIT_OFFSET
      - REQUIRE_LINE_OF_SIGHT
      - PURSUIT_INTERCEPT
      - PURSUIT_GOAL_TOLERANCE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llPursue(key target, list options);
    - llPursue(key target, [PURSUIT_FUZZ_FACTOR, float fuzz_factor]);
    - llPursue(key target, [PURSUIT_FUZZ_FACTOR, 0.0]);
  value: 3
PURSUIT_INTERCEPT:
  related:
    constants:
      - PURSUIT_OFFSET
      - REQUIRE_LINE_OF_SIGHT
      - PURSUIT_FUZZ_FACTOR
      - PURSUIT_GOAL_TOLERANCE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llPursue(key target, list options);
    - llPursue(key target, [PURSUIT_INTERCEPT, integer boolean]);
    - llPursue(key target, [PURSUIT_INTERCEPT, FALSE]);
  value: 4
PURSUIT_GOAL_TOLERANCE:
  related:
    constants:
      - PURSUIT_OFFSET
      - REQUIRE_LINE_OF_SIGHT
      - PURSUIT_FUZZ_FACTOR
      - PURSUIT_INTERCEPT
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llPursue(key target, list options);
    - llPursue(key target, [PURSUIT_GOAL_TOLERANCE, float tolerance]);
    - llPursue(key target, [PURSUIT_GOAL_TOLERANCE, 0.25]);
    - llPursue(key target, [PURSUIT_GOAL_TOLERANCE, 10.0]);
  value: 5
FORCE_DIRECT_PATH:
  params:
    - default: 'FALSE'
      name: forceDirectPath
      type: integer
  related:
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
      - Viewer_coordinate_frames#Region
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llNavigateTo(vector pos, list options);
    - llNavigateTo(vector pos, [FORCE_DIRECT_PATH, integer boolean]);
    - llNavigateTo(vector pos, [FORCE_DIRECT_PATH, FALSE]);
  value: 1
AVOID_CHARACTERS:
  related:
    constants:
      - CHARACTER_DESIRED_SPEED
      - CHARACTER_RADIUS
      - CHARACTER_LENGTH
      - CHARACTER_ORIENTATION
      - VERTICAL
      - HORIZONTAL
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_FAST
      - TRAVERSAL_TYPE_NONE
      - CHARACTER_TYPE
      - CHARACTER_TYPE_NONE
      - CHARACTER_TYPE_A
      - CHARACTER_TYPE_B
      - CHARACTER_TYPE_C
      - CHARACTER_TYPE_D
      - CHARACTER_AVOIDANCE_MODE
      - AVOID_DYNAMIC_OBSTACLES
      - AVOID_NONE
      - CHARACTER_MAX_ACCEL
      - CHARACTER_MAX_DECEL
      - CHARACTER_DESIRED_TURN_SPEED
      - CHARACTER_MAX_TURN_RADIUS
      - CHARACTER_MAX_SPEED
      - CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES
      - CHARACTER_STAY_WITHIN_PARCEL
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter(list options);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE, integer mode]);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE, AVOID_CHARACTERS]);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE,
      (AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES)]);
    - llUpdateCharacter(list options);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE, integer mode]);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE, AVOID_CHARACTERS]);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE,
      (AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES)]);
  value: 1
AVOID_DYNAMIC_OBSTACLES:
  related:
    constants:
      - CHARACTER_DESIRED_SPEED
      - CHARACTER_RADIUS
      - CHARACTER_LENGTH
      - CHARACTER_ORIENTATION
      - VERTICAL
      - HORIZONTAL
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_FAST
      - TRAVERSAL_TYPE_NONE
      - CHARACTER_TYPE
      - CHARACTER_TYPE_NONE
      - CHARACTER_TYPE_A
      - CHARACTER_TYPE_B
      - CHARACTER_TYPE_C
      - CHARACTER_TYPE_D
      - CHARACTER_AVOIDANCE_MODE
      - AVOID_CHARACTERS
      - AVOID_NONE
      - CHARACTER_MAX_ACCEL
      - CHARACTER_MAX_DECEL
      - CHARACTER_DESIRED_TURN_SPEED
      - CHARACTER_MAX_TURN_RADIUS
      - CHARACTER_MAX_SPEED
      - CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES
      - CHARACTER_STAY_WITHIN_PARCEL
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter(list options);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE, integer mode]);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE, AVOID_DYNAMIC_OBSTACLES]);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE,
      (AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES)]);
    - llUpdateCharacter(list options);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE, integer mode]);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE, AVOID_DYNAMIC_OBSTACLES]);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE,
      (AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES)]);
  value: 2
AVOID_NONE:
  related:
    constants:
      - CHARACTER_DESIRED_SPEED
      - CHARACTER_RADIUS
      - CHARACTER_LENGTH
      - CHARACTER_ORIENTATION
      - VERTICAL
      - HORIZONTAL
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_FAST
      - TRAVERSAL_TYPE_NONE
      - CHARACTER_TYPE
      - CHARACTER_TYPE_NONE
      - CHARACTER_TYPE_A
      - CHARACTER_TYPE_B
      - CHARACTER_TYPE_C
      - CHARACTER_TYPE_D
      - CHARACTER_AVOIDANCE_MODE
      - AVOID_CHARACTERS
      - AVOID_DYNAMIC_OBSTACLES
      - CHARACTER_MAX_ACCEL
      - CHARACTER_MAX_DECEL
      - CHARACTER_DESIRED_TURN_SPEED
      - CHARACTER_MAX_TURN_RADIUS
      - CHARACTER_MAX_SPEED
      - CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES
      - CHARACTER_STAY_WITHIN_PARCEL
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter(list options);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE, integer mode]);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE, AVOID_NONE]);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE,
      (AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES)]);
    - llUpdateCharacter(list options);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE, integer mode]);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE, AVOID_NONE]);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE,
      (AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES)]);
  value: 0
PU_EVADE_HIDDEN:
  description: |-
    Triggered when an llEvade character thinks it has hidden from its pursuer
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_EVADE_HIDDEN)
          {
              ; // do something
          }
      }
  value: 7
PU_EVADE_SPOTTED:
  description: |-
    Triggered when an llEvade character switches from hiding to running
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_EVADE_SPOTTED)
          {
              ; // do something
          }
      }
  value: 8
PU_FAILURE_INVALID_GOAL:
  description: Goal is not on the navigation-mesh and cannot be reached
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_INVALID_GOAL)
          {
              ; // do something
          }
      }
  value: 3
PU_FAILURE_INVALID_START:
  description: |-
    Character cannot navigate from the current location - e.g., the character
    is off the navmesh or too high above it
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_INVALID_START)
          {
              llNavigateTo(<128,128, llGround(<128, 128, 0> - llGetPos())>, [FORCE_DIRECT_PATH, TRUE]); // have to move
          }
      }
  value: 2
PU_FAILURE_NO_VALID_DESTINATION:
  description: |-
    There's no good place for the character to go - e.g., it is patrolling
    and all the patrol points are now unreachable
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_NO_VALID_DESTINATION)
          {
              ; // do something
          }
      }
  value: 6
PU_FAILURE_OTHER:
  description: Unknown failure
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_OTHER)
          {
              ; // do something
          }
      }
  value: 1000000
PU_FAILURE_TARGET_GONE:
  description: |-
    Target (for llPursue or llEvade) can no longer be tracked - e.g.,
    it left the region or is an avatar that is now more than about 30m outside
    the region
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_TARGET_GONE)
          {
              ; // do something
          }
      }
  value: 5
PU_FAILURE_UNREACHABLE:
  description: |-
    Goal is no longer reachable for some reason - e.g., an obstacle blocks
    the path
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_UNREACHABLE)
          {
              ; // do something
          }
      }
  value: 4
PU_GOAL_REACHED:
  description: |-
    Character has reached the goal and will stop or choose a new goal
    (if wandering)
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_GOAL_REACHED)
          {
              ; // do something
          }
      }
  value: 1
PU_SLOWDOWN_DISTANCE_REACHED:
  description: Character is near current goal
  related:
    constants:
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_SLOWDOWN_DISTANCE_REACHED)
          {
              ; // do something
          }
      }
  value: 0
PU_FAILURE_NO_NAVMESH:
  description: Triggered if no navmesh is available for the region
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_NO_NAVMESH)
          {
              ; // do something
          }
      }
  value: 9
PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED:
  description: |-
    Triggered when a character enters a region with dynamic pathfinding
    disabled
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED)
          {
              ; // do something
          }
      }
  value: 10
PU_FAILURE_PARCEL_UNREACHABLE:
  description: |-
    Triggered when a character failed to enter a parcel because it is not
    allowed to enter, e.g. because the parcel is already full or because object
    entry was disabled after the navmesh was baked
  related:
    constants:
      - PU_SLOWDOWN_DISTANCE_REACHED
      - PU_GOAL_REACHED
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_OTHER
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          if (type == PU_FAILURE_PARCEL_UNREACHABLE)
          {
              ; // do something
          }
      }
  value: 11
TRAVERSAL_TYPE:
  description: |-
    One of TRAVERSAL_TYPE_FAST, TRAVERSAL_TYPE_SLOW, and TRAVERSAL_TYPE_NONE.
  params:
    - default: TRAVERSAL_TYPE_SLOW
      name: traversalType
      type: integer
  related:
    constants:
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_FAST
      - TRAVERSAL_TYPE_NONE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter([TRAVERSAL_TYPE, integer type]);
    - llCreateCharacter([TRAVERSAL_TYPE, TRAVERSAL_TYPE_SLOW]);
    - llUpdateCharacter([TRAVERSAL_TYPE, integer type]);
    - llUpdateCharacter([TRAVERSAL_TYPE, TRAVERSAL_TYPE_SLOW]);
  value: 7
TRAVERSAL_TYPE_SLOW:
  related:
    constants:
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_FAST
      - TRAVERSAL_TYPE_NONE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter([TRAVERSAL_TYPE, integer type]);
    - llCreateCharacter([TRAVERSAL_TYPE, TRAVERSAL_TYPE_SLOW]);
    - llUpdateCharacter([TRAVERSAL_TYPE, integer type]);
    - llUpdateCharacter([TRAVERSAL_TYPE, TRAVERSAL_TYPE_SLOW]);
  value: 0
TRAVERSAL_TYPE_FAST:
  related:
    constants:
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_NONE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter([TRAVERSAL_TYPE, integer type]);
    - llCreateCharacter([TRAVERSAL_TYPE, TRAVERSAL_TYPE_FAST]);
    - llUpdateCharacter([TRAVERSAL_TYPE, integer type]);
    - llUpdateCharacter([TRAVERSAL_TYPE, TRAVERSAL_TYPE_FAST]);
  value: 1
TRAVERSAL_TYPE_NONE:
  related:
    constants:
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_FAST
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter([TRAVERSAL_TYPE, integer type]);
    - llCreateCharacter([TRAVERSAL_TYPE, TRAVERSAL_TYPE_NONE]);
    - llUpdateCharacter([TRAVERSAL_TYPE, integer type]);
    - llUpdateCharacter([TRAVERSAL_TYPE, TRAVERSAL_TYPE_NONE]);
  value: 2
CHARACTER_AVOIDANCE_MODE:
  description: |-
    Allows you to specify that a character should not try to avoid other
    characters, should not try to avoid dynamic obstacles (relatively fast
    moving objects and avatars), or both.
  params:
    - default: AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES
      name: characterAvoidanceMode
      type: integer
  related:
    constants:
      - CHARACTER_DESIRED_SPEED
      - CHARACTER_RADIUS
      - CHARACTER_LENGTH
      - CHARACTER_ORIENTATION
      - VERTICAL
      - HORIZONTAL
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_FAST
      - TRAVERSAL_TYPE_NONE
      - CHARACTER_TYPE
      - CHARACTER_TYPE_NONE
      - CHARACTER_TYPE_A
      - CHARACTER_TYPE_B
      - CHARACTER_TYPE_C
      - CHARACTER_TYPE_D
      - AVOID_CHARACTERS
      - AVOID_DYNAMIC_OBSTACLES
      - AVOID_NONE
      - CHARACTER_MAX_ACCEL
      - CHARACTER_MAX_DECEL
      - CHARACTER_DESIRED_TURN_SPEED
      - CHARACTER_MAX_TURN_RADIUS
      - CHARACTER_MAX_SPEED
      - CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES
      - CHARACTER_STAY_WITHIN_PARCEL
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llUpdateCharacter
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter(list options);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE, integer mode]);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE, AVOID_NONE]);
    - llCreateCharacter([CHARACTER_AVOIDANCE_MODE,
      (AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES)]);
    - llUpdateCharacter(list options);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE, integer mode]);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE, AVOID_NONE]);
    - llUpdateCharacter([CHARACTER_AVOIDANCE_MODE,
      (AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES)]);
  value: 5
CHARACTER_CMD_STOP:
  description: Stops any current pathfinding operation.
  related:
    constants:
      - CHARACTER_CMD_JUMP
      - CHARACTER_CMD_SMOOTH_STOP
    functions:
      - llExecCharacterCmd
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llExecCharacterCmd(integer command, list options);
    - llExecCharacterCmd(CHARACTER_CMD_STOP, list options);
    - llExecCharacterCmd(CHARACTER_CMD_STOP, []);
  value: 0
CHARACTER_CMD_JUMP:
  description: |-
    Makes the character jump. Requires an additional parameter, the height
    to jump, between 0.1m and 2.0m. This must be provided as the first element
    of the llExecCharacterCmd option list.
  related:
    constants:
      - CHARACTER_CMD_STOP
      - CHARACTER_CMD_SMOOTH_STOP
    functions:
      - llExecCharacterCmd
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llExecCharacterCmd(integer command, list options);
    - llExecCharacterCmd(CHARACTER_CMD_JUMP, list options);
    - llExecCharacterCmd(CHARACTER_CMD_JUMP, [float height]);
    - llExecCharacterCmd(CHARACTER_CMD_JUMP, [0.1]);
    - llExecCharacterCmd(CHARACTER_CMD_JUMP, [2.0]);
  value: 1
CHARACTER_CMD_SMOOTH_STOP:
  related:
    constants:
      - CHARACTER_CMD_STOP
      - CHARACTER_CMD_JUMP
    functions:
      - llExecCharacterCmd
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llExecCharacterCmd(integer command, list options);
    - llExecCharacterCmd(CHARACTER_CMD_SMOOTH_STOP, list options);
    - llExecCharacterCmd(CHARACTER_CMD_SMOOTH_STOP, []);
  value: 2
CHARACTER_DESIRED_SPEED:
  description: Speed of pursuit in meters per second.
  params:
    - default: '6.0'
      name: characterDesiredSpeed
      type: float
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 1
CHARACTER_DESIRED_TURN_SPEED:
  description: |-
      The character's maximum speed while turning about the Z axis.

      Note that this is only loosely enforced.
  params:
    - default: '6.0'
      name: characterDesiredTurnSpeed
      type: float
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 12
CHARACTER_LENGTH:
  description: |-
    Set collision capsule length - cannot be less than two times the
    radius.
  params:
    - name: characterLength
      type: float
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 3
CHARACTER_MAX_ACCEL:
  description: The character's maximum acceleration rate.
  params:
    - default: '20.0'
      name: characterMaxAccel
      type: float
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 8
CHARACTER_MAX_DECEL:
  description: The character's maximum deceleration rate.
  params:
    - default: '30.0'
      name: characterMaxDecel
      type: float
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 9
CHARACTER_MAX_SPEED:
  description: The character's maximum speed.
  params:
    - default: '20.0'
      name: characterMaxSpeed
      type: float
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 13
CHARACTER_MAX_TURN_RADIUS:
  description: |-
    The character's turn radius when travelling at CHARACTER_MAX_TURN_SPEED.
  params:
    - default: '1.25'
      name: characterMaxTurnRadius
      type: float
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 10
CHARACTER_ORIENTATION:
  description: 'Valid options are: VERTICAL, HORIZONTAL.'
  params:
    - default: VERTICAL
      name: characterOrientation
      type: integer
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 4
CHARACTER_RADIUS:
  description: Set collision capsule radius.
  params:
    - name: characterRadius
      type: float
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 2
CHARACTER_TYPE:
  description: |-
    Specifies which walk-ability coefficient will be used by this character.
  params:
    - default: CHARACTER_TYPE_NONE
      name: characterType
      type: integer
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 6
CHARACTER_TYPE_A:
  description: |-
    Used for character types that you prefer move in a way consistent
    with humanoids.
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 0
CHARACTER_TYPE_B:
  description: |-
    Used for character types that you prefer move in a way consistent
    with wild animals or off road vehicles.
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 1
CHARACTER_TYPE_C:
  description: Used for mechanical character types or road going vehicles.
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 2
CHARACTER_TYPE_D:
  description: |-
    Used for character types that are not consistent with the A, B, or
    C type.
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 3
CHARACTER_TYPE_NONE:
  description: Used to set no specific character type.
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 4
GCNP_RADIUS:
  params:
    - default: '20.0'
      name: distance
      type: float
  related:
    constants:
      - GCNP_STATIC
      - CHARACTER_TYPE
    functions:
      - llGetClosestNavPoint
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - list nav_points = llGetClosestNavPoint(vector point, list options);
    - '[vector nav_point] = llGetClosestNavPoint(vector point, list options) // if
      exists'
    - '[] = llGetClosestNavPoint(vector point, list options) // if no point'
    - llGetClosestNavPoint(vector point, [GCNP_RADIUS, float distance,
      GCNP_STATIC, integer use_static_mesh, CHARACTER_TYPE, integer type]);
    - llGetClosestNavPoint(vector point, [GCNP_RADIUS, 20.0, GCNP_STATIC, FALSE,
      CHARACTER_TYPE, CHARACTER_TYPE_NONE]); // default
    - llGetClosestNavPoint(vector point, [GCNP_RADIUS, float distance]);
  value: 0
GCNP_STATIC:
  params:
    - default: 'FALSE'
      name: use_static_mesh
      type: integer
  related:
    constants:
      - GCNP_RADIUS
      - CHARACTER_TYPE
    functions:
      - llGetClosestNavPoint
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - list nav_points = llGetClosestNavPoint(vector point, list options);
    - '[vector nav_point] = llGetClosestNavPoint(vector point, list options) // if
      exists'
    - '[] = llGetClosestNavPoint(vector point, list options) // if no point'
    - llGetClosestNavPoint(vector point, [GCNP_RADIUS, float distance, GCNP_STATIC,
      integer use_static_mesh, CHARACTER_TYPE, integer type]);
    - llGetClosestNavPoint(vector point, [GCNP_RADIUS, 20.0, GCNP_STATIC, FALSE, CHARACTER_TYPE,
      CHARACTER_TYPE_NONE]); // default
    - llGetClosestNavPoint(vector point, [GCNP_STATIC, integer use_static_mesh]);
  value: 1
HORIZONTAL:
  description: Constant to indicate that the orientation of the capsule for a Pathfinding
      character is horizontal.
  related:
    constants:
      - VERTICAL
    functions:
      - llCreateCharacter
      - llUpdateCharacter
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter(list options);
    - llCreateCharacter([CHARACTER_ORIENTATION, integer orientation]);
    - llCreateCharacter([CHARACTER_ORIENTATION, VERTICAL]); // default
    - llCreateCharacter([CHARACTER_ORIENTATION, HORIZONTAL]);
    - llUpdateCharacter(list options);
    - llUpdateCharacter([CHARACTER_ORIENTATION, integer orientation]);
    - llUpdateCharacter([CHARACTER_ORIENTATION, VERTICAL]); // default
    - llUpdateCharacter([CHARACTER_ORIENTATION, HORIZONTAL]);
  value: 1
VERTICAL:
  description: |-
    Constant to indicate that the orientation of the capsule for a Pathfinding
    character is vertical.
  related:
    constants:
      - HORIZONTAL
    functions:
      - llCreateCharacter
      - llUpdateCharacter
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llCreateCharacter(list options);
    - llCreateCharacter([CHARACTER_ORIENTATION, integer orientation]);
    - llCreateCharacter([CHARACTER_ORIENTATION, VERTICAL]); // default
    - llCreateCharacter([CHARACTER_ORIENTATION, HORIZONTAL]);
    - llUpdateCharacter(list options);
    - llUpdateCharacter([CHARACTER_ORIENTATION, integer orientation]);
    - llUpdateCharacter([CHARACTER_ORIENTATION, VERTICAL]); // default
    - llUpdateCharacter([CHARACTER_ORIENTATION, HORIZONTAL]);
  value: 0
PATROL_PAUSE_AT_WAYPOINTS:
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    functions:
      - llPatrolPoints
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llPatrolPoints(list patrolPoints, list options); // patrolPoints must contain
      at least two vectors
    - llPatrolPoints([vector pointA, vector pointB], [PATROL_PAUSE_AT_WAYPOINTS, integer
      boolean]);
    - llPatrolPoints([vector pointA, vector pointB], [PATROL_PAUSE_AT_WAYPOINTS, FALSE]);
      // default
  value: 0
WANDER_PAUSE_AT_WAYPOINTS:
  related:
    functions:
      - llWanderWithin
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  usage:
    - llWanderWithin(vector origin, vector distrance, list options);
    - llWanderWithin(vector origin, vector distrance, [WANDER_PAUSE_AT_WAYPOINTS,
      integer boolean]);
    - llWanderWithin(vector origin, vector distrance, [WANDER_PAUSE_AT_WAYPOINTS,
      FALSE]); // default
  value: 0
CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES:
  description: |-
    If set to false, character will not attempt to catch up on lost time when
    pathfinding performance is low, potentially providing more reliable movement
    (albeit while potentially appearing to be more stuttery). Default is true
    to match pre-existing behavior.
  params:
    - default: 'TRUE'
      name: accountForSkippedFrames
      type: integer
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 14
CHARACTER_STAY_WITHIN_PARCEL:
  description: |-
      Determines whether a character can leave its starting parcel.
      Takes a boolean parameter. If TRUE, the character cannot voluntarilly
      leave the parcel, but can return to it.
  params:
    - name: characterStayWithinParcel
      type: integer
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Pathfinding
    slwiki:
      - Pathfinding_in_Second_Life
      - Pathfinding_LSL_functions
      - Pathfinding_Quick_Start_Guide
      - Pathfinding_Tools_in_the_Second_Life_Viewer
      - Mesh/Mesh_physics#Physics_Resource_Cost
    wikipedia:
      en:
        - Pathfinding
  scope: constant.language.integer
  type: integer
  value: 15
SIM_STAT_PCT_CHARS_STEPPED:
  description: |-
      Returns the percentage of pathfinding characters updated each frame,
      averaged over the last minute. The returned value corresponds to the
      "Characters Updated" stat in the viewer's Statistics Bar.
  related:
    functions:
      - llGetSimStats
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - float statistic = llGetSimStats(integer stat_type);
    - float statistic = llGetSimStats(SIM_STAT_PCT_CHARS_STEPPED);
    - 0.0 = llGetSimStats(SIM_STAT_PCT_CHARS_STEPPED); // min possible return
    - 100.0 = llGetSimStats(SIM_STAT_PCT_CHARS_STEPPED); // max possible return
  value: 0
HTTP_PRAGMA_NO_CACHE:
  description: |-
      Allows enabling/disbling of the "Pragma: no-cache" header.
  params:
    - default: 'TRUE'
      name: send_header
      type: integer
      description: |-
        When send_header is "TRUE", the "Pragma: no-cache" header is sent by the
        script.
  related:
    constants:
      - HTTP_METHOD
      - HTTP_MIMETYPE
      - HTTP_BODY_MAXLENGTH
      - HTTP_BODY_TRUNCATED
      - HTTP_VERIFY_CERT
      - HTTP_VERBOSE_THROTTLE
      - HTTP_CUSTOM_HEADER
      - HTTP_USER_AGENT
      - HTTP_ACCEPT
    events:
      - http_request
      - http_response
    functions:
      - llEscapeURL
      - llHTTPRequest
      - llHTTPResponse
      - llUnescapeURL
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_HTTP
      - LSL_HTTP/Client
      - LSL_XML-RPC
  scope: constant.language.integer
  type: integer
  usage:
    - key request_id = llHTTPRequest(string url, list parameters, string body);
    - key request_id = llHTTPRequest(string url, [HTTP_PRAGMA_NO_CACHE, TRUE], string
      body);
    - key request_id = llHTTPRequest(string url, [HTTP_PRAGMA_NO_CACHE, FALSE], string
      body);
  value: 6
OBJECT_PHYSICS:
  description: |-
      Returns boolean, detailing if physics is enabled or disabled on the
      object. If id is an avatar or attachment, 0 is returned.
  related:
    constants:
      - PRIM_PHYSICS
      - STATUS_PHYSICS
    functions:
      - llGetLinkPrimitiveParams
      - llGetObjectDetails
      - llGetPrimitiveParams
      - llGetStatus
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Object
      - LSL_Physics
      - LSL_Status
  scope: constant.language.integer
  type: integer
  usage:
    - list llGetObjectDetails(key id, list params);
    - '[integer boolean] = llGetObjectDetails(key id, [OBJECT_PHYSICS]);'
    - '[FALSE] = llGetObjectDetails(key id, [OBJECT_PHYSICS]); // for avatars or attachments'
  value: 21
OBJECT_PHANTOM:
  description: |-
      Returns boolean, detailing if phantom is enabled or disabled on the
      object. If id is an avatar or attachment, 0 is returned.
  related:
    constants:
      - PRIM_PHANTOM
      - STATUS_PHANTOM
    functions:
      - llGetLinkPrimitiveParams
      - llGetObjectDetails
      - llGetPrimitiveParams
      - llGetStatus
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Object
      - LSL_Physics
      - LSL_Status
  scope: constant.language.integer
  type: integer
  usage:
    - list llGetObjectDetails(key id, list params);
    - '[integer boolean] = llGetObjectDetails(key id, [OBJECT_PHANTOM]);'
    - '[FALSE] = llGetObjectDetails(key id, [OBJECT_PHANTOM]); // for avatars or attachments'
  value: 22
OBJECT_TEMP_ON_REZ:
  description: |-
    Returns boolean, detailing if temporary is enabled or disabled on the
    object.
  related:
    constants:
      - PRIM_TEMP_ON_REZ
    functions:
      - llGetLinkPrimitiveParams
      - llGetObjectDetails
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Object
      - LSL_Physics
      - LSL_Status
  scope: constant.language.integer
  type: integer
  usage:
    - list llGetObjectDetails(key id, list params);
    - '[integer boolean] = llGetObjectDetails(key id, [OBJECT_TEMP_ON_REZ]);'
  value: 23
JSON_APPEND:
  related:
    constants:
      - JSON_DELETE
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
      - JSON_NULL
    functions:
      - llJsonSetValue
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_JSON
  scope: constant.language.integer
  type: integer
  usage:
    - string llJsonSetValue(string json, list specifiers, string value);
    - string llJsonSetValue(string json, [JSON_APPEND], string value); // append to
      json if array, else replace json with array and value as its first value
    - string llJsonSetValue(string json, list specifiers + [JSON_APPEND], string value);
      // append to json at specifiers if array, else replace json at specifiers
      with array and value as its first value
  value: -1
OBJECT_RETURN_PARCEL:
  description: |-
    Return all objects on the same parcel as the script which are owned by owner.
    The script must be owned by an estate manager or over a parcel owned by the owner of the script.
  related:
    constants:
      - ERR_GENERIC
      - ERR_PARCEL_PERMISSIONS
      - ERR_MALFORMED_PARAMS
      - ERR_RUNTIME_PERMISSIONS
      - ERR_THROTTLED
      - OBJECT_RETURN_PARCEL_OWNER
      - OBJECT_RETURN_REGION
      - PERMISSION_RETURN_OBJECTS
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer llReturnObjectsByOwner(key owner, integer scope); // returns number
      of returned objects or an error flag
    - integer llReturnObjectsByOwner(key owner, OBJECT_RETURN_PARCEL);
  value: 1
  value_description: '0x1'
OBJECT_RETURN_PARCEL_OWNER:
  description: |-
    Return all objects owned by owner which are over parcels owned by the owner of the script.
  scope: constant.language.integer
  type: integer
  value: 2
  value_description: '0x2'
  related:
    constants:
      - ERR_GENERIC
      - ERR_PARCEL_PERMISSIONS
      - ERR_MALFORMED_PARAMS
      - ERR_RUNTIME_PERMISSIONS
      - ERR_THROTTLED
      - OBJECT_RETURN_PARCEL
      - OBJECT_RETURN_REGION
      - PERMISSION_RETURN_OBJECTS
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  usage:
    - integer llReturnObjectsByOwner(key owner, integer scope); // returns number
      of returned objects or an error flag
    - integer llReturnObjectsByOwner(key owner, OBJECT_RETURN_PARCEL_OWNER);
OBJECT_RETURN_REGION:
  description: |-
    Return all objects in the region owned by owner.
    The script must be owned by the estate owner or an estate manager.
  scope: constant.language.integer
  type: integer
  value: 4
  value_description: '0x4'
  related:
    constants:
      - ERR_GENERIC
      - ERR_PARCEL_PERMISSIONS
      - ERR_MALFORMED_PARAMS
      - ERR_RUNTIME_PERMISSIONS
      - ERR_THROTTLED
      - OBJECT_RETURN_PARCEL
      - OBJECT_RETURN_PARCEL_OWNER
      - PERMISSION_RETURN_OBJECTS
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  usage:
    - integer llReturnObjectsByOwner(key owner, integer scope); // returns number
      of returned objects or an error flag
    - integer llReturnObjectsByOwner(key owner, OBJECT_RETURN_REGION);
ERR_GENERIC:
  description: |-
    A nebuluos and inexplicable error, nothing is known about it.
  related:
    constants:
      - ERR_PARCEL_PERMISSIONS
      - ERR_MALFORMED_PARAMS
      - ERR_RUNTIME_PERMISSIONS
      - ERR_THROTTLED
      - OBJECT_RETURN_PARCEL
      - OBJECT_RETURN_PARCEL_OWNER
      - OBJECT_RETURN_REGION
      - PERMISSION_RETURN_OBJECTS
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  scope: constant.language.integer
  type: integer
  usage:
    - integer llReturnObjectsByOwner(key owner, integer scope); // returns number
      of returned objects or an error flag
    - integer llReturnObjectsByID(list objects); // returns number of returned objects
      or an error flag
    - ERR_GENERIC = llReturnObjectsByOwner(key owner, integer scope);
    - ERR_GENERIC = llReturnObjectsByID(list objects);
  value: -1
ERR_PARCEL_PERMISSIONS:
  description: |-
    Permission lacked to perform task on specified parcel.
  scope: constant.language.integer
  type: integer
  value: -2
  related:
    constants:
      - ERR_GENERIC
      - ERR_MALFORMED_PARAMS
      - ERR_RUNTIME_PERMISSIONS
      - ERR_THROTTLED
      - OBJECT_RETURN_PARCEL
      - OBJECT_RETURN_PARCEL_OWNER
      - OBJECT_RETURN_REGION
      - PERMISSION_RETURN_OBJECTS
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  usage:
    - integer llReturnObjectsByOwner(key owner, integer scope); // returns number
      of returned objects or an error flag
    - integer llReturnObjectsByID(list objects); // returns number of returned objects
      or an error flag
    - ERR_PARCEL_PERMISSIONS = llReturnObjectsByOwner(key owner, integer scope);
    - ERR_PARCEL_PERMISSIONS = llReturnObjectsByID(list objects);
ERR_MALFORMED_PARAMS:
  description: |-
    Parameters are malformed.
  scope: constant.language.integer
  type: integer
  value: -3
  related:
    constants:
      - ERR_GENERIC
      - ERR_PARCEL_PERMISSIONS
      - ERR_RUNTIME_PERMISSIONS
      - ERR_THROTTLED
      - OBJECT_RETURN_PARCEL
      - OBJECT_RETURN_PARCEL_OWNER
      - OBJECT_RETURN_REGION
      - PERMISSION_RETURN_OBJECTS
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  usage:
    - integer llReturnObjectsByOwner(key owner, integer scope); // returns number
      of returned objects or an error flag
    - integer llReturnObjectsByID(list objects); // returns number of returned objects
      or an error flag
    - ERR_MALFORMED_PARAMS = llReturnObjectsByOwner(key owner, integer scope);
    - ERR_MALFORMED_PARAMS = llReturnObjectsByID(list objects);
ERR_RUNTIME_PERMISSIONS:
  description: |-
    Script lacks the runtime permission to perform the requested task.
  scope: constant.language.integer
  type: integer
  value: -4
  related:
    constants:
      - ERR_GENERIC
      - ERR_PARCEL_PERMISSIONS
      - ERR_MALFORMED_PARAMS
      - ERR_THROTTLED
      - OBJECT_RETURN_PARCEL
      - OBJECT_RETURN_PARCEL_OWNER
      - OBJECT_RETURN_REGION
      - PERMISSION_RETURN_OBJECTS
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  usage:
    - integer llReturnObjectsByOwner(key owner, integer scope); // returns number
      of returned objects or an error flag
    - integer llReturnObjectsByID(list objects); // returns number of returned objects
      or an error flag
    - ERR_RUNTIME_PERMISSIONS = llReturnObjectsByOwner(key owner, integer scope);
    - ERR_RUNTIME_PERMISSIONS = llReturnObjectsByID(list objects);
ERR_THROTTLED:
  description: |-
    Task has been throttled. Try again later.
  scope: constant.language.integer
  type: integer
  value: -5
  related:
    constants:
      - ERR_GENERIC
      - ERR_PARCEL_PERMISSIONS
      - ERR_MALFORMED_PARAMS
      - ERR_RUNTIME_PERMISSIONS
      - OBJECT_RETURN_PARCEL
      - OBJECT_RETURN_PARCEL_OWNER
      - OBJECT_RETURN_REGION
      - PERMISSION_RETURN_OBJECTS
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  usage:
    - integer llReturnObjectsByOwner(key owner, integer scope); // returns number
      of returned objects or an error flag
    - integer llReturnObjectsByID(list objects); // returns number of returned objects
      or an error flag
    - ERR_THROTTLED = llReturnObjectsByOwner(key owner, integer scope);
    - ERR_THROTTLED = llReturnObjectsByID(list objects);
PRIM_NORMAL:
  description: |-
    Prim parameter for materials using integer face, string texture,
    vector repeats, vector offsets, float rotation_in_radians
  params:
    - name: face
      type: integer
    - name: texture
      type: string
    - name: repeats
      type: vector
    - name: offsets
      type: vector
    - name: rotation_in_radians
      type: float
  scope: constant.language.integer
  type: integer
  value: 37
  related:
    constants:
      - PRIM_SPECULAR
      - PRIM_ALPHA_MODE
      - ALL_SIDES
      - PRIM_TEXGEN
      - PRIM_TEXGEN_DEFAULT
      - PRIM_TEXGEN_PLANAR
      - DEBUG_CHANNEL
      - NULL_KEY
      - ZERO_VECTOR
      - PRIM_LINK_TARGET
    functions:
      - llSetPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetLinkPrimitiveParams
      - llUnSit
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
    slwiki:
      - UUID
      - Radians
      - Prim
      - Object
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Face
      - LSL_Inventory
      - LSL_Permissions/Asset
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Face
      - LSL_Face/Get
      - LSL_Texture
  version: '14.06.20.291351'
PRIM_SPECULAR:
  description: |-
    Prim parameter for materials using integer face, string texture,
    vector repeats, vector offsets, float rotation_in_radians, vector color,
    integer glossy, integer environment
  scope: constant.language.integer
  type: integer
  value: 36
  related:
    constants:
      - PRIM_NORMAL
      - PRIM_ALPHA_MODE
      - ALL_SIDES
      - PRIM_TEXGEN
      - PRIM_TEXGEN_DEFAULT
      - PRIM_TEXGEN_PLANAR
      - DEBUG_CHANNEL
      - NULL_KEY
      - ZERO_VECTOR
      - PRIM_LINK_TARGET
    functions:
      - llSetPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetLinkPrimitiveParams
      - llUnSit
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
    slwiki:
      - UUID
      - Radians
      - Prim
      - Object
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Face
      - LSL_Inventory
      - LSL_Permissions/Asset
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Face
      - LSL_Face/Get
      - LSL_Texture
  version: '14.06.20.291351'
PRIM_ALPHA_MODE:
  description: |-
      Prim parameter for materials using integer face, integer alpha_mode,
      integer alpha_cutoff. Defines how the alpha channel of the diffuse texture
      should be rendered. Valid options for alpha_mode are
      PRIM_ALPHA_MODE_BLEND, _NONE, _MASK, and _EMISSIVE. alpha_cutoff is used
      only for PRIM_ALPHA_MODE_MASK.
  params:
    - name: face
      type: integer
    - name: alpha_mode
      type: integer
    - name: mask_cutoff
      type: integer
  scope: constant.language.integer
  type: integer
  value: 38
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  version: '14.06.20.291351'
PRIM_ALPHA_MODE_NONE:
  description: |-
      Prim parameter setting for PRIM_ALPHA_MODE.
      Indicates that the diffuse texture's alpha channel should be ignored.
  scope: constant.language.integer
  type: integer
  value: 0
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  version: '14.06.20.291351'
PRIM_ALPHA_MODE_BLEND:
  description: |-
      Prim parameter setting for PRIM_ALPHA_MODE.
      Indicates that the diffuse texture's alpha channel should be rendered as
      alpha-blended.
  scope: constant.language.integer
  type: integer
  value: 1
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  version: '14.06.20.291351'
PRIM_ALPHA_MODE_MASK:
  description: |-
      Prim parameter setting for PRIM_ALPHA_MODE.
      Indicates that the diffuse texture's alpha channel should be rendered as
      fully opaque for alpha values above alpha_cutoff and fully transparent
      otherwise.
  scope: constant.language.integer
  type: integer
  value: 2
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  version: '14.06.20.291351'
PRIM_ALPHA_MODE_EMISSIVE:
  description: |-
      Prim parameter setting for PRIM_ALPHA_MODE.
      Indicates that the diffuse texture's alpha channel should be rendered as
      an emissivity mask.
  scope: constant.language.integer
  type: integer
  value: 3
  related:
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
  version: '14.06.20.291351'
XP_ERROR_NONE:
  description: No error was detected.
  scope: constant.language.integer
  type: integer
  value: 0
  related:
    constants:
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_THROTTLED:
  description: The call failed due to too many recent calls.
  scope: constant.language.integer
  type: integer
  value: 1
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_EXPERIENCES_DISABLED:
  description: The region currently has experiences disabled.
  scope: constant.language.integer
  type: integer
  value: 2
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_INVALID_PARAMETERS:
  description: |-
    One of the string arguments was too big to fit in the key-value store.
  scope: constant.language.integer
  type: integer
  value: 3
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_NOT_PERMITTED:
  description: This experience is not allowed to run by the requested agent.
  scope: constant.language.integer
  type: integer
  value: 4
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_NO_EXPERIENCE:
  description: This script is not associated with an experience.
  scope: constant.language.integer
  type: integer
  value: 5
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_NOT_FOUND:
  description: |-
    The sim was unable to verify the validity of the experience. Retrying
    after a short wait is advised.
  scope: constant.language.integer
  type: integer
  value: 6
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_INVALID_EXPERIENCE:
  description: |-
    The script is associated with an experience that no longer exists.
  scope: constant.language.integer
  type: integer
  value: 7
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_EXPERIENCE_DISABLED:
  description: The experience owner has temporarily disabled the experience.
  scope: constant.language.integer
  type: integer
  value: 8
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_EXPERIENCE_SUSPENDED:
  description: The experience has been suspended by Linden Customer Support.
  scope: constant.language.integer
  type: integer
  value: 9
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_UNKNOWN_ERROR:
  description: Other unknown error.
  scope: constant.language.integer
  type: integer
  value: 10
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_QUOTA_EXCEEDED:
  description: |-
    An attempted write data to the key-value store failed due to the
    data quota being met.
  scope: constant.language.integer
  type: integer
  value: 11
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_STORE_DISABLED:
  description: The key-value store is currently disabled on this region.
  scope: constant.language.integer
  type: integer
  value: 12
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_STORAGE_EXCEPTION:
  description: Unable to communicate with the key-value store.
  scope: constant.language.integer
  type: integer
  value: 13
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_KEY_NOT_FOUND:
  description: The requested key does not exist.
  scope: constant.language.integer
  type: integer
  value: 14
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_RETRY_UPDATE:
  description: A checked update failed due to an out of date request.
  scope: constant.language.integer
  type: integer
  value: 15
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_MATURITY_EXCEEDED:
  description: The content rating of the experience exceeds that of the region.
  scope: constant.language.integer
  type: integer
  value: 16
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '14.07.18.292162'
XP_ERROR_NOT_PERMITTED_LAND:
  description: This experience is not allowed to run on the current region.
  scope: constant.language.integer
  type: integer
  value: 17
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '15.01.23.298475'
XP_ERROR_REQUEST_PERM_TIMEOUT:
  description: The experience permissions request timed out.
  scope: constant.language.integer
  type: integer
  value: 18
  related:
    constants:
      - XP_ERROR_NONE
      - XP_ERROR_THROTTLED
      - XP_ERROR_EXPERIENCES_DISABLED
      - XP_ERROR_INVALID_PARAMETERS
      - XP_ERROR_NOT_PERMITTED
      - XP_ERROR_NO_EXPERIENCE
      - XP_ERROR_NOT_FOUND
      - XP_ERROR_INVALID_EXPERIENCE
      - XP_ERROR_EXPERIENCE_DISABLED
      - XP_ERROR_EXPERIENCE_SUSPENDED
      - XP_ERROR_UNKNOWN_ERROR
      - XP_ERROR_QUOTA_EXCEEDED
      - XP_ERROR_STORE_DISABLED
      - XP_ERROR_STORAGE_EXCEPTION
      - XP_ERROR_KEY_NOT_FOUND
      - XP_ERROR_RETRY_UPDATE
      - XP_ERROR_MATURITY_EXCEEDED
      - XP_ERROR_NOT_PERMITTED_LAND
      - XP_ERROR_REQUEST_PERM_TIMEOUT
    events:
      - experience_permissions_denied
      - experience_permissions
    functions:
      - llGetExperienceErrorMessage
      - llRequestExperiencePermissions
    slwiki:
      - Experience_Tools
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Experience
      - Experience_Tools
  version: '15.01.23.298475'
PASS_IF_NOT_HANDLED:
  description: |-
    Used with llPass{Collisions, Touches} to only pass {collisions, touches}
    to the root if the {collision, touch} event was not handled.
  related:
    constants:
      - PASS_ALWAYS
      - PASS_NEVER
    events:
      - collision_start
      - collision
      - collision_end
      - touch_start
      - touch
      - touch_end
    functions:
      - llPassCollisions
      - llPassTouches
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Passable
  scope: constant.language.integer
  type: integer.pass
  usage:
    - llPassCollisions(integer pass);
    - llPassCollisions(PASS_IF_NOT_HANDLED);
    - llPassTouches(integer pass);
    - llPassTouches(PASS_IF_NOT_HANDLED);
  value: 0
  version: '1.40.0'
PASS_ALWAYS:
  description: |-
    Used with llPass{Collisions, Touches} to always pass {collisions,
    touches} to the root regardless of whether the {collision, touch} event was
    handled or not.
  related:
    constants:
      - PASS_IF_NOT_HANDLED
      - PASS_NEVER
    events:
      - collision_start
      - collision
      - collision_end
      - touch_start
      - touch
      - touch_end
    functions:
      - llPassCollisions
      - llPassTouches
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Passable
  scope: constant.language.integer
  type: integer.pass
  usage:
    - llPassCollisions(integer pass);
    - llPassCollisions(PASS_ALWAYS);
    - llPassTouches(integer pass);
    - llPassTouches(PASS_ALWAYS);
  value: 1
  version: '1.40.0'
PASS_NEVER:
  description: |-
    Used with llPass{Collisions, Touches} to never pass {collisions,
    touches} to the root.
  related:
    constants:
      - PASS_IF_NOT_HANDLED
      - PASS_ALWAYS
    events:
      - collision_start
      - collision
      - collision_end
      - touch_start
      - touch
      - touch_end
    functions:
      - llPassCollisions
      - llPassTouches
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Passable
  scope: constant.language.integer
  type: integer.pass
  usage:
    - llPassCollisions(integer pass);
    - llPassCollisions(PASS_NEVER);
    - llPassTouches(integer pass);
    - llPassTouches(PASS_NEVER);
  value: 2
  version: '1.40.2'
SKY_AMBIENT:
  related:
    constants:
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 0
  version: '18.11.02.521379'
SKY_TEXTURE_DEFAULTS:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 1
  version: '18.11.02.521379'
SKY_CLOUDS:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 2
  version: '18.11.02.521379'
SKY_DENSITY_PROFILE_COUNTS:
  scope: constant.language.integer
  type: integer
  value: 3
  status: unimplemented
  version: '18.11.02.521379'
SKY_DOME:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 4
  version: '18.11.02.521379'
SKY_GAMMA:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 5
  version: '18.11.02.521379'
SKY_GLOW:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 6
  version: '18.11.02.521379'
SKY_LIGHT:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 8
  version: '18.11.02.521379'
SKY_MOON:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 9
  version: '18.11.02.521379'
SKY_PLANET:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 10
  version: '18.11.02.521379'
SKY_REFRACTION:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 11
  version: '18.11.02.521379'
SKY_STAR_BRIGHTNESS:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 13
  version: '18.11.02.521379'
SKY_SUN:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 14
  version: '18.11.02.521379'
SKY_TRACKS:
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 15
  version: '18.11.02.521379'
SKY_MIE_CONFIG:
  scope: constant.language.integer
  type: integer
  value: 17
  status: unimplemented
  version: '18.11.02.521379'
SKY_RAYLEIGH_CONFIG:
  scope: constant.language.integer
  type: integer
  value: 18
  status: unimplemented
  version: '18.11.02.521379'
SKY_CLOUD_TEXTURE:
  scope: constant.language.integer
  type: integer
  value: 19
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  version: '18.11.02.521379'
SKY_MOON_TEXTURE:
  scope: constant.language.integer
  type: integer
  value: 20
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_SUN_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  version: '18.11.02.521379'
SKY_SUN_TEXTURE:
  scope: constant.language.integer
  type: integer
  value: 21
  related:
    constants:
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
  version: '18.11.02.521379'
WATER_BLUR_MULTIPLIER:
  related:
    constants:
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 100
  version: '18.11.02.521379'
WATER_FOG:
  related:
    constants:
      - WATER_BLUR_MULTIPLIER
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 101
  version: '18.11.02.521379'
WATER_FRESNEL:
  related:
    constants:
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 102
  version: '18.11.02.521379'
WATER_TEXTURE_DEFAULTS:
  related:
    constants:
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 103
  version: '18.11.02.521379'
WATER_NORMAL_SCALE:
  related:
    constants:
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 104
  version: '18.11.02.521379'
WATER_REFRACTION:
  related:
    constants:
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_WAVE_DIRECTION
      - WATER_NORMAL_TEXTURE
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 105
  version: '18.11.02.521379'
WATER_WAVE_DIRECTION:
  related:
    constants:
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_NORMAL_TEXTURE
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
  scope: constant.language.integer
  type: integer
  value: 106
  version: '18.11.02.521379'
WATER_NORMAL_TEXTURE:
  scope: constant.language.integer
  type: integer
  value: 107
  related:
    constants:
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_LIGHT
      - SKY_MOON
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_TRACKS
      - SKY_CLOUD_TEXTURE
      - SKY_MOON_TEXTURE
      - SKY_SUN_TEXTURE
  version: '18.11.02.521379'
ENVIRONMENT_DAYINFO:
  scope: constant.language.integer
  type: integer
  value: 200
  version: '19.02.01.523934'
ENV_NOT_EXPERIENCE:
  scope: constant.language.integer
  type: integer
  value: -1
  related:
    constants:
      - ENV_NO_EXPERIENCE_PERMISSION
      - ENV_NO_ENVIRONMENT
      - ENV_INVALID_AGENT
      - ENV_INVALID_RULE
      - ENV_VALIDATION_FAIL
      - ENV_NO_EXPERIENCE_LAND
      - ENV_THROTTLE
    functions:
      - llSetAgentEnvironment
  version: '19.02.01.523934'
ENV_NO_EXPERIENCE_PERMISSION:
  scope: constant.language.integer
  type: integer
  value: -2
  related:
    constants:
      - ENV_NOT_EXPERIENCE
      - ENV_NO_ENVIRONMENT
      - ENV_INVALID_AGENT
      - ENV_INVALID_RULE
      - ENV_VALIDATION_FAIL
      - ENV_NO_EXPERIENCE_LAND
      - ENV_THROTTLE
    functions:
      - llSetAgentEnvironment
  version: '19.02.01.523934'
ENV_NO_ENVIRONMENT:
  scope: constant.language.integer
  type: integer
  value: -3
  related:
    constants:
      - ENV_NOT_EXPERIENCE
      - ENV_NO_EXPERIENCE_PERMISSION
      - ENV_INVALID_AGENT
      - ENV_INVALID_RULE
      - ENV_VALIDATION_FAIL
      - ENV_NO_EXPERIENCE_LAND
      - ENV_THROTTLE
    functions:
      - llSetAgentEnvironment
  version: '19.02.01.523934'
ENV_INVALID_AGENT:
  scope: constant.language.integer
  type: integer
  value: -4
  related:
    constants:
      - ENV_NOT_EXPERIENCE
      - ENV_NO_EXPERIENCE_PERMISSION
      - ENV_NO_ENVIRONMENT
      - ENV_INVALID_RULE
      - ENV_VALIDATION_FAIL
      - ENV_NO_EXPERIENCE_LAND
      - ENV_THROTTLE
    functions:
      - llSetAgentEnvironment
  version: '19.02.01.523934'
ENV_INVALID_RULE:
  scope: constant.language.integer
  type: integer
  value: -5
  related:
    constants:
      - ENV_NOT_EXPERIENCE
      - ENV_NO_EXPERIENCE_PERMISSION
      - ENV_NO_ENVIRONMENT
      - ENV_INVALID_AGENT
      - ENV_VALIDATION_FAIL
      - ENV_NO_EXPERIENCE_LAND
      - ENV_THROTTLE
    functions:
      - llSetAgentEnvironment
  version: '19.02.01.523934'
ENV_VALIDATION_FAIL:
  scope: constant.language.integer
  type: integer
  value: -6
  related:
    constants:
      - ENV_NOT_EXPERIENCE
      - ENV_NO_EXPERIENCE_PERMISSION
      - ENV_NO_ENVIRONMENT
      - ENV_INVALID_AGENT
      - ENV_INVALID_RULE
      - ENV_NO_EXPERIENCE_LAND
      - ENV_THROTTLE
    functions:
      - llSetAgentEnvironment
  version: '19.02.01.523934'
ENV_NO_EXPERIENCE_LAND:
  scope: constant.language.integer
  type: integer
  value: -7
  related:
    constants:
      - ENV_NOT_EXPERIENCE
      - ENV_NO_EXPERIENCE_PERMISSION
      - ENV_NO_ENVIRONMENT
      - ENV_INVALID_AGENT
      - ENV_INVALID_RULE
      - ENV_VALIDATION_FAIL
      - ENV_THROTTLE
    functions:
      - llSetAgentEnvironment
  version: '19.02.01.523934'
ENV_THROTTLE:
  scope: constant.language.integer
  type: integer
  value: -8
  related:
    constants:
      - ENV_NOT_EXPERIENCE
      - ENV_NO_EXPERIENCE_PERMISSION
      - ENV_NO_ENVIRONMENT
      - ENV_INVALID_AGENT
      - ENV_INVALID_RULE
      - ENV_VALIDATION_FAIL
      - ENV_NO_EXPERIENCE_LAND
    functions:
      - llSetAgentEnvironment
  version: '19.08.06.529800'
TARGETED_EMAIL_OBJECT_OWNER:
  description: |-
    Causes the message to be sent to the owner of the calling object.
  related:
    constants:
      - TARGETED_EMAIL_ROOT_CREATOR
    functions:
      - llTargetedEmail
  scope: constant.language.integer
  type: integer
  value: 2
  version: '2020-04-10'
# constant.language.integer.bit_field
AGENT_ALWAYS_RUN:
  description: |-
    Returned by llGetAgentInfo if the Agent has 'Always Run' enabled
  related:
    constants:
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  usage:
    - |-
      if (llGetAgentInfo(key id) == (AGENT_ALWAYS_RUN | AGENT_WALKING))
      {
          ; // agent requested to run using standard viewer controls
      }
  value: 4096
  value_description: '0x1000'
AGENT_ATTACHMENTS:
  description: |-
    Returned by llGetAgentInfo if the Agent has attachments
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 2
  value_description: '0x2'
  version: '0.4.0'
AGENT_AUTOPILOT:
  description: |-
    Returned by llGetAgentInfo if the Agent is under autopilot control
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 8192
  value_description: '0x2000'
AGENT_AWAY:
  description: |-
    Returned by llGetAgentInfo if the Agent is in away mode
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 64
  value_description: '0x40'
AGENT_BUSY:
  description: |-
    Returned by llGetAgentInfo if the Agent is busy
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 2048
  value_description: '0x800'
AGENT_CROUCHING:
  description: |-
    Returned by llGetAgentInfo if the Agent is crouching
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 1024
  value_description: '0x400'
AGENT_FLYING:
  description: |-
    Returned by llGetAgentInfo if the Agent is flying
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 1
  value_description: '0x1'
  version: '0.4.0'
AGENT_IN_AIR:
  description: |-
    Returned by llGetAgentInfo if the Agent is in the air
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 256
  value_description: '0x100'
AGENT_MOUSELOOK:
  description: |-
    Returned by llGetAgentInfo if the Agent is in mouselook
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 8
  value_description: '0x8'
AGENT_ON_OBJECT:
  description: |-
    Returned by llGetAgentInfo if the Agent is sitting on an object
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 32
  value_description: '0x20'
AGENT_SCRIPTED:
  description: |-
    Returned by llGetAgentInfo if the Agent has scripted attachments
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 4
  value_description: '0x4'
  version: '0.4.0'
AGENT_SITTING:
  description: |-
    Returned by llGetAgentInfo if the Agent is sitting
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 16
  value_description: '0x10'
AGENT_TYPING:
  description: |-
    Returned by llGetAgentInfo if the Agent is typing
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_WALKING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 512
  value_description: '0x200'
AGENT_WALKING:
  description: |-
    Returned by llGetAgentInfo if the Agent is walking
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
    functions:
      - llGetAgentInfo
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  usage:
    - |-
      if (llGetAgentInfo(key id) == (AGENT_ALWAYS_RUN | AGENT_WALKING))
      {
          ; // agent requested to run using standard viewer controls
      }
  value: 128
  value_description: '0x80'
CHANGED_ALLOWED_DROP:
  description: |-
      Parameter of changed event handler used to indicate a user dropped an
      inventory item onto task that was allowed only by llAllowInventoryDrop
      function call
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Inventory
  scope: constant.language.integer.bit_field
  type: integer
  value: 64
  value_description: '0x40'
CHANGED_COLOR:
  description: |-
    Parameter of changed event handler used to indicate change to task's
    color
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Color
      - LSL_Alpha
  scope: constant.language.integer.bit_field
  type: integer
  value: 2
  value_description: '0x2'
CHANGED_INVENTORY:
  description: |-
    Parameter of changed event handler used to indicate change to task's
    inventory
  related:
    constants:
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Inventory
  scope: constant.language.integer.bit_field
  type: integer
  value: 1
  value_description: '0x1'
CHANGED_LINK:
  description: |-
    Parameter of changed event handler used to indicate change to task's
    link status
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Link
      - LSL_Sit
      - LSL_Link/Management
  scope: constant.language.integer.bit_field
  type: integer
  value: 32
  value_description: '0x20'
CHANGED_MEDIA:
  description: |-
    Parameter of changed event handler used to indicate that media has
    changed on a face of the task
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Prim_Media
      - LSL_Media
  scope: constant.language.integer.bit_field
  type: integer
  value: 2048
  value_description: '0x800'
CHANGED_OWNER:
  description: |-
    Parameter of changed event handler used to indicate change to task's
    owner ONLY when an object is sold as original or deeded to group
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Owner
  scope: constant.language.integer.bit_field
  type: integer
  value: 128
  value_description: '0x80'
CHANGED_REGION:
  description: |-
    Parameter of changed event handler used to indicate the region has
    changed
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Region
  scope: constant.language.integer.bit_field
  type: integer
  value: 256
  value_description: '0x100'
CHANGED_REGION_START:
  description: |-
    Parameter of changed event handler used to indicate the region has
    been restarted
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Region
      - LSL_HTTP/Server
  scope: constant.language.integer.bit_field
  type: integer
  value: 1024
  value_description: '0x400'
CHANGED_SCALE:
  description: |-
    Parameter of changed event handler used to indicate change to task's
    scale
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 8
  value_description: '0x8'
CHANGED_SHAPE:
  description: |-
    Parameter of changed event handler used to indicate change to task's
    shape parameters
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
  scope: constant.language.integer.bit_field
  type: integer
  value: 4
  value_description: '0x4'
CHANGED_TELEPORT:
  description: |-
    Parameter of changed event handler used to indicate teleport has
    completed
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_TEXTURE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Teleport
  scope: constant.language.integer.bit_field
  type: integer
  value: 512
  value_description: '0x200'
CHANGED_TEXTURE:
  description: |-
    Parameter of changed event handler used to indicate change to task's
    texture
  related:
    constants:
      - CHANGED_INVENTORY
      - CHANGED_COLOR
      - CHANGED_SHAPE
      - CHANGED_SCALE
      - CHANGED_LINK
      - CHANGED_ALLOWED_DROP
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_TELEPORT
      - CHANGED_REGION_START
      - CHANGED_MEDIA
    events:
      - changed
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Texture
  scope: constant.language.integer.bit_field
  type: integer
  value: 16
  value_description: '0x10'
# constant.language.integer.bit_field.bit_mask
STATUS_BLOCK_GRAB:
  description: If TRUE, object can't be grabbed and physically dragged.
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 64
  value_description: '0x40'
  version: '0.2.0'
STATUS_BLOCK_GRAB_OBJECT:
  description: |-
      If TRUE, the object can't be moved by grabs.
      This flag applies to the entire linkset.
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 1024
  value_description: '0x400'
STATUS_DIE_AT_EDGE:
  description: |-
      If TRUE, objects that reach the edge of the world just die rather than
      teleporting back to the owner.
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 128
  value_description: '0x80'
  version: '0.2.0'
STATUS_PHANTOM:
  description: If TRUE, object doesn't collide with other objects.
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 16
  value_description: '0x10'
STATUS_PHYSICS:
  description: If set TRUE, object moves physically.
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 1
  value_description: '0x1'
STATUS_RETURN_AT_EDGE:
  description: |-
      If TRUE, script rezzed objects that reach the edge of the world are
      returned rather than killed. STATUS_RETURN_AT_EDGE trumps
      STATUS_DIE_AT_EDGE if both are set.
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 256
  value_description: '0x100'
  version: '1.5.0'
STATUS_ROTATE_X:
  description: If FALSE, object doesn't rotate around local X axis.
  params:
    - default: 'TRUE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 2
  value_description: '0x2'
STATUS_ROTATE_Y:
  description: If FALSE, object doesn't rotate around local Y axis.
  params:
    - default: 'TRUE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 4
  value_description: '0x4'
STATUS_ROTATE_Z:
  description: If FALSE, object doesn't rotate around local Z axis.
  params:
    - default: 'TRUE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 8
  value_description: '0x8'
STATUS_SANDBOX:
  description: |-
    If TRUE, object can't cross region boundaries or move more than 10
    meters from its start location.
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_CAST_SHADOWS
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Status
      - LSL_Error
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 32
  value_description: '0x20'
VEHICLE_FLAG_CAMERA_DECOUPLED:
  description: |-
    Causes the camera look-at axis to NOT move when the vehicle rotates
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
      - LSL_Camera
    slwiki:
      - Mouselook
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 512
  value_description: '0x200'
VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT:
  description: Hover only pays attention to global height
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 16
  value_description: '0x10'
VEHICLE_FLAG_HOVER_TERRAIN_ONLY:
  description: Hover only pays attention to terrain height
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 8
  value_description: '0x8'
VEHICLE_FLAG_HOVER_UP_ONLY:
  description: Hover only pushes up
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 32
  value_description: '0x20'
VEHICLE_FLAG_HOVER_WATER_ONLY:
  description: Hover only pays attention to water level
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 4
  value_description: '0x4'
VEHICLE_FLAG_LIMIT_MOTOR_UP:
  description: Prevents ground vehicles from motoring into the sky
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
      - VEHICLE_BANKING_TIMESCALE
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 64
  value_description: '0x40'
  version: '1.1.5'
VEHICLE_FLAG_LIMIT_ROLL_ONLY:
  description: Removes vertical attraction for changes in vehicle pitch
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 2
  value_description: '0x2'
  version: '1.1.0'
VEHICLE_FLAG_MOUSELOOK_BANK:
  description: |-
    Makes vehicle try to turn toward mouselook direction assuming banking
    is enabled
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 256
  value_description: '0x100'
VEHICLE_FLAG_MOUSELOOK_STEER:
  description: Makes vehicle try to turn toward mouselook direction
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
    slwiki_categories:
      - LSL_Constants
      - LSL_Integer
      - LSL_Integer/bit_mask
      - LSL_Vehicle
  scope: constant.language.integer.bit_field.bit_mask
  type: integer
  value: 128
  value_description: '0x80'
# constant.language.integer.boolean
'TRUE':
  description: Integer constant for Boolean operations
  related:
    constants:
      - 'FALSE'
  scope: constant.language.integer.boolean
  type: integer
  value: 1
'FALSE':
  description: Integer constant for Boolean operations
  related:
    constants:
      - 'TRUE'
  scope: constant.language.integer.boolean
  type: integer
  value: 0
# constant.language.rotation
ZERO_ROTATION:
  description: '<0.0, 0.0, 0.0, 1.0>'
  scope: constant.language.rotation
  type: rotation
  value: '<0.0, 0.0, 0.0, 1.0>'
# constant.language.string
NULL_KEY:
  description: Indicates an empty key
  scope: constant.language.string
  snippets:
    - |-
      integer isKey(key in)
      {
          if (in)
          {
              return 2;
          }
          return (in == NULL_KEY);
      }//returns 2 if it's a valid key, 1 if it's NULL_KEY
    - |-
      // NULL_KEY itself is evaluated as FALSE only when it is casted as a key.
      default
      {
          state_entry()
          {
              // NULL_KEY is TRUE
              if (NULL_KEY)
              {
                  llOwnerSay("NULL_KEY is TRUE");
              }
              else
              {
                  llOwnerSay("NULL_KEY is FALSE");
              }
              // Casted NULL_KEY is FALSE
              if ((key)NULL_KEY)
              {
                  llOwnerSay("Casted NULL_KEY is TRUE");
              }
              else
              {
                  llOwnerSay("Casted NULL_KEY is FALSE");
              }
          }
      }
  type: string
  value: '"00000000-0000-0000-0000-000000000000"'
EOF:
  description: Indicates the last line of a notecard was read
  related:
    events:
      - dataserver
    functions:
      - llGetNotecardLine
  scope: constant.language.string
  snippets:
    - |-
      integer line;
      string card = "~config";
      key ncQuery;

      default {
          state_entry() {
              if (llGetInventoryType(card) == INVENTORY_NOTECARD) {
                  ncQuery = llGetNotecardLine(card, line = 0); }
              else {
                  llSay(PUBLIC_CHANNEL, "Notecard \"" + card + "\" not found!"); } }
          dataserver(key query_id, string data) {
              if (query_id == ncQuery) {
                  if (data == EOF) {
                      state ready; }
                  else {
                      ncQuery = llGetNotecardLine(card, ++line); } } } }

      state ready {
          state_entry() {
              llOwnerSay("I'm ready for action!"); } }
  type: string
  value: '"\n\n\n"'
TEXTURE_BLANK:
  description: UUID for the "Blank" texture
  related:
    constants:
      - PRIM_TEXTURE
      - TEXTURE_DEFAULT
      - TEXTURE_MEDIA
      - TEXTURE_PLYWOOD
      - TEXTURE_TRANSPARENT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llGetTexture
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetLinkTexture
      - llSetPrimitiveParams
      - llSetTexture
  scope: constant.language.string
  type: string
  value: '"5748decc-f629-461c-9a36-a35a221fe21f"'
TEXTURE_DEFAULT:
  description: Alias for TEXTURE_PLYWOOD
  related:
    constants:
      - PRIM_TEXTURE
      - TEXTURE_BLANK
      - TEXTURE_MEDIA
      - TEXTURE_PLYWOOD
      - TEXTURE_TRANSPARENT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llGetTexture
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetLinkTexture
      - llSetPrimitiveParams
      - llSetTexture
  scope: constant.language.string
  type: string
  value: '"89556747-24cb-43ed-920b-47caed15465f"'
TEXTURE_MEDIA:
  description: UUID for the "Default Media" texture
  related:
    constants:
      - PRIM_TEXTURE
      - TEXTURE_BLANK
      - TEXTURE_DEFAULT
      - TEXTURE_PLYWOOD
      - TEXTURE_TRANSPARENT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llGetTexture
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetLinkTexture
      - llSetPrimitiveParams
      - llSetTexture
  scope: constant.language.string
  type: string
  value: '"8b5fec65-8d8d-9dc5-cda8-8fdf2716e361"'
TEXTURE_PLYWOOD:
  description: UUID for the default "Plywood" texture
  related:
    constants:
      - PRIM_TEXTURE
      - TEXTURE_BLANK
      - TEXTURE_DEFAULT
      - TEXTURE_MEDIA
      - TEXTURE_TRANSPARENT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llGetTexture
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetLinkTexture
      - llSetPrimitiveParams
      - llSetTexture
  scope: constant.language.string
  type: string
  value: '"89556747-24cb-43ed-920b-47caed15465f"'
TEXTURE_TRANSPARENT:
  description: UUID for the "Default Transparent" texture
  related:
    constants:
      - PRIM_TEXTURE
      - TEXTURE_BLANK
      - TEXTURE_DEFAULT
      - TEXTURE_MEDIA
      - TEXTURE_PLYWOOD
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llGetTexture
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetLinkTexture
      - llSetPrimitiveParams
      - llSetTexture
  scope: constant.language.string
  type: string
  value: '"8dcd4a48-2d37-4909-9f78-f7a9eb4ef903"'
IMG_USE_BAKED_AUX1:
  related:
    constants:
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"9742065b-19b5-297c-858a-29711d539043"'
  version: '19.05.17.527341'
IMG_USE_BAKED_AUX2:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"03642e83-2bd1-4eb9-34b4-4c47ed586d2d"'
  version: '19.05.17.527341'
IMG_USE_BAKED_AUX3:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"edd51b77-fc10-ce7a-4b3d-011dfc349e4f"'
  version: '19.05.17.527341'
IMG_USE_BAKED_EYES:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"52cc6bb6-2ee5-e632-d3ad-50197b1dcb8a"'
  version: '19.05.17.527341'
IMG_USE_BAKED_HAIR:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"09aac1fb-6bce-0bee-7d44-caac6dbb6c63"'
  version: '19.05.17.527341'
IMG_USE_BAKED_HEAD:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"5a9f4a74-30f2-821c-b88d-70499d3e7183"'
  version: '19.05.17.527341'
IMG_USE_BAKED_LEFTARM:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"ff62763f-d60a-9855-890b-0c96f8f8cd98"'
  version: '19.05.17.527341'
IMG_USE_BAKED_LEFTLEG:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"8e915e25-31d1-cc95-ae08-d58a47488251"'
  version: '19.05.17.527341'
IMG_USE_BAKED_LOWER:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_SKIRT
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"24daea5f-0539-cfcf-047f-fbc40b2786ba"'
  version: '19.05.17.527341'
IMG_USE_BAKED_SKIRT:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_UPPER
  scope: constant.language.string
  type: string
  value: '"43529ce8-7faa-ad92-165a-bc4078371687"'
  version: '19.05.17.527341'
IMG_USE_BAKED_UPPER:
  related:
    constants:
      - IMG_USE_BAKED_AUX1
      - IMG_USE_BAKED_AUX2
      - IMG_USE_BAKED_AUX3
      - IMG_USE_BAKED_EYES
      - IMG_USE_BAKED_HAIR
      - IMG_USE_BAKED_HEAD
      - IMG_USE_BAKED_LEFTARM
      - IMG_USE_BAKED_LEFTLEG
      - IMG_USE_BAKED_LOWER
      - IMG_USE_BAKED_SKIRT
  scope: constant.language.string
  type: string
  value: '"ae2de45c-d252-50b8-5c6e-19f39ce79317"'
  version: '19.05.17.527341'
URL_REQUEST_GRANTED:
  description: |-
    Used with http_request when a public URL is successfully granted
  related:
    constants:
      - URL_REQUEST_DENIED
    events:
      - http_request
    functions:
      - llReleaseURL
      - llRequestSecureURL
      - llRequestURL
  scope: constant.language.string
  type: string
  value: '"URL_REQUEST_GRANTED"'
URL_REQUEST_DENIED:
  description: Used with http_request when a public URL is not available
  related:
    constants:
      - URL_REQUEST_GRANTED
    events:
      - http_request
    functions:
      - llReleaseURL
      - llRequestSecureURL
      - llRequestURL
  scope: constant.language.string
  type: string
  value: '"URL_REQUEST_DENIED"'
JSON_INVALID:
  related:
    constants:
      - JSON_NULL
    functions:
      - llJsonGetValue
      - llJsonValueType
  scope: constant.language.string
  type: string
  value: '"﷐"'
  value_description: 'Unicode char: 64976; U+FDD0;'
JSON_OBJECT:
  related:
    constants:
      - JSON_APPEND
      - JSON_ARRAY
      - JSON_NULL
      - JSON_DELETE
    functions:
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
      - llJson2List
      - llList2Json
  scope: constant.language.string
  type: string
  value: '"﷑"'
  value_description: 'Unicode char: 64977; U+FDD1;'
JSON_ARRAY:
  related:
    constants:
      - JSON_APPEND
      - JSON_OBJECT
      - JSON_NULL
      - JSON_DELETE
    functions:
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
      - llJson2List
      - llList2Json
  scope: constant.language.string
  type: string
  value: '"﷒"'
  value_description: 'Unicode char: 64978; U+FDD2;'
JSON_NUMBER:
  related:
    constants:
      - JSON_APPEND
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
      - JSON_STRING
      - JSON_NULL
      - JSON_TRUE
      - JSON_FALSE
      - JSON_DELETE
    functions:
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
  scope: constant.language.string
  type: string
  value: '"﷓"'
  value_description: 'Unicode char: 64979; U+FDD3;'
JSON_STRING:
  related:
    constants:
      - JSON_APPEND
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
      - JSON_NUMBER
      - JSON_NULL
      - JSON_TRUE
      - JSON_FALSE
      - JSON_DELETE
    functions:
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
  scope: constant.language.string
  type: string
  value: '"﷔"'
  value_description: 'Unicode char: 64980; U+FDD4;'
JSON_NULL:
  related:
    constants:
      - JSON_APPEND
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
      - JSON_DELETE
    functions:
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
  scope: constant.language.string
  type: string
  value: '"﷕"'
  value_description: 'Unicode char: 64981; U+FDD5;'
JSON_TRUE:
  related:
    constants:
      - JSON_APPEND
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
      - JSON_NUMBER
      - JSON_STRING
      - JSON_NULL
      - JSON_FALSE
      - JSON_DELETE
    functions:
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
  scope: constant.language.string
  type: string
  value: '"﷖"'
  value_description: 'Unicode char: 64982; U+FDD6;'
JSON_FALSE:
  related:
    constants:
      - JSON_APPEND
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
      - JSON_NUMBER
      - JSON_STRING
      - JSON_NULL
      - JSON_TRUE
      - JSON_DELETE
    functions:
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
  scope: constant.language.string
  type: string
  value: '"﷗"'
  value_description: 'Unicode char: 64983; U+FDD7;'
JSON_DELETE:
  related:
    constants:
      - JSON_APPEND
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
      - JSON_NULL
    functions:
      - llJsonSetValue
  scope: constant.language.string
  type: string
  value: '"﷘"'
  value_description: 'Unicode char: 64984; U+FDD8;'
# constant.language.vector
ZERO_VECTOR:
  description: '<0.0, 0.0, 0.0>'
  related:
    constants:
      - PRIM_COLOR
      - PRIM_NORMAL
      - PRIM_SPECULAR
      - PRIM_TEXTURE
      - PURSUIT_OFFSET
      - VEHICLE_LINEAR_MOTOR_OFFSET
    functions:
      - llDetectedGrab
      - llDetectedPos
      - llDetectedVel
      - llEdgeOfWorld
      - llGetAccel
      - llGetAgentSize
      - llGetLinkPrimitiveParams
      - llGetPos
      - llGetPrimitiveParams
      - llLinkSitTarget
      - llList2Vector
      - llSetCameraAtOffset
      - llSetCameraEyeOffset
      - llSetForce
      - llSetForceAndTorque
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
      - llSetTorque
      - llSitTarget
      - llTargetOmega
      - llVecNorm
  scope: constant.language.vector
  snippets:
    - |-
      integer is_non_zero_vector(vector input)
      {
          if (input)
          {
              return TRUE;
          }
          return FALSE;
      }
    - |-
      default
      {
          touch_end(integer num_detected)
          {
              key agent = llDetectedKey(num_detected);
      //      (size != ZERO_VECTOR) for agents (not objects) in the same sim
              vector size = llGetAgentSize(agent);
              if (size)
              {
                  llRegionSayTo(agent, PUBLIC_CHANNEL, "Your size: " + (string)size);
              }
          }
      }
  type: vector
  value: '<0.0, 0.0, 0.0>'
TOUCH_INVALID_TEXCOORD:
  description: |-
    Value returned by llDetectedTouchUV and llDetectedTouchST when the
    touch position is not valid
  related:
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedTouchST
      - llDetectedTouchUV
  scope: constant.language.vector
  type: vector
  value: '<-1.0, -1.0, 0.0>'
TOUCH_INVALID_VECTOR:
  description: |-
    Value returned by llDetectedTouchPos, llDetectedTouchNormal, and
    llDetectedTouchBinormal when the touch position is not valid
  related:
    events:
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedTouchNormal
      - llDetectedTouchBinormal
      - llDetectedTouchPos
  scope: constant.language.vector
  type: vector
  value: '<0.0, 0.0, 0.0>'
# entity.name.class.state
default:
  description: Name of default state that all scripts must have
  scope: entity.name.class.state
  snippets:
    - |-
      default
      {
          state_entry() { llSay(PUBLIC_CHANNEL, "Default state."); }
          touch_end(integer num_detected) { state other; }
      }
      state other
      {
          state_entry() { llSay(PUBLIC_CHANNEL, "Other state."); }
          touch_end(integer num_detected) { state default; }
      }
state:
  description: |-
    Keyword to indicate state block or state transition. State transitions
    within user-defined function declarations must be included within
    conditional blocks to work as intended.
  scope: entity.name.class.state
  snippets:
    - |-
      default
      {
          state_entry() { llSay(PUBLIC_CHANNEL, "Default state."); }
          touch_end(integer num_detected) { state other; }
      }
      state other
      {
          state_entry() { llSay(PUBLIC_CHANNEL, "Other state."); }
          touch_end(integer num_detected) { state default; }
      }
# invalid.deprecated
ATTACH_LPEC:
  description: |-
    DEPRECATED

    Use ATTACH_LEFT_PEC instead.
  related:
    constants:
      - ATTACH_LEFT_PEC
  scope: invalid.deprecated
  status: deprecated
  type: integer
  usage:
    - llAttachToAvatar(ATTACH_LEFT_PEC); // Use ATTACH_LEFT_PEC instead.
  value: 30
ATTACH_RPEC:
  description: |-
    DEPRECATED

    Use ATTACH_RIGHT_PEC instead.
  related:
    constants:
      - ATTACH_RIGHT_PEC
  scope: invalid.deprecated
  status: deprecated
  type: integer
  usage:
    - llAttachToAvatar(ATTACH_RIGHT_PEC); // Use ATTACH_RIGHT_PEC instead.
  value: 29
DATA_RATING:
  description: |-
    DEPRECATED

    Passed to llRequestAgentData to get a comma separated sting of integer
    ratings.

    Ratings are no longer in use and using this value in a query always returns
    "0, 0, 0, 0, 0, 0".
  related:
    constants:
      - DATA_ONLINE
      - DATA_NAME
      - DATA_BORN
      - DATA_PAYINFO
    functions:
      - llRequestAgentData
  scope: invalid.deprecated
  status: deprecated
  type: integer
  value: 4
  version: '1.1.0'
LAND_LARGE_BRUSH:
  description: |-
    DEPRECATED (wrong value)

    Use 2 for an 8x8 brush instead.
  related:
    constants:
      - LAND_LEVEL
      - LAND_RAISE
      - LAND_LOWER
      - LAND_SMOOTH
      - LAND_NOISE
      - LAND_REVERT
    functions:
      - llModifyLand
  scope: invalid.deprecated
  status: deprecated
  type: integer
  usage:
    - llModifyLand(LAND_LEVEL, 2); // use instead for 8x8 brush
    - llModifyLand(LAND_RAISE, 2); // use instead for 8x8 brush
    - llModifyLand(LAND_LOWER, 2); // use instead for 8x8 brush
    - llModifyLand(LAND_SMOOTH, 2); // use instead for 8x8 brush
    - llModifyLand(LAND_NOISE, 2); // use instead for 8x8 brush
    - llModifyLand(LAND_RAISE, 2); // use instead for 8x8 brush
  value: 3
LAND_MEDIUM_BRUSH:
  description: |-
    DEPRECATED (wrong value)

    Use 1 for a 4x4 brush instead.
  related:
    constants:
      - LAND_LEVEL
      - LAND_RAISE
      - LAND_LOWER
      - LAND_SMOOTH
      - LAND_NOISE
      - LAND_REVERT
    functions:
      - llModifyLand
  scope: invalid.deprecated
  status: deprecated
  type: integer
  usage:
    - llModifyLand(LAND_LEVEL, 1); // use instead for 4x4 brush
    - llModifyLand(LAND_RAISE, 1); // use instead for 4x4 brush
    - llModifyLand(LAND_LOWER, 1); // use instead for 4x4 brush
    - llModifyLand(LAND_SMOOTH, 1); // use instead for 4x4 brush
    - llModifyLand(LAND_NOISE, 1); // use instead for 4x4 brush
    - llModifyLand(LAND_RAISE, 1); // use instead for 4x4 brush
  value: 2
LAND_SMALL_BRUSH:
  description: |-
    DEPRECATED (wrong value)

    Use 0 for a 2x2 brush instead.
  related:
    constants:
      - LAND_LEVEL
      - LAND_RAISE
      - LAND_LOWER
      - LAND_SMOOTH
      - LAND_NOISE
      - LAND_REVERT
    functions:
      - llModifyLand
  scope: invalid.deprecated
  status: deprecated
  type: integer
  usage:
    - llModifyLand(LAND_LEVEL, 0); // use instead for 2x2 brush
    - llModifyLand(LAND_RAISE, 0); // use instead for 2x2 brush
    - llModifyLand(LAND_LOWER, 0); // use instead for 2x2 brush
    - llModifyLand(LAND_SMOOTH, 0); // use instead for 2x2 brush
    - llModifyLand(LAND_NOISE, 0); // use instead for 2x2 brush
    - llModifyLand(LAND_RAISE, 0); // use instead for 2x2 brush
  value: 1
PRIM_MATERIAL_LIGHT:
  description: |-
    DEPRECATED

    Use PRIM_FULLBRIGHT instead.

    Sets material to light.
  related:
    constants:
      - ALL_SIDES
      - PRIM_FULLBRIGHT
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
  scope: invalid.deprecated
  status: deprecated
  type: integer
  usage:
    - PRIM_FULLBRIGHT, integer face, integer boolean
  value: 7
PRIM_TYPE_LEGACY:
  description: |-
    DEPRECATED

    Use PRIM_TYPE instead.

    Sets the prim's shape.
  related:
    constants:
      - PRIM_TYPE
    functions:
      - llGetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llSetPrimitiveParams
  scope: invalid.deprecated
  status: deprecated
  type: integer
  value: 1
PSYS_SRC_INNERANGLE:
  description: |-
    DEPRECATED

    Use PSYS_SRC_ANGLE_BEGIN instead.
  related:
    constants:
      - PSYS_SRC_ANGLE_BEGIN
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: invalid.deprecated
  status: deprecated
  type: integer
  usage:
    - PSYS_SRC_ANGLE_BEGIN // use instead
  value: 10
PSYS_SRC_OUTERANGLE:
  description: |-
    DEPRECATED

    Use PSYS_SRC_ANGLE_END
  related:
    constants:
      - PSYS_SRC_ANGLE_END
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: invalid.deprecated
  status: deprecated
  type: integer
  usage:
    - PSYS_SRC_ANGLE_END // use instead
  value: 11
VEHICLE_FLAG_NO_FLY_UP:
  description: |-
    DEPRECATED

    Use VEHICLE_FLAG_NO_DEFLECTION_UP.
  related:
    constants:
      - VEHICLE_FLAG_NO_DEFLECTION_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_CAMERA_DECOUPLED
    functions:
      - llSetVehicleFlags
  scope: invalid.deprecated
  status: deprecated
  type: integer
  value: 1
  value_description: '0x1'
  version: '1.1.0'
llMakeExplosion:
  delay: 0.1
  description: |-
    DEPRECATED

    Makes a round explosion of particles.
  function-id: 100
  params:
    - name: particles
      type: integer
    - name: scale
      type: float
    - name: vel
      type: float
    - name: lifetime
      type: float
    - name: arc
      type: float
    - name: texture
      type: string
    - name: offset
      type: vector
  scope: invalid.deprecated
  status: deprecated
llMakeFire:
  delay: 0.1
  description: |-
    DEPRECATED

    Makes fire like particles.
  function-id: 103
  params:
    - name: particles
      type: integer
    - name: scale
      type: float
    - name: vel
      type: float
    - name: lifetime
      type: float
    - name: arc
      type: float
    - name: texture
      type: string
    - name: offset
      type: vector
  scope: invalid.deprecated
  status: deprecated
llMakeFountain:
  delay: 0.1
  description: |-
    DEPRECATED

    Makes a fountain of particles.
  function-id: 101
  params:
    - name: particles
      type: integer
    - name: scale
      type: float
    - name: vel
      type: float
    - name: lifetime
      type: float
    - name: arc
      type: float
    - name: bounce
      type: integer
    - name: texture
      type: string
    - name: offset
      type: vector
    - name: bounce_offset
      type: float
  scope: invalid.deprecated
  status: deprecated
llMakeSmoke:
  delay: 0.1
  description: |-
    DEPRECATED

    Makes smoke like particles.
  function-id: 102
  params:
    - name: particles
      type: integer
    - name: scale
      type: float
    - name: vel
      type: float
    - name: lifetime
      type: float
    - name: arc
      type: float
    - name: texture
      type: string
    - name: offset
      type: vector
  scope: invalid.deprecated
  status: deprecated
llRemoteDataSetRegion:
  description: |-
      DEPRECATED

      Use llOpenRemoteDataChannel instead.

      If an object using remote data channels changes regions, you must call
      this function to reregister the remote data channels. This call is not
      needed if the prim does not change regions.
  function-id: 263
  scope: invalid.deprecated
  status: deprecated
llSound:
  description: |-
    DEPRECATED

    Use llPlaySound / llLoopSound / llSetSoundQueueing instead.

    Plays sound at volume and whether it should loop or not.
  function-id: 85
  params:
    - name: sound
      type: string
    - name: volume
      type: float
    - name: queue
      type: integer
    - name: loop
      type: integer
  scope: invalid.deprecated
  status: deprecated
  version: '0.1.0'
llSoundPreload:
  description: |-
    DEPRECATED

    Use llPreloadSound instead.

    Preloads a sound on viewers within range.
  function-id: 126
  params:
    - name: sound
      type: string
  scope: invalid.deprecated
  status: deprecated
llXorBase64Strings:
  delay: 0.3
  description: |-
      DEPRECATED

      Use llXorBase64 instead.

      Incorrectly performs an exclusive or on two Base64 strings and returns a
      Base64 string. str2 repeats if it is shorter than str1. Retained for
      backwards compatability.
  function-id: 262
  params:
    - name: str1
      type: string
    - name: str2
      type: string
  scope: invalid.deprecated
  status: deprecated
  type: string
  version: '1.3.0'
llXorBase64StringsCorrect:
  description: |-
      DEPRECATED

      Use llXorBase64 instead.

      Incorrectly performs an exclusive or on two Base64 strings and returns a
      Base64 string. str2 repeats if it is shorter than str1. Retained for
      backwards compatability.
  function-id: 319
  params:
    - name: str1
      type: string
    - name: str2
      type: string
  scope: invalid.deprecated
  status: deprecated
  type: string
  version: '1.9.0(21)'
# invalid.illegal
KFM_CMD_SET_MODE:
  description: |-
    ILLEGAL

    This constant has no use for keyframed motion.
  scope: invalid.illegal
  status: illegal
  type: integer
  value: 3
OBJECT_RETURN_TIME:
  related:
    functions:
      - llGetObjectDetails
  scope: invalid.illegal
  status: illegal
  type: integer
  value: null
  version: '17.08.11.328159'
OBJECT_REZ_TIME:
  related:
    functions:
      - llGetObjectDetails
  scope: invalid.illegal
  status: illegal
  type: integer
  value: null
  version: '17.08.11.328159'
OBJECT_SAT_UPON:
  related:
    functions:
      - llGetObjectDetails
  scope: invalid.illegal
  status: illegal
  type: integer
  value: null
  version: '17.08.11.328159'
OBJECT_SELECTED:
  related:
    functions:
      - llGetObjectDetails
  scope: invalid.illegal
  status: illegal
  type: integer
  value: null
  version: '17.08.11.328159'
# invalid.illegal.unimplemented
PERMISSION_CHANGE_JOINTS:
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: integer
  value: 256
  value_description: '0x100'
PERMISSION_CHANGE_PERMISSIONS:
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: integer
  value: 512
  value_description: '0x200'
PERMISSION_RELEASE_OWNERSHIP:
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: integer
  value: 64
  value_description: '0x40'
PERMISSION_REMAP_CONTROLS:
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: integer
  value: 8
  value_description: '0x8'
PRIM_CAST_SHADOWS:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Takes 1 parameter, an integer, but has no effect when set and always returns
    0 if used in llGetPrimitiveParams.
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: integer
  value: '24'
PSYS_SRC_OBJ_REL_MASK:
  related:
    functions:
      - llLinkParticleSystem
      - llParticleSystem
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: integer
  value: 1
STATUS_CAST_SHADOWS:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    If TRUE, object casts shadows on other objects.
  params:
    - default: 'FALSE'
      name: boolean
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
      - llSetStatus
    slwiki_categories:
      - LSL_Integer/bit_mask
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: integer
  value: 512
  value_description: '0x200'
TARGETED_EMAIL_ROOT_CREATOR:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Causes the message to be sent to the creator of the root prim in the calling object.
  related:
    constants:
      - TARGETED_EMAIL_OBJECT_OWNER
    functions:
      - llTargetedEmail
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: integer
  value: 1
  version: '2020-04-10'
event:
  scope: invalid.illegal.unimplemented
  status: unimplemented
llClearExperiencePermissions:
  params:
    - name: agent
      type: key
  scope: invalid.illegal.unimplemented
  status: unimplemented
  version: '14.07.18.292162'
llCloud:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Returns the cloud density at the object position + offset.
    Always returns 0.0 now.
  function-id: 43
  params:
    - name: offset
      type: vector
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: float
llCollisionSprite:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Suppresses default collision sprites, replaces default impact sprite
    with impact_sprite (use an empty string to just suppress)
  function-id: 161
  params:
    - name: impact_sprite
      type: string
  scope: invalid.illegal.unimplemented
  status: unimplemented
  version: '0.2.0'
llGetExperienceList:
  params:
    - name: agent
      type: key
  scope: invalid.illegal.unimplemented
  status: unimplemented
  type: list
  version: '14.07.18.292162'
llPointAt:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Makes agent that owns object point at pos
  function-id: 131
  params:
    - name: pos
      type: vector
  scope: invalid.illegal.unimplemented
  status: unimplemented
llRefreshPrimURL:
  delay: 20.0
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Reloads the web page shown on the sides of the object
  function-id: 306
  scope: invalid.illegal.unimplemented
  status: unimplemented
llReleaseCamera:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Returns camera to agent avatar
  function-id: 116
  params:
    - name: avatar
      type: key
  scope: invalid.illegal.unimplemented
  status: unimplemented
llRemoteLoadScript:
  delay: 3.0
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Use llRemoteLoadScriptPin instead.
  function-id: 251
  params:
    - name: target
      type: key
    - name: name
      type: string
    - name: running
      type: integer
    - name: start_param
      type: integer
  scope: invalid.illegal.unimplemented
  status: unimplemented
llSetPrimURL:
  delay: 20.0
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Updates the URL for the web page shown on the sides of the object
  function-id: 305
  params:
    - name: url
      type: string
  scope: invalid.illegal.unimplemented
  status: unimplemented
llStopPointAt:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Stops pointing agent that owns object
  function-id: 132
  scope: invalid.illegal.unimplemented
  status: unimplemented
llTakeCamera:
  description: |-
    ILLEGAL / UNIMPLEMENTED

    Moves avatar's viewpoint to task
  function-id: 115
  params:
    - name: avatar
      type: key
  scope: invalid.illegal.unimplemented
  status: unimplemented
# keyword.control.conditional
if:
  description: |-
    if statement

    true conditions by type:
    - integer: if not zero
    - float: if not zero
    - string: if length not zero
    - key: only if valid key and not NULL_KEY
    - vector: if not ZERO_VECTOR
    - rotation: if not ZERO_ROTATION
    - list: if length is not zero
  scope: keyword.control.conditional
  related:
    slwiki:
      - else
      - return
      - jump
      - LSL_Flow_Control
  usage:
    - |-
      default
      {
          state_entry()
          {
              if (/* condition */)
              {
                  // statements
              }
              else if (/* condition */)
              {
                  // statements
              }
              else
              {
                  // statements
              }
          }
      }
else:
  description: |-
    else clause

    true conditions by type:
    - integer: if not zero
    - float: if not zero
    - string: if length not zero
    - key: only if valid key and not NULL_KEY
    - vector: if not ZERO_VECTOR
    - rotation: if not ZERO_ROTATION
    - list: if length is not zero
  scope: keyword.control.conditional
  related:
    slwiki:
      - if
      - return
      - jump
      - LSL_Flow_Control
  usage:
    - |-
      default
      {
          state_entry()
          {
              if (/* condition */)
              {
                  // statements
              }
              else if (/* condition */)
              {
                  // statements
              }
              else
              {
                  // statements
              }
          }
      }
# keyword.control.flow
jump:
  description: jump statement
  scope: keyword.control.flow
  related:
    slwiki:
      - if
      - else
      - return
  usage:
    - |-
      // prim output is "5" then "6" in local chat for touching avatar

      default
      {
          touch_end(integer num_detected)
          {
              integer a = 5;
              jump over;
              @in;
              a = 6;
              @over;
              llRegionSayTo(llDetectedKey(num_detected), PUBLIC_CHANNEL, (string)a);
              if (a < 6)
              {
                  jump in;
              }
          }
      }
return:
  description: |-
    Leave current function or event handler while optionally passing
    back a value
  scope: keyword.control.flow
  related:
    slwiki:
      - if
      - else
      - jump
  usage:
    - |-
      integer getLinkWithName(string name)
      {
          //  Start at zero (single prim) or 1 (two or more prims)
          integer index = llGetLinkNumber() != 0;
          //  [0, 1) or [1, llGetNumberOfPrims()]
          integer number = llGetNumberOfPrims() + index;
          for (; index < number; ++index)
          {
              if (llGetLinkName(index) == name)
              {
                  return index;
              }
          }
          //  No prim with that name, return -1
          return -1;
      }
# keyword.control.loop
for:
  description: |-
    for loop

    true conditions by type:
    - integer: if not zero
    - float: if not zero
    - string: if length not zero
    - key: only if valid key and not NULL_KEY
    - vector: if not ZERO_VECTOR
    - rotation: if not ZERO_ROTATION
    - list: if length is not zero
  scope: keyword.control.loop
  related:
    slwiki:
      - for
      - do_while
      - while
      - LSL_Flow_Control
  snippets:
    - |-
      default
      {
          state_entry()
          {
              for (initializer; condition; iteration)
              {
                  // statements
              }
          }
      }
do:
  description: |-
    do while loop

    true conditions by type:
    - integer: if not zero
    - float: if not zero
    - string: if length not zero
    - key: only if valid key and not NULL_KEY
    - vector: if not ZERO_VECTOR
    - rotation: if not ZERO_ROTATION
    - list: if length is not zero
  scope: keyword.control.loop
  related:
    slwiki:
      - for
      - do_while
      - while
      - LSL_Flow_Control
  snippets:
    - |-
      default
      {
          state_entry()
          {
              do
              {
                  // statements
              }
              while (condition);
          }
      }
    - |-
      // when index can be negative

      list listOfTenItems = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"];

      integer index = -llGetListLength(listOfTenItems);
      do
      {
          // statements
      }
      while (++index);
    - |-
      // when index cannot be negative

      list listOfTenItems = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"];

      integer lengthOfList = llGetListLength(listOfTenItems);
      integer index;

      do
      {
          // statements
      }
      while (++index < lengthOfList);
while:
  description: |-
    while loop

    true conditions by type:
    - integer: if not zero
    - float: if not zero
    - string: if length not zero
    - key: only if valid key and not NULL_KEY
    - vector: if not ZERO_VECTOR
    - rotation: if not ZERO_ROTATION
    - list: if length is not zero
  scope: keyword.control.loop
  related:
    slwiki:
      - for
      - do_while
      - while
      - LSL_Flow_Control
  snippets:
    - |-
      default
      {
          state_entry()
          {
              while (condition)
              {
                  // statements
              }
          }
      }
# reserved.godmode
llGodLikeRezObject:
  description: Rezzes directly off of UUID if owner is in God Mode
  function-id: 135
  params:
    - name: inventory
      type: key
    - name: pos
      type: vector
  scope: reserved.godmode
  status: godmode
  related:
    slwiki:
      - God_Mode
    slwiki_categories:
      - LSL_God_Mode
llSetObjectPermMask:
  description: |-
    Sets the given permission mask to the new value on the root object
    the task is attached to (requires God Mode)
  function-id: 288
  params:
    - name: mask
      type: integer
    - name: value
      type: integer
  scope: reserved.godmode
  status: godmode
  related:
    slwiki:
      - God_Mode
    slwiki_categories:
      - LSL_God_Mode
llSetInventoryPermMask:
  description: |-
    Sets the given permission mask to the new value on the inventory
    item (requires God Mode)
  function-id: 290
  params:
    - name: item
      type: string
    - name: mask
      type: integer.bit_field
    - name: value
      type: integer
  scope: reserved.godmode
  related:
    slwiki:
      - God_Mode
    slwiki_categories:
      - LSL_God_Mode
      - LSL_Integer/bit_field
  status: godmode
# reserved.log
print:
  description: Prints a parameter of any type to an internal server log.
  related:
    slwiki:
      - print
    slwiki_categories:
      - LSL_Keywords
  scope: reserved.log
  snippets:
    - |-
      log_to_internal_lindenlab_server()
      {
          //  don't spam!
          return;

          print(0.0);
          print(0);
          print(NULL_KEY);
          print([]);
          print(ZERO_ROTATION);
          print(EOF);
          print(ZERO_VECTOR);
      }
# storage.type
integer:
  description: |-
      Integer type

      32-bit integer value
      [-2 147 483 648 to +2 147 483 647]
      [0x80000000 to 0x7FFFFFFF]
  related:
    slwiki:
      - LSL_Errors#ERROR_:_Type_mismatch
    slwiki_categories:
      - LSL
      - LSL_Types
      - LSL_Flags
      - LSL_Integer/attach_point
      - LSL_Integer/bit_field
      - LSL_Integer/bit_mask
      - LSL_Integer/boolean
      - LSL_Integer/click_action
      - LSL_Integer/experience_error
      - LSL_Integer/handle
      - LSL_Integer/link
      - LSL_Integer/pass
      - LSL_Integer/status
      - LSL_Integer/type
  scope: storage.type
  snippets:
    - integer intNum = 1;
    - integer intConst = TRUE;
    - integer intHex = 0x01;
    - integer intNeg = -1;
float:
  description: |-
      Floating-point type

      32-bit floating point value
      [1.175494351E-38 to 3.402823466E+38]
  related:
    slwiki:
      - LSL_Errors#ERROR_:_Type_mismatch
      - Format_Decimal
      - Float2Hex
      - Float2Sci
    slwiki_categories:
      - LSL
      - LSL_Types
  scope: storage.type
  snippets:
    - float min = 1.175494351E-38;
    - float max = 3.402823466E+38;
    - float sci = 2.6E-5;
    - float sci_a = 2.6E+3;
    - float sci_b = 2.6E3;
    - float sci_c = 26000.E-1;
    - float f = 2600;//implicitly typecast to a float
    - float E = 85.34859;
    - float cast = (float)"42";//explicit typecast to a float
string:
  description: |-
      String type

      Holds utf-8 encoded text data.
  related:
    functions:
      - llGetFreeMemory
    slwiki:
      - LSL_Errors#ERROR_:_Type_mismatch
      - String#Escape_Codes
      - String#String_Length_Restraints
    slwiki_categories:
      - LSL
      - LSL_Types
      - LSL_Communications
  scope: storage.type
  snippets:
    - string s = "whatever";
    - string quote_single = "'";
    - string escaped_new_line = "\n";// llUnescapeURL("%0A")
    - string escaped_tab = "\t";// llUnescapeURL("%20%20%20%20")
    - string escaped_quote_double = "\"";
    - string escaped_back_slash = "\\";
key:
  description: |-
      Key type

      Use NULL_KEY to test for empty keys.
      128-bit unique identifier (in LSL either UUID-1 or UUID-4)
  related:
    constants:
      - NULL_KEY
    slwiki:
      - LSL_Errors#ERROR_:_Type_mismatch
      - UUID
    slwiki_categories:
      - LSL
      - LSL_Types
      - LSL_Key/channel
      - LSL_Key/handle
    wikipedia:
        en:
          - Hexadecimal
          - UUID
          - MD5
          - SHA1
  scope: storage.type
  snippets:
    - |-
      key uuid1 = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx";
      // where: x is [0-9a-f]
    - |-
      key uuid4 = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";
      // where: 4 is 4, x is [0-9a-f], y is [8-9a-b]
vector:
  description: |-
      Vector type of 3 floats

      Used to represent 3D motion, Euler angles, and color.

      Access components by .x, .y, or .z
  related:
    slwiki:
      - LSL_Errors#ERROR_:_Type_mismatch
      - Quaternion
    slwiki_categories:
      - LSL
      - LSL_Types
      - LSL_Vector/direction
      - LSL_Movement
      - LSL_Color
  scope: storage.type
  snippets:
    - |-
      vector vec;
      float x = vec.x;
      float y = vec.y;
      float z = vec.z;
rotation:
  description: |-
      Rotation type of 4 floats

      Used to represent rotation.

      Access components by .x, .y, .z, or .s
  related:
    slwiki:
      - LSL_Errors#ERROR_:_Type_mismatch
      - Quaternion
      - LSL_Rotation_Synopsis
      - Radians
    slwiki_categories:
      - LSL
      - LSL_Types
    wikipedia:
        en:
          - Right_hand_rule
          - Euler_angles#Tait-Bryan_angles
  scope: storage.type
  snippets:
    - |-
      rotation rot;
      float x = rot.x;
      float y = rot.y;
      float z = rot.z;
      float s = rot.s;
    - |-
      quaternion quat;
      float x = quat.x;
      float y = quat.y;
      float z = quat.z;
      float s = quat.s;
quaternion:
  description: |-
      Rotation type of 4 floats

      Used to represent rotation.

      Access components by .x, .y, .z, or .s
  related:
    slwiki:
      - LSL_Errors#ERROR_:_Type_mismatch
      - Rotation
      - LSL_Rotation_Synopsis
      - Radians
    slwiki_categories:
      - LSL
      - LSL_Types
    wikipedia:
        en:
          - Right_hand_rule
          - Euler_angles#Tait-Bryan_angles
  scope: storage.type
  snippets:
    - |-
      quaternion quat;
      float x = quat.x;
      float y = quat.y;
      float z = quat.z;
      float s = quat.s;
    - |-
      rotation rot;
      float x = rot.x;
      float y = rot.y;
      float z = rot.z;
      float s = rot.s;
list:
  description: |-
      List of various data types.

      List items may not be of type list, but any other type. List items may have
      different types.
  related:
    slwiki:
      - LSL_Errors#ERROR_:_Type_mismatch
    slwiki_categories:
      - LSL
      - LSL_Types
      - LSL_List/instructions
  scope: storage.type
# support.function.builtin
llSin:
  description: Returns the sine of theta
  function-id: 0
  params:
    - description: Angle expressed in radians
      name: theta
      type: float
  related:
    constants:
      - PI
      - PI_BY_TWO
      - TWO_PI
      - DEG_TO_RAD
      - RAD_TO_DEG
    functions:
      - llAsin
      - llCos
      - llAcos
      - llTan
      - llAtan2
  scope: support.function.builtin
  type: float
llCos:
  description: Returns the cosine of theta
  function-id: 1
  params:
    - description: Angle expressed in radians
      name: theta
      type: float
  related:
    constants:
      - PI
      - PI_BY_TWO
      - TWO_PI
      - DEG_TO_RAD
      - RAD_TO_DEG
    functions:
      - llSin
      - llAsin
      - llAcos
      - llTan
      - llAtan2
  scope: support.function.builtin
  type: float
llTan:
  description: Returns the tangent of theta
  function-id: 2
  params:
    - description: Angle expressed in radians
      name: theta
      type: float
  related:
    constants:
      - PI
      - PI_BY_TWO
      - TWO_PI
      - DEG_TO_RAD
      - RAD_TO_DEG
    functions:
      - llSin
      - llAsin
      - llCos
      - llAcos
      - llAtan2
  scope: support.function.builtin
  type: float
llAtan2:
  description: |-
    Returns the arctangent2 of y, x.
    The returned value is in the range [-PI, PI].
  function-id: 3
  params:
    - description: float y
      name: 'y'
      type: float
    - description: float x
      name: x
      type: float
  related:
    constants:
      - PI
      - PI_BY_TWO
      - TWO_PI
      - DEG_TO_RAD
      - RAD_TO_DEG
    functions:
      - llSin
      - llAsin
      - llCos
      - llAcos
      - llTan
    wikipedia:
        en:
          - Atan2
          - Inverse_trigonometric_function
  scope: support.function.builtin
  type: float
llSqrt:
  description: |-
    Returns the square root of val, or returns `0` and triggers a Math
    Error for imaginary results
  function-id: 4
  params:
    - description: positive number (`val >= 0.0`)
      name: val
      type: float
  related:
    constants:
      - SQRT2
    functions:
      - llLog
      - llLog10
      - llPow
    slwiki_categories:
      - LSL_Error
      - LSL_Error/Math
  scope: support.function.builtin
  type: float
llPow:
  description: |-
    Returns the base raised to the power exponent, or returns `0` and triggers
    Math Error for imaginary results.
  function-id: 5
  params:
    - description: float base
      name: base
      type: float
    - description: float exponent
      name: exponent
      type: float
  related:
    functions:
      - llLog
      - llLog10
      - llSqrt
    slwiki_categories:
      - LSL_Error
  scope: support.function.builtin
  type: float
llAbs:
  description: Returns the positive version of val
  function-id: 6
  params:
    - description: Any integer value
      name: val
      type: integer
  related:
    functions:
      - llFabs
    slwiki_categories:
      - LSL_Integer
    wikipedia:
        en:
          - Absolute_value
  scope: support.function.builtin
  type: integer
llFabs:
  description: Returns the positive version of val
  function-id: 7
  params:
    - description: Any valid float value
      name: val
      type: float
  related:
    functions:
      - llAbs
    wikipedia:
        en:
          - Absolute_value
  scope: support.function.builtin
  type: float
llFrand:
  description: Returns a pseudo random number in the range [0,mag) or (mag,0]
  function-id: 8
  params:
    - description: Any valid float value
      name: mag
      type: float
  related:
    functions:
      - llListRandomize
      - llRound
      - llFloor
      - llCeil
    slwiki:
      - Pseudo-random_Number_Generator
    wikipedia:
        en:
          - Interval_(mathematics)#Notations_for_intervals
  scope: support.function.builtin
  type: float
llFloor:
  description: |-
    Returns largest `integer value <= val`
  function-id: 9
  params:
    - description: Any valid float value
      name: val
      type: float
  related:
    functions:
      - llListRandomize
      - llRound
      - llFrand
      - llCeil
  scope: support.function.builtin
  type: integer
llCeil:
  description: Returns smallest `integer value >= val`
  function-id: 10
  params:
    - description: Any valid float value
      name: val
      type: float
  related:
    functions:
      - llListRandomize
      - llRound
      - llFrand
      - llFloor
  scope: support.function.builtin
  type: integer
llRound:
  description: Returns val rounded to the nearest integer
  function-id: 11
  params:
    - description: Any valid float value
      name: val
      type: float
  related:
    functions:
      - llListRandomize
      - llFloor
      - llFrand
      - llCeil
  scope: support.function.builtin
  type: integer
llVecMag:
  description: |-
    Returns the magnitude of v, the undirected non-negative distance from
    origin (`<0.0, 0.0, 0.0>`) to v.
  function-id: 12
  params:
    - description: vector v
      name: v
      type: vector
  related:
    functions:
      - llVecNorm
      - llVecDist
  scope: support.function.builtin
  type: float
llVecNorm:
  description: Returns the v normalized
  function-id: 13
  params:
    - description: vector v
      name: v
      type: vector
  related:
    functions:
      - llVecMag
      - llVecDist
  scope: support.function.builtin
  type: vector
  snippets:
    - |-
      float vecmag = llSqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
llVecDist:
  description: Returns the 3D distance between v1 and v2
  function-id: 14
  params:
    - description: Any valid vector
      name: v1
      type: vector
    - description: Any valid vector
      name: v2
      type: vector
  related:
    functions:
      - llVecMag
      - llVecNorm
  scope: support.function.builtin
  type: float
llRot2Euler:
  description: Returns the Euler representation (roll, pitch, yaw) of quat
  function-id: 15
  params:
    - description: Any valid rotation
      name: quat
      type: rotation
  related:
    constants:
      - DEG_TO_RAD
      - RAD_TO_DEG
    functions:
      - llEuler2Rot
    wikipedia:
        en:
          - Euler_Angles
  scope: support.function.builtin
  type: vector
llEuler2Rot:
  description: Returns the rotation representation of Euler Angles v
  function-id: 16
  params:
    - description: Euler Angles v
      name: v
      type: vector
  related:
    constants:
      - DEG_TO_RAD
      - RAD_TO_DEG
    functions:
      - llRot2Euler
    slwiki_categories:
      - LSL_Euler
    wikipedia:
        en:
          - Euler_Angles
  scope: support.function.builtin
  type: rotation
llAxes2Rot:
  description: |-
    Returns the rotation defined by the coordinate axes (mutually orthogonal
      unit vectors)
  function-id: 17
  params:
    - description: vector fwd
      name: fwd
      type: vector
    - description: vector left
      name: left
      type: vector
    - description: vector up
      name: up
      type: vector
  scope: support.function.builtin
  type: rotation
llRot2Fwd:
  description: |-
    Returns the forward vector defined by q, i.e. a unit vector pointing
    in the local positive X direction.
  function-id: 18
  params:
    - description: rotation q
      name: q
      type: rotation
  related:
    functions:
      - llRot2Left
      - llRot2Up
      - llRot2Axis
      - llRot2Angle
  scope: support.function.builtin
  type: vector
llRot2Left:
  description: |-
    Returns the left vector defined by q, i.e. a unit vector pointing
    in the local positive Y direction.
  function-id: 19
  params:
    - description: rotation q
      name: q
      type: rotation
  related:
    functions:
      - llRot2Up
      - llRot2Fwd
      - llRot2Axis
      - llRot2Angle
  scope: support.function.builtin
  type: vector
llRot2Up:
  description: |-
    Returns the up vector defined by q, i.e. a unit vector pointing in
    the positive local Z direction.
  function-id: 20
  params:
    - description: rotation q
      name: q
      type: rotation
  related:
    functions:
      - llRot2Fwd
      - llRot2Left
      - llRot2Axis
      - llRot2Angle
  scope: support.function.builtin
  type: vector
llRotBetween:
  description: Returns the rotation to rotate start to end
  function-id: 21
  params:
    - description: Direction start vector
      name: start
      type: vector
    - description: Direction end vector
      name: end
      type: vector
  related:
    functions:
      - llAngleBetween
  scope: support.function.builtin
  snippets:
    - |-
      rotation RotBetween(vector start, vector end)
      {
          rotation rot = llRotBetween(start, end);
          float d = start * start;
          if (d)
              if ((d = llPow(end * end / d, 0.25)))
                  return <rot.x * d, rot.y * d, rot.z * d, rot.s * d>;
          return rot;
      }
    - |-
      rotation RotBetween(vector a, vector b)
      {
          float aabb = llSqrt((a * a) * (b * b));
          if (aabb)
          {
              float ab = (a * b) / aabb;
              vector c = <(a.y * b.z - a.z * b.y) / aabb,
                          (a.z * b.x - a.x * b.z) / aabb,
                          (a.x * b.y - a.y * b.x) / aabb >;
              float cc = c * c;
              if (cc)
              {
                  float s;
                  if (ab > -0.707107) s = 1 + ab;
                  else s = cc / (1 + llSqrt(1 - cc));

                  float m = llSqrt(cc + s * s);
                  return <c.x / m, c.y / m, c.z / m, s / m>;
              }
              if (ab > 0) return ZERO_ROTATION;
              float m = llSqrt(a.x * a.x + a.y * a.y);
              if (m) return <a.y / m, -a.x / m, 0, 0>;
              return <1, 0, 0, 0>;
          }
          return ZERO_ROTATION;
      }
  type: rotation
llWhisper:
  description: Whispers the text of msg on channel
  function-id: 22
  params:
    - description: Any valid integer value
      name: channel
      type: integer
    - description: Message to be transmitted with max of 1024 bytes.
      name: msg
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - PUBLIC_CHANNEL
    events:
      - listen
    functions:
      - llListen
      - llOwnerSay
      - llRegionSay
      - llRegionSayTo
      - llSay
      - llShout
      - llInstantMessage
    slwiki:
      - Hello_Avatar
      - Chat_channel
      - LSL_Protocol#Known_negative_chat_channels
    slwiki_categories:
      - LSL_Chat
  scope: support.function.builtin
  usage:
    - |-
      llWhisper(PUBLIC_CHANNEL, "Hello, Avatar!");
llSay:
  description: Says the text of msg on channel
  function-id: 23
  params:
    - description: Any valid integer value
      name: channel
      type: integer
    - description: Message to be transmitted with max of 1024 bytes.
      name: msg
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - PUBLIC_CHANNEL
    events:
      - listen
    functions:
      - llListen
      - llOwnerSay
      - llRegionSay
      - llRegionSayTo
      - llWhisper
      - llShout
      - llInstantMessage
    slwiki:
      - Hello_Avatar
      - Chat_channel
      - LSL_Protocol#Known_negative_chat_channels
    slwiki_categories:
      - LSL_Chat
  scope: support.function.builtin
  usage:
    - |-
      llSay(PUBLIC_CHANNEL, "Hello, Avatar!");
llShout:
  description: Shouts the text of msg on channel
  function-id: 24
  params:
    - description: Any valid integer value
      name: channel
      type: integer
    - description: Message to be transmitted with max of 1024 bytes.
      name: msg
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - PUBLIC_CHANNEL
    events:
      - listen
    functions:
      - llListen
      - llOwnerSay
      - llRegionSay
      - llRegionSayTo
      - llWhisper
      - llSay
      - llInstantMessage
    slwiki:
      - Hello_Avatar
      - Chat_channel
      - LSL_Protocol#Known_negative_chat_channels
    slwiki_categories:
      - LSL_Chat
  scope: support.function.builtin
  usage:
    - |-
      llShout(PUBLIC_CHANNEL, "Hello, Avatar!");
llListen:
  description: |-
    Sets a callback for `msg` on `channel` from `name` and `id` (name, id, and/or
    msg can be empty) and returns an ID that can be used to deactivate
    or remove the listen
  function-id: 25
  params:
    - description: |-
        Any valid integer value, use PUBLIC_CHANNEL (0) for local chat
      name: channel
      type: integer
    - description: Filter for specific prim name or agent legacy name
      name: name
      type: string
    - description: |-
        Filter for specific group, agent or prim UUID. Considered blank
        if invalid key or NULL_KEY.
      name: id
      type: key
    - description: Filter for specific message
      name: msg
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - PUBLIC_CHANNEL
      - NULL_KEY
    events:
      - listen
    functions:
      - llListenRemove
      - llListenControl
      - llRegionSay
      - llRegionSayTo
      - llWhisper
      - llSay
      - llShout
      - llDialog
      - llTextBox
    slwiki:
      - Hello_Avatar
      - Chat_channel
      - LSL_Protocol#Known_negative_chat_channels
      - Prim
      - UUID
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/Name
      - LSL_Chat
      - LSL_Group
      - LSL_Error
  scope: support.function.builtin
  type: integer.handle
llListenControl:
  description: Makes a listen event callback active or inactive
  function-id: 26
  params:
    - description: handle to control listen event
      name: number
      type: integer
    - description: activates or deactivates
      name: active
      type: integer
      default: 'TRUE'
  related:
    events:
      - listen
    functions:
      - llListen
      - llListenRemove
    slwiki_categories:
      - LSL_Integer/handle
  scope: support.function.builtin
llListenRemove:
  description: Removes listen event callback handle
  function-id: 27
  params:
    - description: handle to control listen event
      name: handle
      type: integer
  related:
    events:
      - listen
    functions:
      - llListen
      - llListenControl
  scope: support.function.builtin
llSensor:
  description: |-
    Performs a single scan for name and id with type (AGENT, ACTIVE, PASSIVE,
    and/or SCRIPTED) within range meters and arc radians of forward vector
    (name, id, and/or keytype can be empty or 0)
  function-id: 28
  params:
    - description: object or agent name
      name: name
      type: string
    - description: group, agent or object UUID that is in the same region
      name: id
      type: key
    - description: |-
        mask (AGENT, AGENT_BY_LEGACY_NAME, AGENT_BY_USERNAME, ACTIVE,
        PASSIVE and/or SCRIPTED)
      name: type
      type: integer
    - description: distance from center [0.0, 96.0m]
      name: range
      type: float
    - description: |-
        the max angle between the local x-axis of the prim and detectable
        objects, range 0.0 to PI
      name: arc
      type: float
  related:
    constants:
      - AGENT_BY_LEGACY_NAME
      - AGENT
      - AGENT_BY_USERNAME
      - ACTIVE
      - PASSIVE
      - SCRIPTED
      - PI
      - PI_BY_TWO
    events:
      - sensor
      - no_sensor
    functions:
      - llGetAgentList
      - llSensorRepeat
      - llSensorRemove
    slwiki_categories:
      - LSL_Avatar/Name
  scope: support.function.builtin
llSensorRepeat:
  description: |-
    Sets a callback for name and id with type (AGENT, ACTIVE, PASSIVE,
    and/or SCRIPTED) within range meters and arc radians of forward vector (name,
    id, and/or keytype can be empty or 0) and repeats every rate seconds
  function-id: 29
  params:
    - description: Object or avatar name
      name: name
      type: string
    - description: group, avatar or object UUID
      name: id
      type: key
    - description: mask
      name: type
      type: integer
    - description: range in meters, [0.0, 96.0]
      name: range
      type: float
    - description: |-
        the max angle between the local x-axis of the prim and detectable
        objects, range [0.0, PI]
      name: arc
      type: float
    - description: How often a sensor / no_sensor will be queued.
      name: rate
      type: float
  related:
    constants:
      - AGENT_BY_LEGACY_NAME
      - AGENT
      - AGENT_BY_USERNAME
      - ACTIVE
      - PASSIVE
      - SCRIPTED
      - PI
      - PI_BY_TWO
    events:
      - sensor
      - no_sensor
    functions:
      - llGetAgentList
      - llSensor
      - llSensorRemove
    slwiki_categories:
      - LSL_Avatar/Name
  scope: support.function.builtin
llSensorRemove:
  description: Removes the sensor setup by llSensorRepeat
  function-id: 30
  related:
    constants:
      - AGENT_BY_LEGACY_NAME
      - AGENT
      - AGENT_BY_USERNAME
      - ACTIVE
      - PASSIVE
      - SCRIPTED
      - PI
      - PI_BY_TWO
    events:
      - sensor
      - no_sensor
    functions:
      - llGetAgentList
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Avatar/Name
  scope: support.function.builtin
llDetectedName:
  description: |-
    Returns the name of detected object number (returns empty string
    if number is not a valid sensed object)
  function-id: 31
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: string
llDetectedKey:
  description: |-
    Returns the key of detected object number (returns empty key if number
    is not a valid sensed object)
  function-id: 32
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: key
llDetectedOwner:
  description: |-
    Returns the key of detected object's owner (returns empty key if
    number is not a valid sensed object)
  function-id: 33
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: key
llDetectedType:
  description: |-
    Returns the type (AGENT, ACTIVE, PASSIVE, SCRIPTED) of detected object
    (returns 0 if number is not a valid sensed object)
  function-id: 34
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: integer
llDetectedPos:
  description: |-
    Returns the position of detected object number (returns <0,0,0> if
    number is not a valid sensed object)
  function-id: 35
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: vector
llDetectedVel:
  description: |-
    Returns the velocity of detected object number (returns <0,0,0> if
    number is not a valid sensed object)
  function-id: 36
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: vector
llDetectedGrab:
  description: |-
    Returns the grab offset of the user touching object (returns <0,0,0>
    if number is not a valid sensed object)
  function-id: 37
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: vector
llDetectedRot:
  description: |-
    Returns the rotation of detected object number (returns <0,0,0,1>
    if number is not a valid sensed object)
  function-id: 38
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: rotation
llDetectedGroup:
  description: Returns TRUE if detected object is part of same group as owner
  function-id: 39
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: integer
llDetectedLinkNumber:
  description: |-
    Returns the link position of the triggered event for touches and
    collisions only
  function-id: 40
  params:
    - description: Index of detection information
      name: number
      type: integer
  related:
    constants:
      - NULL_KEY
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: integer.link
llDie:
  description: Deletes the object
  function-id: 41
  related:
    functions:
      - llAttachToAvatarTemp
      - llBreakLink
      - llDetachFromAvatar
      - llRemoveInventory
    slwiki:
      - Link_set
    slwiki_categories:
      - LSL_Attachment
  scope: support.function.builtin
llGround:
  description: Returns the ground height below the object position + offset
  function-id: 42
  params:
    - description: |-
        offset relative to the prim's position and expressed in local
        coordinates
      name: offset
      type: vector
  related:
    functions:
      - llGroundContour
      - llGroundNormal
      - llGroundSlope
      - llEdgeOfWorld
    slwiki:
      - Viewer_coordinate_frames#Local
  scope: support.function.builtin
  type: float
llWind:
  description: Returns the wind velocity at the object position + offset
  function-id: 44
  params:
    - description: offset relative to the prim's position and expressed in local
          coordinates
      name: offset
      type: vector
  related:
    functions:
      - llCloud
    slwiki:
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Weather
  scope: support.function.builtin
  type: vector
llSetStatus:
  description: |-
    Sets status (STATUS_PHYSICS, STATUS_PHANTOM, STATUS_BLOCK_GRAB,
    STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z) to value
  function-id: 45
  params:
    - description: 'bit_mask of STATUS_* flags'
      name: status
      type: integer.bit_field.bit_mask
    - description: boolean
      name: value
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llGetStatus
    slwiki:
      - Boolean
    slwiki_categories:
      - LSL_Integer/bit_mask
      - LSL_Rez
  scope: support.function.builtin
  version: '0.1.0'
llGetStatus:
  description: |-
    Returns value of status (STATUS_PHYSICS, STATUS_PHANTOM, STATUS_BLOCK_GRAB,
    STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z)
  function-id: 46
  params:
    - description: 'bit_mask of STATUS_* flags'
      name: status
      type: integer.bit_field.bit_mask
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_ROTATE_X
      - STATUS_ROTATE_Y
      - STATUS_ROTATE_Z
      - STATUS_PHANTOM
      - STATUS_SANDBOX
      - STATUS_BLOCK_GRAB
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - STATUS_BLOCK_GRAB_OBJECT
    functions:
      - llSetStatus
    slwiki:
      - Integer
      - LSL_Glossary#phantom
      - LSL_Glossary#physical
    slwiki_categories:
      - LSL_Integer/bit_mask
      - LSL_Integer/boolean
      - LSL_Rez
      - LSL_Functions/Returns_a_integer/boolean
  scope: support.function.builtin
  type: integer.boolean
llSetScale:
  description: Sets the scale of the prim
  function-id: 47
  params:
    - description: |-
        The components of scale (x, y, z) each need to be in the range
        [0.01, 64.0]. If they are out of the range they are rounded to the
        nearest endpoint.
      name: scale
      type: vector
  related:
    constants:
      - PRIM_SIZE
      - STATUS_PHYSICS
    functions:
      - llGetScale
      - llScaleByFactor
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
    slwiki:
      - Linkability_Rules
  scope: support.function.builtin
  version: '0.1.0'
llGetScale:
  description: Returns the scale of the prim
  function-id: 48
  related:
    constants:
      - PRIM_SIZE
    functions:
      - llSetScale
      - llScaleByFactor
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
    slwiki_categories:
      - LSL_Prim
  scope: support.function.builtin
  type: vector
llSetColor:
  description: Sets the color on face of the prim
  function-id: 49
  params:
    - description: RGB color vector <r, g, b>; ZERO_VECTOR is black
      name: color
      type: vector
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - CHANGED_COLOR
      - PRIM_COLOR
      - PRIM_TEXTURE
    events:
      - changed
    functions:
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Color_and_Scripting
      - LlSetColor/Newbie_Notes
    slwiki_categories:
      - LSL_Color
      - LSL_Face
      - LSL_Face/Set
  scope: support.function.builtin
llGetAlpha:
  description: Returns the alpha of face
  function-id: 50
  params:
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - CHANGED_COLOR
      - PRIM_COLOR
      - PRIM_TEXTURE
    events:
      - changed
    functions:
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Alpha
      - LSL_Face
      - LSL_Face/Get
  scope: support.function.builtin
  type: float
llSetAlpha:
  description: Sets the alpha on face
  function-id: 51
  params:
    - description: from 0.0 (transparent) to 1.0 (opaque)
      name: alpha
      type: float
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - CHANGED_COLOR
      - PRIM_COLOR
      - PRIM_TEXTURE
    events:
      - changed
    functions:
      - llGetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Alpha
      - LSL_Face
      - LSL_Face/Set
  scope: support.function.builtin
llGetColor:
  description: Returns the color on face
  function-id: 52
  params:
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - CHANGED_COLOR
      - PRIM_COLOR
      - PRIM_TEXTURE
    events:
      - changed
    functions:
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Color_and_Scripting
      - LlSetColor/Newbie_Notes
    slwiki_categories:
      - LSL_Color
      - LSL_Face
      - LSL_Face/Get
  scope: support.function.builtin
  type: vector
llSetTexture:
  delay: 0.2
  description: Sets the texture of face or ALL_SIDES
  function-id: 53
  params:
    - description: name of a texture in the prim's inventory or a UUID
      name: texture
      type: string
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - PRIM_TEXTURE
    functions:
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Color_and_Scripting
    slwiki_categories:
      - LSL_Color
      - LSL_Face
      - LSL_Face/Set
      - LSL_Texture
  scope: support.function.builtin
llScaleTexture:
  delay: 0.2
  description: Sets the texture u & v scales for the chosen face or ALL_SIDES
  function-id: 54
  params:
    - description: horizontal (x) scale in the interval [-100.0, 100.0]
      name: u
      type: float
    - description: vertical (y) scale in the interval [-100.0, 100.0]
      name: v
      type: float
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - PRIM_TEXTURE
    functions:
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Set
      - LSL_Texture
  scope: support.function.builtin
llOffsetTexture:
  delay: 0.2
  description: Sets the texture u & v offsets for the chosen face or ALL_SIDES
  function-id: 55
  params:
    - description: horizontal (x) offset in the interval [-1.0, 1.0]
      name: u
      type: float
    - description: vertical (y) offset in the interval [-1.0, 1.0]
      name: v
      type: float
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - PRIM_TEXTURE
    functions:
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Set
      - LSL_Texture
  scope: support.function.builtin
llRotateTexture:
  delay: 0.2
  description: Sets the texture rotation for the chosen face
  function-id: 56
  params:
    - description: angle expressed in radians
      name: angle
      type: float
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - PRIM_TEXTURE
    functions:
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureRot
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Set
      - LSL_Texture
  scope: support.function.builtin
llGetTexture:
  description: |-
    Returns a string that is the texture on face (the inventory name
    if it is a texture in the prim's inventory, otherwise the key)
  function-id: 57
  params:
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
      - PRIM_TEXTURE
    functions:
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Get
      - LSL_Texture
  scope: support.function.builtin
  type: string
llSetPos:
  delay: 0.2
  description: |-
    Moves the object or prim towards pos without using physics (if the
    script isn't physical)
  function-id: 58
  params:
    - description: |-
        position in region or local coordinates depending upon the situation
      name: pos
      type: vector
  related:
    constants:
      - PRIM_POSITION
      - PRIM_ROTATION
      - ZERO_VECTOR
    functions:
      - llMoveToTarget
      - llGetPos
      - llSetRegionPos
      - llGetRot
      - llSetRot
      - llGetRootRotation
      - llGetLocalPos
      - llGetLocalRot
      - llSetLocalRot
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
      - WarpPos
    slwiki_categories:
      - LSL_Movement
      - LSL_Prim
  scope: support.function.builtin
llGetPos:
  description: Returns the position of the task in region coordinates
  function-id: 59
  related:
    constants:
      - PRIM_POSITION
      - PRIM_ROTATION
      - ZERO_VECTOR
    functions:
      - llMoveToTarget
      - llSetPos
      - llSetRegionPos
      - llGetRot
      - llSetRot
      - llGetRootRotation
      - llGetLocalPos
      - llGetLocalRot
      - llSetLocalRot
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
      - WarpPos
    slwiki_categories:
      - LSL_Movement
      - LSL_Prim
  scope: support.function.builtin
  type: vector
llGetLocalPos:
  description: Returns the position relative to the root
  function-id: 60
  related:
    constants:
      - PRIM_POSITION
      - PRIM_ROTATION
      - ZERO_VECTOR
    functions:
      - llMoveToTarget
      - llGetPos
      - llSetPos
      - llSetRegionPos
      - llGetRot
      - llSetRot
      - llGetRootRotation
      - llGetLocalRot
      - llSetLocalRot
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
      - WarpPos
    slwiki_categories:
      - LSL_Movement
      - LSL_Prim
  scope: support.function.builtin
  type: vector
llSetRot:
  delay: 0.2
  description: Sets the rotation
  function-id: 61
  params:
    - description: rotation rot
      name: rot
      type: rotation
  related:
    constants:
      - PRIM_POSITION
      - PRIM_POS_LOCAL
      - PRIM_ROTATION
      - PRIM_ROT_LOCAL
      - ZERO_VECTOR
    functions:
      - llMoveToTarget
      - llGetPos
      - llSetPos
      - llSetRegionPos
      - llGetRot
      - llGetRootRotation
      - llGetLocalPos
      - llGetLocalRot
      - llSetLocalRot
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Pathfinding
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
      - WarpPos
    slwiki_categories:
      - LSL_Movement
      - LSL_Rotation
      - LSL_Prim
  scope: support.function.builtin
  snippets:
    - |-
      // These correctly set a global rotation for the root prim in all scenarios
      llSetLocalRot(rot);
      llSetPrimitiveParams([PRIM_ROT_LOCAL, rot]);
    - |-
      // These correctly set a global rotation for a child prim in all scenarios
      llSetLocalRot(rot / llGetRootRotation());
      llSetPrimitiveParams([PRIM_ROT_LOCAL, rot / llGetRootRotation()]);
llGetRot:
  description: Returns the rotation relative to the region's axes
  function-id: 62
  related:
    constants:
      - PRIM_POSITION
      - PRIM_ROTATION
      - ZERO_VECTOR
    functions:
      - llMoveToTarget
      - llGetPos
      - llSetPos
      - llSetRegionPos
      - llSetRot
      - llGetRootRotation
      - llGetLocalPos
      - llGetLocalRot
      - llSetLocalRot
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
      - WarpPos
    slwiki_categories:
      - LSL_Movement
      - LSL_Prim
  scope: support.function.builtin
  type: rotation
llGetLocalRot:
  description: Returns the rotation local to the root
  function-id: 63
  related:
    constants:
      - PRIM_POSITION
      - PRIM_ROTATION
      - ZERO_VECTOR
    functions:
      - llMoveToTarget
      - llGetPos
      - llSetPos
      - llSetRegionPos
      - llGetRot
      - llSetRot
      - llGetRootRotation
      - llGetLocalPos
      - llSetLocalRot
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
      - WarpPos
    slwiki_categories:
      - LSL_Movement
      - LSL_Prim
  scope: support.function.builtin
  type: rotation
llSetForce:
  description: |-
    Applies force to the object (if the script is physical), in local
    coords if local == TRUE
  function-id: 64
  params:
    - description: directional force
      name: force
      type: vector
    - description: |-
        boolean, if TRUE force is treated as a local directional vector,
        if FALSE force is treated as a region directional vector
      name: local
      type: integer
  related:
    constants:
      - 'FALSE'
      - 'TRUE'
      - ZERO_VECTOR
      - OBJECT_OMEGA
      - OBJECT_VELOCITY
      - PRIM_OMEGA
    functions:
      - llApplyImpulse
      - llApplyRotationalImpulse
      - llGetAccel
      - llGetMass
      - llGetObjectMass
      - llGetMassMKS
      - llGetCenterOfMass
      - llDetectedVel
      - llGetVel
      - llSetVelocity
      - llSetAngularVelocity
      - llGetOmega
      - llGetForce
      - llGetTorque
      - llSetTorque
      - llSetForceAndTorque
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Movement
      - LSL_Physics
  scope: support.function.builtin
llGetForce:
  description: Returns the force (if the script is physical)
  function-id: 65
  related:
    constants:
      - ZERO_VECTOR
      - OBJECT_OMEGA
      - OBJECT_VELOCITY
      - PRIM_OMEGA
    functions:
      - llApplyImpulse
      - llApplyRotationalImpulse
      - llGetAccel
      - llGetMass
      - llGetObjectMass
      - llGetMassMKS
      - llGetCenterOfMass
      - llDetectedVel
      - llGetVel
      - llSetVelocity
      - llSetAngularVelocity
      - llGetOmega
      - llSetForce
      - llGetTorque
      - llSetTorque
      - llSetForceAndTorque
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Movement
      - LSL_Physics
  scope: support.function.builtin
  type: vector
llTarget:
  description: |-
    Sets positions within range of position as a target and returns an
    ID for the target
  function-id: 66
  params:
    - description: position in region coordinates
      name: position
      type: vector
    - description: target range in meters
      name: range
      type: float
  related:
    constants:
      - ZERO_VECTOR
    events:
      - at_target
      - not_at_target
      - at_rot_target
      - not_at_rot_target
    functions:
      - llGetPos
      - llTargetRemove
      - llVecDist
      - llSetPos
      - llMoveToTarget
    slwiki_categories:
      - LSL_Integer/handle
      - LSL_Target
      - LSL_At_Target
      - LSL_Physics
  scope: support.function.builtin
  type: integer.handle
llTargetRemove:
  description: Removes positional target handle registered with llTarget
  function-id: 67
  params:
    - description: handle to control at_target and not_at_target events
      name: handle
      type: integer
  related:
    events:
      - at_target
      - not_at_target
    functions:
      - llTarget
      - llRotTarget
      - llRotTargetRemove
    slwiki_categories:
      - LSL_Target
      - LSL_At_Target
      - LSL_Integer/handle
      - LSL_Physics
      - LSL_Stop
  scope: support.function.builtin
llRotTarget:
  description: |-
    Set rotations with error of rot as a rotational target and returns
    an ID for the rotational target
  function-id: 68
  params:
    - description: target rotation
      name: rot
      type: rotation
    - description: angle in radians, defines when rot has been reached
      name: error
      type: float
  related:
    events:
      - at_target
      - not_at_target
      - at_rot_target
      - not_at_rot_target
    functions:
      - llTarget
      - llTargetRemovellRotTargetRemove
      - llSetRot
      - llLookAt
      - llRotLookAt
    slwiki_categories:
      - LSL_Target
      - LSL_At_Target
      - LSL_Integer/handle
      - LSL_Physics
      - LSL_Stop
  scope: support.function.builtin
  type: integer.handle
llRotTargetRemove:
  description: Removes rotational target handle registered with llRotTarget
  function-id: 69
  params:
    - description: handle to control at_rot_target and not_at_rot_target events
      name: handle
      type: integer
  related:
    events:
      - at_rot_target
      - not_at_rot_target
      - at_target
      - not_at_target
    functions:
      - llRotTarget
      - llTarget
      - llTargetRemove
    slwiki_categories:
      - LSL_Target
      - LSL_At_Target
      - LSL_Integer/handle
      - LSL_Physics
      - LSL_Stop
  scope: support.function.builtin
llMoveToTarget:
  description: |-
    Critically damps to target in tau seconds (if the script is physical)
  function-id: 70
  params:
    - description: position in region coordinates
      name: target
      type: vector
    - description: seconds to critically damp in
      name: tau
      type: float
  related:
    functions:
      - llTarget
      - llStopMoveToTarget
      - llLookAt
      - llRotLookAt
    slwiki_categories:
      - LSL_Damping
      - LSL_Physics
      - LSL_Movement
      - LSL_Target
  scope: support.function.builtin
llStopMoveToTarget:
  description: Stops critically damped motion
  function-id: 71
  related:
    functions:
      - llMoveToTarget
      - llStopLookAt
    slwiki_categories:
      - LSL_Movement
      - LSL_Physics
      - LSL_Target
  scope: support.function.builtin
llApplyImpulse:
  description: |-
    Applies impulse to object (if the script is physical), in local coords
    if local == TRUE
  function-id: 72
  params:
    - description: directional force
      name: force
      type: vector
    - description: |-
        boolean, if TRUE force is treated as a local directional vector,
        if FALSE force is treated as a region directional vector
      name: local
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
    functions:
      - llApplyRotationalImpulse
      - llSetForce
      - llVecMag
      - llSetStatus
      - llGetMass
      - llGetVel
  scope: support.function.builtin
llApplyRotationalImpulse:
  description: |-
    Applies rotational impulse to object (if the script is physical),
    in local coords if local == TRUE
  function-id: 73
  params:
    - description: directional force
      name: force
      type: vector
    - description: |-
        boolean, if TRUE force is treated as a local directional vector,
        if FALSE force is treated as a region directional vector
      name: local
      type: integer
  related:
    functions:
      - llApplyImpulse
      - llSetAngularVelocity
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
llSetTorque:
  description: |-
    Sets the torque of object (if the script is physical), in local coords
    if local == TRUE
  function-id: 74
  params:
    - description: torque force
      name: torque
      type: vector
    - description: |-
        boolean, if TRUE uses the local axis, if FALSE uses the region
        axis
      name: local
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
    functions:
      - llGetTorque
      - llSetForceAndTorque
      - llSetForce
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
llGetTorque:
  description: Returns the torque (if the script is physical)
  function-id: 75
  related:
    constants:
      - STATUS_PHYSICS
    functions:
      - llSetTorque
      - llSetForceAndTorque
      - llGetForce
      - llSetForce
      - llGetOmega
      - llGetVel
      - llGetMass
      - llGetAccel
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
  type: vector
llSetForceAndTorque:
  description: |-
    Sets the force and torque of object (if the script is physical),
    in local coords if local == TRUE
  function-id: 76
  params:
    - description: directional force
      name: force
      type: vector
    - description: torque force
      name: torque
      type: vector
    - description: |-
        boolean, if TRUE force is treated as a local directional vector,
        if FALSE force is treated as a region directional vector
      name: local
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - ZERO_VECTOR
    functions:
      - llSetForce
      - llSetTorque
    slwiki:
      - Viewer_coordinate_frames#Local
      - Viewer_coordinate_frames#Region
      - Boolean
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
llGetVel:
  description: Returns the velocity of the object
  function-id: 77
  related:
    functions:
      - llGetAccel
      - llGetOmega
      - llGetForce
      - llGetTorque
      - llGetMass
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
      - LSL_Vehicle
  scope: support.function.builtin
  snippets:
    - vector local_vel = llGetVel() / llGetRot();
  type: vector
llGetAccel:
  description: |-
    Returns the acceleration of the object relative to the region's axes
  function-id: 78
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llGetOmega
      - llGetVel
      - llGetTorque
      - llGetMass
      - llGetForce
      - llSetForce
      - llSetTorque
      - llSetForceAndTorque
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
      - LSL_Vehicle
  scope: support.function.builtin
  type: vector
llGetOmega:
  description: Returns the rotation velocity in radians per second
  function-id: 79
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llTargetOmega
      - llGetAccel
      - llGetVel
      - llGetForce
      - llGetTorque
      - llGetMass
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
      - LSL_Vehicle
  scope: support.function.builtin
  type: vector
llGetTimeOfDay:
  description: |-
    Returns the time in seconds since [CURRENT_GRID] server midnight
    or since region up-time, whichever is smaller
  function-id: 80
  related:
    functions:
      - llGetSunDirection
    slwiki_categories:
      - LSL_Time
      - LSL_Region
  scope: support.function.builtin
  type: float
llGetWallclock:
  description: |-
    Returns the time in seconds since midnight California Pacific time
    (PST/PDT)
  function-id: 81
  related:
    functions:
      - llGetGMTclock
    slwiki_categories:
      - LSL_Time
  scope: support.function.builtin
  type: float
llGetTime:
  description: |-
    Returns the time in seconds since the last region reset, script reset,
    or call to either llResetTime or llGetAndResetTime
  function-id: 82
  related:
    functions:
      - llResetTime
      - llGetAndResetTime
      - llGetRegionTimeDilation
      - llResetScript
      - llResetOtherScript
  scope: support.function.builtin
  type: float
llResetTime:
  description: Sets the script timer to zero
  function-id: 83
  related:
    functions:
      - llGetTime
      - llGetAndResetTime
      - llGetRegionTimeDilation
      - llResetScript
      - llResetOtherScript
    slwiki_categories:
      - LSL_Time
      - LSL_Script
  scope: support.function.builtin
llGetAndResetTime:
  description: |-
    Returns the script time in seconds and then resets the script timer
    to zero
  function-id: 84
  related:
    functions:
      - llGetTime
      - llResetTime
      - llGetRegionTimeDilation
      - llResetScript
      - llResetOtherScript
    slwiki_categories:
      - LSL_Time
      - LSL_Script
  scope: support.function.builtin
  type: float
llPlaySound:
  description: Plays attached sound once at volume (0.0 - 1.0)
  function-id: 86
  params:
    - description: |-
        a sound in the inventory of the prim this script is in or a UUID
        of a sound
      name: sound
      type: string
    - description: volume in the range [0.0, 1.0] from silent to loud
      name: volume
      type: float
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llTriggerSound
      - llTriggerSoundLimited
      - llLoopSound
      - llLoopSoundMaster
      - llLoopSoundSlave
      - llPlaySoundSlave
      - llSetSoundQueueing
      - llStopSound
    slwiki:
      - UUID
      - HUD
    slwiki_categories:
      - LSL_Sound
      - LSL_Permission/Asset
      - LSL_Inventory
  scope: support.function.builtin
  version: '0.1.0'
llLoopSound:
  description: |-
    Plays attached sound looping indefinitely at volume (0.0 - 1.0)
  function-id: 87
  params:
    - description: |-
        a sound in the inventory of the prim this script is in or a UUID
        of a sound
      name: sound
      type: string
    - description: volume in the range [0.0, 1.0] from silent to loud
      name: volume
      type: float
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llTriggerSound
      - llTriggerSoundLimited
      - llPlaySound
      - llLoopSoundMaster
      - llLoopSoundSlave
      - llPlaySoundSlave
      - llSetSoundQueueing
      - llStopSound
    slwiki:
      - UUID
      - HUD
    slwiki_categories:
      - LSL_Sound
      - LSL_Permission/Asset
      - LSL_Inventory
  scope: support.function.builtin
  version: '0.2.0'
llLoopSoundMaster:
  description: |-
    Plays attached sound looping at volume (0.0 - 1.0), declares it a
    sync master
  function-id: 88
  params:
    - description: |-
        a sound in the inventory of the prim this script is in or a UUID
        of a sound
      name: sound
      type: string
    - description: volume in the range [0.0, 1.0] from silent to loud
      name: volume
      type: float
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llTriggerSound
      - llTriggerSoundLimited
      - llPlaySound
      - llLoopSound
      - llLoopSoundSlave
      - llPlaySoundSlave
      - llSetSoundQueueing
      - llStopSound
    slwiki:
      - UUID
      - HUD
    slwiki_categories:
      - LSL_Sound
      - LSL_Permission/Asset
      - LSL_Inventory
  scope: support.function.builtin
llLoopSoundSlave:
  description: |-
    Plays attached sound looping at volume (0.0 - 1.0), synced to most
    audible sync master
  function-id: 89
  params:
    - description: |-
        a sound in the inventory of the prim this script is in or a UUID
        of a sound
      name: sound
      type: string
    - description: volume in the range [0.0, 1.0] from silent to loud
      name: volume
      type: float
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llTriggerSound
      - llTriggerSoundLimited
      - llPlaySound
      - llLoopSound
      - llLoopSoundMaster
      - llPlaySoundSlave
      - llSetSoundQueueing
      - llStopSound
    slwiki:
      - UUID
      - HUD
    slwiki_categories:
      - LSL_Sound
      - LSL_Permission/Asset
      - LSL_Inventory
  scope: support.function.builtin
llPlaySoundSlave:
  description: |-
    Plays attached sound once at volume (0.0 - 1.0), synced to next loop
    of most audible sync master
  function-id: 90
  params:
    - description: |-
        a sound in the inventory of the prim this script is in or a UUID
        of a sound
      name: sound
      type: string
    - description: volume in the range [0.0, 1.0] from silent to loud
      name: volume
      type: float
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llTriggerSound
      - llTriggerSoundLimited
      - llPlaySound
      - llLoopSound
      - llLoopSoundMaster
      - llLoopSoundSlave
      - llSetSoundQueueing
      - llStopSound
    slwiki:
      - UUID
      - HUD
    slwiki_categories:
      - LSL_Sound
      - LSL_Permission/Asset
      - LSL_Inventory
  scope: support.function.builtin
llTriggerSound:
  description: |-
    Plays sound at volume (0.0 - 1.0), centered at but not attached to
    object
  function-id: 91
  params:
    - description: |-
        a sound in the inventory of the prim this script is in or a UUID
        of a sound
      name: sound
      type: string
    - description: volume in the range [0.0, 1.0] from silent to loud
      name: volume
      type: float
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llTriggerSoundLimited
      - llPlaySound
      - llPlaySoundSlave
      - llLoopSound
      - llLoopSoundMaster
      - llLoopSoundSlave
      - llSetSoundQueueing
      - llStopSound
    slwiki:
      - UUID
      - HUD
    slwiki_categories:
      - LSL_Sound
      - LSL_Permission/Asset
      - LSL_Inventory
  scope: support.function.builtin
llStopSound:
  description: Stops currently attached sound
  function-id: 92
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llTriggerSound
      - llTriggerSoundLimited
      - llPlaySound
      - llPlaySoundSlave
      - llLoopSound
      - llLoopSoundMaster
      - llLoopSoundSlave
      - llSetSoundQueueing
    slwiki:
      - UUID
      - HUD
    slwiki_categories:
      - LSL_Sound
      - LSL_Permission/Asset
      - LSL_Inventory
  scope: support.function.builtin
llPreloadSound:
  delay: 1.0
  description: Preloads a sound on viewers within range
  function-id: 93
  params:
    - description: |-
        a sound in the inventory of the prim this script is in or a UUID
        of a sound
      name: sound
      type: string
  scope: support.function.builtin
  version: '0.1.0'
llGetSubString:
  description: Returns the indicated substring
  function-id: 94
  params:
    - description: the (full) original string
      name: src
      type: string
    - description: start index - supports negative index
      name: start
      type: integer
    - description: end index - supports negative index
      name: end
      type: integer
  related:
    functions:
      - llStringLength
      - llDeleteSubString
      - llInsertString
      - llSubStringIndex
    slwiki:
      - Library_Combined_Library#str_replace
    slwiki_categories:
      - LSL_String
      - LSL_Negative_Index
      - LSL_Negative_Index#Range_Functions
  scope: support.function.builtin
  type: string
llDeleteSubString:
  description: Removes the indicated substring and returns the result
  function-id: 95
  params:
    - description: the (full) original string
      name: src
      type: string
    - description: start index - supports negative index
      name: start
      type: integer
    - description: end index - supports negative index
      name: end
      type: integer
  related:
    functions:
      - llStringLength
      - llGetSubString
      - llInsertString
      - llSubStringIndex
    slwiki:
      - Library_Combined_Library#str_replace
    slwiki_categories:
      - LSL_String
      - LSL_Negative_Index
      - LSL_Negative_Index#Range_Functions
  scope: support.function.builtin
  type: string
llInsertString:
  description: |-
    Returns a destination string dst with the string src inserted starting
    at position pos
  function-id: 96
  params:
    - description: destination of insertion
      name: dst
      type: string
    - description: |-
        zero-based position index for insert, does NOT support negative
        indexes
      name: position
      type: integer
    - description: source string to be inserted
      name: src
      type: string
  related:
    functions:
      - llStringLength
      - llGetSubString
      - llDeleteSubString
      - llSubStringIndex
    slwiki:
      - Library_Combined_Library#str_replace
      - SplitLine
    slwiki_categories:
      - LSL_String
      - LSL_Negative_Index
      - LSL_Negative_Index#Range_Functions
  scope: support.function.builtin
  type: string
llToUpper:
  description: Returns a string that is src with all upper-case characters
  function-id: 97
  params:
    - description: the (full) original string
      name: src
      type: string
  related:
    functions:
      - llToLower
    slwiki_categories:
      - LSL_String
    wikipedia:
        en:
          - Sentence_case
  scope: support.function.builtin
  type: string
llToLower:
  description: Returns a string that is src with all lower-case characters
  function-id: 98
  params:
    - description: the (full) original string
      name: src
      type: string
  related:
    functions:
      - llToUpper
    slwiki_categories:
      - LSL_String
    wikipedia:
        en:
          - Sentence_case
  scope: support.function.builtin
  type: string
llGiveMoney:
  description: Transfers amount of L$ from script owner to destination
  function-id: 99
  params:
    - description: agent UUID
      name: destination
      type: key
    - description: number of L$, must be greater than zero
      name: amount
      type: integer
  related:
    constants:
      - PERMISSION_DEBIT
      - DEBUG_CHANNEL
    events:
      - money
      - run_time_permissions
      - transaction_result
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llSetPayPrice
      - llGetOwner
      - llTransferLindenDollars
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Requires_Permissions
      - LSL_Permissions/Script
      - LSL_Avatar
      - LSL_Money
  required_permissions:
    - PERMISSION_DEBIT
  scope: support.function.builtin
  type: integer
llRezObject:
  delay: 0.1
  description: |-
    Instantiates owner's inventory object at pos with velocity vel and
    rotation rot with start parameter param
  energy: 200
  function-id: 104
  params:
    - description: an object in the inventory of the prim this script is in
      name: inventory
      type: string
    - description: position in region coordinates
      name: pos
      type: vector
    - description: velocity (max magnitude is approximately 200 m/s)
      name: vel
      type: vector
    - description: rotation
      name: rot
      type: rotation
    - description: |-
        on_rez event parameter and value return by llGetStartParameter
        in the rezzed object (or by each of the items in a coalesced object)
      name: param
      type: integer
  related:
    constants:
      - ZERO_VECTOR
      - DEBUG_CHANNEL
      - PRIM_TEMP_ON_REZ
    events:
      - object_rez
      - on_rez
      - attach
    functions:
      - llGetStartParameter
      - llGetGeometricCenter
      - llVecMag
      - llRezAtRoot
      - llGetPos
      - llGetRot
      - llGodLikeRezObject
    slwiki:
      - Viewer_coordinate_frames#Region
      - Attachment
      - How_to_use_the_building_grid_-_Video_Tutorial
    slwiki_categories:
      - LSL_Rez
      - LSL_Object
      - LSL_Inventory
  scope: support.function.builtin
  version: '0.1.0'
llLookAt:
  description: |-
    Causes object to point its up axis (positive z) towards target, while
    keeping its forward axis (positive x) below the horizon. Continues to track
    target until llStopLookAt is called.
  function-id: 105
  params:
    - description: position in region coordinates
      name: target
      type: vector
    - description: float strength
      name: strength
      type: float
    - description: seconds to critically damp in
      name: damping
      type: float
  related:
    functions:
      - llRotLookAt
      - llStopLookAt
      - llMoveToTarget
    slwiki_categories:
      - LSL_Strength
      - LSL_Damping
      - LSL_Physics
      - LSL_Target
      - LSL_Rotation
  scope: support.function.builtin
  version: '0.1.0'
llStopLookAt:
  description: Stops causing object to point at a target
  function-id: 106
  related:
    functions:
      - llLookAt
      - llRotLookAt
    slwiki_categories:
      - LSL_Target
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
llSetTimerEvent:
  description: |-
    Causes the timer event to be triggered a maximum of once every sec
    seconds
  function-id: 107
  params:
    - description: Any positive non-zero value to enable, zero to disable
      name: sec
      type: float
  related:
    events:
      - timer
    functions:
      - llGetRegionTimeDilation
      - llFrand
      - llGetTime
      - llSensorRepeat
      - llSleep
      - llMinEventDelay
    slwiki:
      - LSL_Delay#Events
    slwiki_categories:
      - LSL_Script
      - LSL_Time
  scope: support.function.builtin
llSleep:
  delay: variable
  description: Puts the script to sleep for sec seconds
  function-id: 108
  params:
    - description: time in seconds
      name: sec
      type: float
  related:
    events:
      - timer
    functions:
      - llSetTimerEvent
      - llMinEventDelay
    slwiki_categories:
      - LSL_Script
  scope: support.function.builtin
llGetMass:
  description: |-
    Returns the mass of object (in Lindograms) that the script is attached to
  function-id: 109
  related:
    functions:
      - llGetObjectMass
      - llGetForce
      - llGetOmega
      - llGetVel
      - llGetTorque
      - llGetAccel
      - llGetMassMKS
    slwiki_categories:
      - LSL_Physics
      - LSL_Object
  scope: support.function.builtin
  type: float
  version: '0.1.0'
llCollisionFilter:
  description: |-
    Sets the collision filter, exclusively or inclusively. If accept
    == TRUE, only accept collisions with objects name and id (either is optional),
    otherwise with objects not name or id.
  function-id: 110
  params:
    - description: filter for specific object name or avatar legacy name
      name: name
      type: string
    - description: filter by group, avatar or object UUID
      name: id
      type: key
    - description: |-
        if TRUE only process collisions that match, if FALSE instead
        exclude matches
      name: accept
      type: integer
  related:
    constants:
      - NULL_KEY
      - 'TRUE'
      - 'FALSE'
    events:
      - collision_start
      - collision
      - collision_end
    functions:
      - llPassCollisions
      - llVolumeDetect
    slwiki:
      - Object
      - UUID
    slwiki_categories:
      - LSL_Collision
      - LSL_Avatar/Name
      - LSL_Group
      - LSL_Avatar
      - LSL_Integer/boolean
  scope: support.function.builtin
  snippets:
    - llCollisionFilter("", NULL_KEY, TRUE); // stop filtering collisions
    - llCollisionFilter("", NULL_KEY, FALSE); // filter all collisions
llTakeControls:
  description: |-
    Allows for intercepting keyboard and mouse clicks from the agent
    the script has permissions for
  function-id: 111
  params:
    - description: bitfield of CONTROL_* flags
      name: controls
      type: integer
    - description: boolean, determines whether control events are generated
      name: accept
      type: integer
    - description: |-
        boolean, determines whether controls perform their normal functions
      name: pass_on
      type: integer
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - DEBUG_CHANNEL
      - 'TRUE'
      - 'FALSE'
      - CONTROL_FWD
      - CONTROL_BACK
      - CONTROL_LEFT
      - CONTROL_RIGHT
      - CONTROL_ROT_LEFT
      - CONTROL_ROT_RIGHT
      - CONTROL_UP
      - CONTROL_DOWN
      - CONTROL_LBUTTON
      - CONTROL_ML_LBUTTON
    events:
      - run_time_permissions
      - control
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llReleaseControls
      - llGetOwner
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Controls
  required_permissions:
    - PERMISSION_TAKE_CONTROLS
  scope: support.function.builtin
llReleaseControls:
  description: Stops taking inputs that were taken with llTakeControls
  function-id: 112
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
    functions:
      - llTakeControls
    slwiki_categories:
      - LSL_Controls
  scope: support.function.builtin
llAttachToAvatar:
  description: |-
    Attaches the object to the avatar who has granted permission to the script
  function-id: 113
  params:
    - description: ATTACH_* constant or valid value
      name: attach_point
      type: integer
  related:
    constants:
      - PERMISSION_ATTACH
      - DEBUG_CHANNEL
      - ATTACH_AVATAR_CENTER
      - ATTACH_BACK
      - ATTACH_BELLY
      - ATTACH_CHEST
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REAR
      - ATTACH_FACE_REYE
      - ATTACH_FACE_TONGUE
      - ATTACH_GROIN
      - ATTACH_HEAD
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM_RIGHT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_LEAR
      - ATTACH_LEFT_PEC
      - ATTACH_LEYE
      - ATTACH_LFOOT
      - ATTACH_LHAND
      - ATTACH_LHAND_RING1
      - ATTACH_LHIP
      - ATTACH_LLARM
      - ATTACH_LLLEG
      - ATTACH_LSHOULDER
      - ATTACH_LUARM
      - ATTACH_LULEG
      - ATTACH_LWING
      - ATTACH_MOUTH
      - ATTACH_NECK
      - ATTACH_NOSE
      - ATTACH_PELVIS
      - ATTACH_REAR
      - ATTACH_REYE
      - ATTACH_RFOOT
      - ATTACH_RHAND
      - ATTACH_RHAND_RING1
      - ATTACH_RHIP
      - ATTACH_RIGHT_PEC
      - ATTACH_RLARM
      - ATTACH_RLLEG
      - ATTACH_RSHOULDER
      - ATTACH_RUARM
      - ATTACH_RULEG
      - ATTACH_RWING
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
    events:
      - run_time_permissions
      - attach
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llGetAttached
      - llGetOwner
    slwiki:
      - Project_Bento_Skeleton_Guide
      - Mouselook
    slwiki_categories:
      - LSL_Integer/attach_point
      - LSL_Permissions/Script
      - LSL_Attachment
      - LSL_Avatar
  required_permissions:
    - PERMISSION_ATTACH
  scope: support.function.builtin
llDetachFromAvatar:
  description: Detaches object from avatar
  function-id: 114
  related:
    constants:
      - PERMISSION_ATTACH
      - DEBUG_CHANNEL
    events:
      - run_time_permissions
      - attach
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llAttachToAvatarTemp
      - llAttachToAvatar
      - llGetAttached
      - llGetOwner
    slwiki:
      - Project_Bento_Skeleton_Guide
      - Mouselook
    slwiki_categories:
      - LSL_Integer/attach_point
      - LSL_Permissions/Script
      - LSL_Attachment
      - LSL_Avatar
      - LSL_Stop
      - LSL_Cleanup
  required_permissions:
    - PERMISSION_ATTACH
  scope: support.function.builtin
llGetOwner:
  description: Returns the object owner's UUID
  function-id: 117
  related:
    constants:
      - CHANGED_OWNER
    events:
      - changed
      - on_rez
    functions:
      - llListen
      - llRequestPermissions
      - llKey2Name
      - llGetUsername
      - llGetDisplayName
      - llRequestAgentData
      - llRequestUsername
      - llRequestDisplayName
      - llGetCreator
      - llGetOwnerKey
      - llDetectedOwner
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Owner
      - LSL_Object
      - LSL_Key
  scope: support.function.builtin
  type: key
llInstantMessage:
  delay: 2.0
  description: Sends the specified string as an Instant Message to the user
  function-id: 118
  params:
    - description: avatar UUID
      name: user
      type: key
    - description: message to be transmitted
      name: message
      type: string
  related:
    functions:
      - llRegionSayTo
      - llOwnerSay
      - llRegionSay
      - llWhisper
      - llSay
      - llShout
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Communications
      - LSL_Instant_Message
  scope: support.function.builtin
llEmail:
  delay: 20.0
  description: Sends an email to address with the subject and message
  function-id: 119
  params:
    - description: email address
      name: address
      type: string
    - description: email subject
      name: subject
      type: string
    - description: email body to append to the standard header
      name: message
      type: string
  related:
    events:
      - email
      - link_message
    functions:
      - llGetKey
      - llGetNextEmail
      - llMessageLinked
    slwiki:
      - IM_to_email
    slwiki_categories:
      - LSL_Communications
      - LSL_Email
  scope: support.function.builtin
  version: '1.3.0'
llGetNextEmail:
  description: |-
    Gets the next waiting email that comes from address, with specified subject
  function-id: 120
  params:
    - description: mail sender address filter
      name: address
      type: string
    - description: mail subject filter
      name: subject
      type: string
  related:
    events:
      - email
    functions:
      - llEmail
    wikipedia:
        en:
          - FIFO_(computing_and_electronics)
  scope: support.function.builtin
  version: '1.3.0'
llGetKey:
  description: Returns the key of the prim the script is attached to
  function-id: 121
  related:
    functions:
      - llGetLinkKey
      - llGetLinkNumber
    slwiki_categories:
      - LSL_Prim
      - LSL_Key
  scope: support.function.builtin
  snippets:
    - llGetKey() == llGetLinkKey(llGetLinkNumber())
  type: key
llSetBuoyancy:
  description: |-
    Sets the buoyancy of the task or object (0 is disabled, < 1.0 sinks,
    1.0 floats, > 1.0 rises)
  function-id: 122
  params:
    - description: buoyancy of the task or object
      name: buoyancy
      type: float
  related:
    constants:
      - STATUS_PHYSICS
      - GRAVITY_MULTIPLIER
    functions:
      - llSetStatus
      - llSetPhysicsMaterial
    slwiki:
      - Energy
      - Wind
    slwiki_categories:
      - LSL_Hover
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
  snippets:
    - llSetPhysicsMaterial(GRAVITY_MULTIPLIER, 0.0, 0.0, 0.0, 0.0); // use to replace
      llSetBuoyancy(1.0) which uses energy
llSetHoverHeight:
  description: Critically damps to a height above the ground (or water) in tau seconds
  function-id: 123
  params:
    - description: |-
        distance to hover above the ground (if negative, hovers below
        ground)
      name: height
      type: float
    - description: |-
        boolean, if TRUE then hover above water too (or below if height
        is negative), or if FALSE ignore water like it isn't there
      name: water
      type: integer
    - description: seconds to critically damp in
      name: tau
      type: float
  related:
    constants:
      - STATUS_PHYSICS
      - 'TRUE'
      - 'FALSE'
    functions:
      - llStopHover
      - llSetStatus
      - llVolumeDetect
      - llGroundRepel
    slwiki:
      - Boolean
    slwiki_categories:
      - LSL_Integer/boolean
      - LSL_Damping
      - LSL_Hover
      - LSL_Movement
      - LSL_Physics
  scope: support.function.builtin
llStopHover:
  description: Stops hovering to a height
  function-id: 124
  related:
    constants:
      - STATUS_PHYSICS
      - 'TRUE'
      - 'FALSE'
    functions:
      - llSetHoverHeight
      - llSetStatus
      - llVolumeDetect
      - llGroundRepel
    slwiki_categories:
      - LSL_Stop
      - LSL_Hover
      - LSL_Physics
  scope: support.function.builtin
llMinEventDelay:
  description: Sets the minimum time between events being handled
  function-id: 125
  params:
    - description: minimum delay in seconds
      name: delay
      type: float
  related:
    functions:
      - llSleep
      - llSetTimerEvent
    slwiki:
      - LSL_Delay
    slwiki_categories:
      - LSL_Script
  scope: support.function.builtin
llRotLookAt:
  description: Causes object to point its forward axis towards target_direction
  function-id: 127
  params:
    - description: rotation target_direction
      name: target_direction
      type: rotation
    - description: float strength
      name: strength
      type: float
    - description: seconds to critically damp in
      name: damping
      type: float
  related:
    functions:
      - llLookAt
      - llStopLookAt
      - llSetPhysicsMaterial
      - llSetKeyframedMotion
    slwiki_categories:
      - LSL_Damping
      - LSL_Strength
      - LSL_Physics
      - LSL_Target
      - LSL_Rotation
  scope: support.function.builtin
  version: '0.1.0'
llStringLength:
  description: Returns the length of string
  function-id: 128
  params:
    - description: string to be measured for length
      name: str
      type: string
  related:
    functions:
      - llGetListLength
    slwiki_categories:
      - LSL_String
  scope: support.function.builtin
  type: integer
llStartAnimation:
  description: |-
    Starts animation anim for agent that granted PERMISSION_TRIGGER_ANIMATION
    if the permission has not been revoked
  function-id: 129
  params:
    - description: |-
        an item in the inventory of the prim this script is in or built-in
        animation
      name: anim
      type: string
  related:
    constants:
      - PERMISSION_TRIGGER_ANIMATION
      - DEBUG_CHANNEL
      - PERMISSION_OVERRIDE_ANIMATIONS
    events:
      - run_time_permissions
    functions:
      - llRequestPermissions
      - llStopAnimation
      - llGetPermissions
      - llGetPermissionsKey
    slwiki:
      - Internal_Animations
    slwiki_categories:
      - LSL_Inventory
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Animation
  required_permissions:
    - PERMISSION_TRIGGER_ANIMATION
  scope: support.function.builtin
llStopAnimation:
  description: Stops animation anim for agent that granted permission
  function-id: 130
  params:
    - description: |-
        an animation in the inventory of the prim this script is in or
        a UUID of an animation or built-in animation name
      name: anim
      type: string
  related:
    constants:
      - PERMISSION_TRIGGER_ANIMATION
      - DEBUG_CHANNEL
      - PERMISSION_OVERRIDE_ANIMATIONS
    events:
      - run_time_permissions
    functions:
      - llRequestPermissions
      - llGetAnimationList
      - llGetAnimationOverride
      - llStartAnimation
      - llGetPermissions
      - llGetPermissionsKey
      - llGetAnimationList
    slwiki:
      - UUID
      - Internal_Animations
    slwiki_categories:
      - LSL_Inventory
      - LSL_Permissions/Asset
      - LSL_Permissions/Script
      - LSL_Animation
      - LSL_Stop
  required_permissions:
    - PERMISSION_TRIGGER_ANIMATION
  scope: support.function.builtin
  snippets:
    - llStopAnimation(llGetAnimationOverride("Standing"))
llTargetOmega:
  description: Rotates the object around axis at spinrate with strength gain
  function-id: 133
  params:
    - description: arbitrary axis to rotate the object around
      name: axis
      type: vector
    - description: rate of rotation in radians per second
      name: spinrate
      type: float
    - description: |-
        also modulates the final spinrate and disables the rotation behavior
        if zero
      name: gain
      type: float
  related:
    constants:
      - PRIM_OMEGA
      - ZERO_VECTOR
    functions:
      - llGetOmega
      - llGetCenterOfMass
      - llVecNorm
      - llRot2Fwd
      - llRot2Left
      - llRot2Up
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Global
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Physics
      - LSL_Effects
      - LSL_Rotation
      - LSL_Prim
      - LSL_Stop
  scope: support.function.builtin
  version: '0.2.0'
llGetStartParameter:
  description: Returns an integer that is the script start/rez parameter
  function-id: 134
  related:
    events:
      - on_rez
      - object_rez
    functions:
      - llRemoteLoadScriptPin
      - llRezObject
      - llRezAtRoot
      - llResetScript
      - llResetOtherScript
    slwiki_categories:
      - LSL_Script
  scope: support.function.builtin
  type: integer
llRequestPermissions:
  description: |-
    Asks the agent for permission to run certain classes of functions
  function-id: 136
  params:
    - description: avatar UUID that is in the same region
      name: agent
      type: key
    - description: |-
        Permission mask (integer bitfield containing the permissions
        to request)
      name: perm
      type: integer
  related:
    constants:
      - PERMISSION_DEBIT
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_CHANGE_LINKS
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
      - PERMISSION_OVERRIDE_ANIMATIONS
      - PERMISSION_RETURN_OBJECTS
    events:
      - run_time_permissions
    functions:
      - llAttachToAvatar
      - llAttachToAvatarTemp
      - llDetachFromAvatar
      - llStartAnimation
      - llTeleportAgent
      - llManageEstateAccess
      - llReturnObjectsByOwner
      - llReturnObjectsByID
      - llResetScript
      - llResetOtherScript
      - llGetPermissions
      - llGetPermissionsKey
    slwiki_categories:
      - LSL_Money
      - LSL_Controls
      - LSL_Animation
      - LSL_Attachment
      - LSL_Link
      - LSL_Camera
      - LSL_Teleport
      - LSL_Estate
      - LSL_Cleanup
      - LSL_Permissions/Script
      - LSL_Dialog
  scope: support.function.builtin
llGetPermissionsKey:
  description: |-
    Returns the key of the avatar that last granted permissions to the script
  function-id: 137
  related:
    constants:
      - NULL_KEY
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llRequestPermissions
    slwiki_categories:
      - LSL_Permissions/Script
  scope: support.function.builtin
  type: key
llGetPermissions:
  description: |-
    Returns an integer bitfield with the permissions that have been granted
  function-id: 138
  related:
    constants:
      - PERMISSION_DEBIT
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_CHANGE_LINKS
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
      - PERMISSION_OVERRIDE_ANIMATIONS
      - PERMISSION_RETURN_OBJECTS
    events:
      - run_time_permissions
    functions:
      - llGetPermissionsKey
      - llRequestPermissions
    slwiki_categories:
      - LSL_Money
      - LSL_Controls
      - LSL_Animation
      - LSL_Attachment
      - LSL_Link
      - LSL_Camera
      - LSL_Teleport
      - LSL_Estate
      - LSL_Cleanup
      - LSL_Permissions/Script
  scope: support.function.builtin
  type: integer
llGetLinkNumber:
  description: |-
    Returns the link number of the prim containing the script (0 means
    not linked, 1 the prim is the root, 2 the prim is the first child, etc)
  function-id: 139
  related:
    functions:
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
    slwiki_categories:
      - LSL_Link
  scope: support.function.builtin
  type: integer
llSetLinkColor:
  description: |-
    Sets face to color if a task exists in the link chain at linknumber
  function-id: 140
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims and seated
        avatars) or a LINK_* flag
      name: linknumber
      type: integer.link
    - description: color in decimal RGB
      name: color
      type: vector
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - LINK_ROOT
      - LINK_SET
      - LINK_ALL_OTHERS
      - LINK_ALL_CHILDREN
      - LINK_THIS
      - ALL_SIDES
      - CHANGED_COLOR
      - CHANGED_TEXTURE
    events:
      - changed
    functions:
      - llUnSit
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llGetLinkNumber
      - llGetLinkNumberOfSides
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llGetTextureOffset
      - llOffsetTexture
      - llGetTextureRot
      - llRotateTexture
      - llGetTextureScale
      - llScaleTexture
      - llSetTextureAnim
      - llSetLinkTextureAnim
    slwiki:
      - Prim
      - Object
      - Link
      - Link#Root_Prim
      - Link#Child_Prim
      - Flag
    slwiki_categories:
      - LSL_Color
      - LSL_Face
  scope: support.function.builtin
llCreateLink:
  delay: 1.0
  description: |-
    Attempts to link the script's object with the target. If parent ==
    TRUE, then the script's object becomes the root.
  function-id: 141
  params:
    - description: prim UUID that is in the same region
      name: target
      type: key
    - description: |-
        if FALSE target becomes the root, if TRUE object/prim the script
        is in becomes root
      name: parent
      type: integer
  related:
    constants:
      - PERMISSION_CHANGE_LINKS
      - DEBUG_CHANNEL
      - 'TRUE'
      - 'FALSE'
      - CHANGED_LINK
    events:
      - run_time_permissions
      - changed
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llBreakLink
      - llBreakAllLinks
    slwiki:
      - UUID
      - Region
      - Linkability_Rules
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Link
      - LSL_Link/Management
  required_permissions:
    - PERMISSION_CHANGE_LINKS
  scope: support.function.builtin
llBreakLink:
  description: |-
    Delinks the prim with the given link number in a linked object set.
  function-id: 142
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims and seated
        avatars)
      name: linknum
      type: integer.link
  related:
    constants:
      - PERMISSION_CHANGE_LINKS
      - DEBUG_CHANNEL
      - LINK_ROOT
      - CHANGED_LINK
    events:
      - run_time_permissions
      - changed
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llGetLinkNumber
      - llBreakAllLinks
      - llCreateLink
      - llUnSit
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
    slwiki:
      - Object
      - Prim
      - Link
      - Link#Root_Prim
      - Link#Child_Prim
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Link
      - LSL_Link/Management
      - LSL_Requires_Permissions
  required_permissions:
    - PERMISSION_CHANGE_LINKS
  scope: support.function.builtin
llBreakAllLinks:
  description: |-
    Delinks all prims in the link set (requires that PERMISSION_CHANGE_LINKS
    be granted)
  function-id: 143
  related:
    constants:
      - PERMISSION_CHANGE_LINKS
      - DEBUG_CHANNEL
      - CHANGED_LINK
    events:
      - run_time_permissions
      - changed
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llBreakLink
      - llCreateLink
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Link
      - LSL_Link/Management
  required_permissions:
    - PERMISSION_CHANGE_LINKS
  scope: support.function.builtin
llGetLinkKey:
  description: Returns the key of the linked prim linknumber
  function-id: 144
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims and seated
        avatars) or a LINK_* flag
      name: linknumber
      type: integer.link
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
    functions:
      - llGetKey
      - llGetLinkNumber
      - llGetLinkName
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llUnSit
    slwiki:
      - Object
      - Prim
      - Link#Root_Prim
      - Link#Child_Prim
    slwiki_categories:
      - LSL_Link
      - LSL_Key
      - LSL_Link/Get
  scope: support.function.builtin
  type: key
llGetLinkName:
  description: Returns the name of linknumber in a link set
  function-id: 145
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims and seated
        avatars) or a LINK_* flag
      name: linknumber
      type: integer.link
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
      - PRIM_NAME
    functions:
      - llGetLinkNumber
      - llGetLinkKey
      - llGetObjectName
      - llSetObjectName
      - llGetObjectDesc
      - llSetObjectDesc
      - llGetObjectDetails
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
    slwiki:
      - Object
      - Prim
      - Link
      - Link#Root_Prim
      - Link#Child_Prim
      - Limits
      - Prim_Attribute_Overloading
    slwiki_categories:
      - LSL_Link
      - LSL_Link/Get
  scope: support.function.builtin
  type: string
llGetInventoryNumber:
  description: |-
    Returns the number of items of a given type (INVENTORY_* flag) in
    the prim's inventory
  function-id: 146
  params:
    - description: INVENTORY_* flag
      name: type
      type: integer
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryType
      - llGetInventoryCreator
      - llGetInventoryPermMask
      - llGetInventoryKey
    slwiki:
      - Texture
      - Sound
      - Landmark
      - Clothing
      - Object
      - Notecard
      - Script
      - Body_part
      - Animation
      - Gesture
    slwiki_categories:
      - LSL_Inventory
  scope: support.function.builtin
  type: integer
llGetInventoryName:
  description: Returns the name of the inventory item number of a given type
  function-id: 147
  params:
    - description: INVENTORY_* flag
      name: type
      type: integer
    - description: zero-based index, does NOT support negative indexes
      name: number
      type: integer
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryNumber
      - llGetInventoryType
      - llGetInventoryCreator
      - llGetInventoryPermMask
      - llGetInventoryKey
    slwiki_categories:
      - LSL_Inventory
  scope: support.function.builtin
  type: string
llSetScriptState:
  description: Sets the running state of the specified script
  function-id: 148
  params:
    - description: a script in the inventory of the prim this script is in
      name: name
      type: string
    - description: |-
        boolean, if TRUE the script will be enabled, if FALSE the script
        will be disabled
      name: run
      type: integer
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llGetScriptState
      - llRemoteLoadScriptPin
      - llGiveInventory
      - llGiveInventoryList
      - llGetScriptName
      - llResetScript
      - llResetOtherScript
    slwiki_categories:
      - LSLInventory
      - LSL_Script
      - LSL_Error
  scope: support.function.builtin
llGetEnergy:
  description: |-
    Returns how much energy is in the object as a percentage of maximum
  function-id: 149
  related:
    slwiki:
      - Energy
  scope: support.function.builtin
  type: float
llGiveInventory:
  description: |-
      Gives inventory to destination.
      Sleeps script for 2 seconds if destination is an avatar.
  function-id: 150
  params:
    - description: group, avatar or prim UUID
      name: destination
      type: key
    - description: an item in the inventory of the prim this script is in
      name: inventory
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - CHANGED_INVENTORY
    events:
      - changed
    functions:
      - llRemoveInventory
      - llGiveInventoryList
      - llSetRemoteScriptAccessPin
      - llRemoteLoadScriptPin
      - llGetInventoryPermMask
      - llAllowInventoryDrop
      - llMapDestination
    slwiki:
      - Region
      - Attachment
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Inventory
  scope: support.function.builtin
llRemoveInventory:
  description: Removes the named inventory item
  function-id: 151
  params:
    - description: an item in the inventory of the prim this script is in
      name: item
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - CHANGED_INVENTORY
    events:
      - changed
    functions:
      - llGiveInventory
      - llGiveInventoryList
    slwiki_categories:
      - LSL_Inventory
  scope: support.function.builtin
llSetText:
  description: |-
    Displays text that hovers over the prim with specific color and translucency
    specified with alpha
  function-id: 152
  params:
    - description: floating text to display limited to 254 bytes
      name: text
      type: string
    - description: color in decimal RGB
      name: color
      type: vector
    - description: alpha in the range [0.0, 1.0] from transparent to opaque
      name: alpha
      type: float
  related:
    constants:
      - PRIM_TEXT
    functions:
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llEscapeURL
      - llUnescapeURL
    slwiki:
      - Limits#Building
      - Bytes
      - String
      - String#Escape_Codes
      - Vector#Components
    slwiki_categories:
      - LSL_Floating_Text
      - LSL_Color
      - LSL_Alpha
      - LSL_Effects
      - LSL_Prim
      - LSL_Stop
      - LSL_Floating_Text
  scope: support.function.builtin
  version: '0.1.0'
llWater:
  description: Returns the water height below the object position + offset
  function-id: 153
  params:
    - description: |-
        offset relative to the prim's position and expressed in local
        coordinates
      name: offset
      type: vector
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llGetPos
      - llGround
      - llWind
    slwiki:
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Region
      - LSL_Ground
  scope: support.function.builtin
  type: float
llPassTouches:
  description: Sets the pass-touches prim attribute.
  function-id: 154
  params:
    - default: PASS_ALWAYS
      description: PASS_* flag
      name: pass
      type: integer.pass
  related:
    constants:
      - PASS_IF_NOT_HANDLED
      - PASS_ALWAYS
      - PASS_NEVER
      - 'TRUE'
      - 'FALSE'
    events:
      - touch_start
      - touch
      - touch_end
    functions:
      - llPassCollisions
    slwiki:
      - Prim
    slwiki_categories:
      - LSL_Touch
      - LSL_Prim
      - LSL_Detected
      - LSL_Passable
  scope: support.function.builtin
llRequestAgentData:
  delay: 0.1
  description: |-
    Requests data about agent id. When data is available the dataserver
    event will be raised.
  function-id: 155
  params:
    - description: avatar UUID
      name: id
      type: key
    - description: DATA_* flag
      name: data
      type: integer
  related:
    constants:
      - NULL_KEY
      - DATA_ONLINE
      - DATA_NAME
      - DATA_BORN
      - DATA_RATING
      - DATA_PAYINFO
      - PAYMENT_INFO_ON_FILE
      - PAYMENT_INFO_USED
      - 'TRUE'
      - 'FALSE'
    events:
      - dataserver
    functions:
      - llGetAgentInfo
      - llGetObjectDetails
      - llCSV2List
      - llGetOwner
    slwiki:
      - Viewer_URI_Name_Space
      - UUID
      - Integer
      - String
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/Name
      - LSL_Avatar/As_A_Parameter
      - LSL_Dataserver
      - LSL_Functions/Returns_a_key/handle
      - LSL_Key/handle
  scope: support.function.builtin
  type: key
llRequestInventoryData:
  delay: 1.0
  description: |-
    Requests data from object's inventory object. When data is available
    the dataserver event will be raised.
  function-id: 156
  params:
    - description: an item in the inventory of the prim this script is in
      name: name
      type: string
  related:
    constants:
      - ZERO_VECTOR
      - DEBUG_CHANNEL
    events:
      - dataserver
    functions:
      - llGetRegionCorner
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetRegionName
      - llMapDestination
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Global
    slwiki_categories:
      - LSL_Inventory
      - LSL_Dataserver
      - LSL_Landmark
  scope: support.function.builtin
  type: key
llSetDamage:
  description: |-
    Sets the amount of damage that will be done when this object hits
    an avatar
  function-id: 157
  params:
    - description: in the range [0.0, 100.0] from no damage to instant kill
      name: damage
      type: float
  related:
    constants:
      - STATUS_PHYSICS
      - STATUS_PHANTOM
    events:
      - collision_start
      - collision
      - collision_end
    functions:
      - llVolumeDetect
      - llDie
    slwiki:
      - Death
    slwiki_categories:
      - LSL_Collision
      - LSL_Land_Collision
  scope: support.function.builtin
llTeleportAgentHome:
  delay: 5.0
  description: |-
    Teleports avatar on the owner's land to their home location without
    any warning
  energy: 100
  function-id: 158
  params:
    - description: avatar UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - NULL_KEY
    functions:
      - llDie
      - llEjectFromLand
      - llTeleportAgent
      - llTeleportAgentGlobalCoords
    slwiki:
      - Death
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Parcel
  scope: support.function.builtin
llModifyLand:
  description: |-
    Modifies land using the specified action on the specified brush size
    of land
  function-id: 159
  params:
    - description: LAND_* flag
      name: action
      type: integer
    - description: LAND_*_BRUSH flag
      name: brush
      type: integer
  related:
    constants:
      - LAND_LEVEL
      - LAND_RAISE
      - LAND_LOWER
      - LAND_SMOOTH
      - LAND_NOISE
      - LAND_REVERT
    slwiki_categories:
      - LSL_Parcel
      - LSL_Ground
  scope: support.function.builtin
  snippets:
    - llModifyLand(LAND_LEVEL, 0); // to use the small brush because LAND_SMALL_BRUSH
      is broken with wrong value 1
    - llModifyLand(LAND_LEVEL, 1); // to use the medium brush because LAND_MEDIUM_BRUSH
      is broken with wrong value 2
    - llModifyLand(LAND_LEVEL, 2); // to use the large brush because LAND_LARGE_BRUSH
      is broken with wrong value 3
llCollisionSound:
  description: Suppresses default collision sounds, replaces default impact sounds
      with impact_sound at the volume impact_volume
  function-id: 160
  params:
    - description: |-
        a sound in the inventory of the prim this script is in, a UUID
        of a sound or an empty string
      name: impact_sound
      type: string
    - description: in range [0.0, 1.0] from silent to loud
      name: impact_volume
      type: float
  related:
    constants:
      - DEBUG_CHANNEL
      - 'TRUE'
      - 'FALSE'
    events:
      - collision_start
      - collision
      - collision_end
    functions:
      - llCollisionFilter
    slwiki_categories:
      - LSL_Collision
      - LSL_Sound
      - LSL_Object
  scope: support.function.builtin
  version: '0.2.0'
llGetAnimation:
  description: |-
    Returns the name of the currently playing locomotion animation for
    avatar id
  function-id: 162
  params:
    - description: avatar UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - NULL_KEY
    events: []
    functions:
      - llGetAgentInfo
      - llGetAnimationList
      - llGetOwner
    slwiki:
      - UUID
      - Region
    slwiki_categories:
      - LSL_Animation/Override
      - LSL_Avatar
      - LSL_Animation
  scope: support.function.builtin
  snippets:
    - llGetAnimation(key id) == "Crouching" // if crouch
    - llGetAnimation(key id) == "CrouchWalking" // if crouchwalk
    - llGetAnimation(key id) == "Falling Down" // if falldown
    - llGetAnimation(key id) == "Flying" // if flying
    - llGetAnimation(key id) == "FlyingSlow" // if flyslow
    - llGetAnimation(key id) == "Hovering" // if hover
    - llGetAnimation(key id) == "Hovering Down" // if hover_down
    - llGetAnimation(key id) == "Hovering Up" // if hover_up
    - llGetAnimation(key id) == "Jumping" // if jump
    - llGetAnimation(key id) == "Landing" // if land
    - llGetAnimation(key id) == "PreJumping" // if prejump
    - llGetAnimation(key id) == "Running" // if run
    - llGetAnimation(key id) == "Sitting" // if sit
    - llGetAnimation(key id) == "Sitting on Ground" // if sit_ground_constrained
    - llGetAnimation(key id) == "Standing" // if stand
    - llGetAnimation(key id) == "Standing Up" // if standup
    - llGetAnimation(key id) == "Striding" // if stride
    - llGetAnimation(key id) == "Soft Landing" // if soft_land
    - llGetAnimation(key id) == "Taking Off" // if hover_up
    - llGetAnimation(key id) == "Turning Left" // if turnleft
    - llGetAnimation(key id) == "Turning Right" // if turnright
    - llGetAnimation(key id) == "Walking" // if walk
    - llGetAnimation(key id) == "" // during logout
    - llGetAnimation(key id) == "Init" // at login and after teleports
  type: string
llResetScript:
  description: Resets the script
  function-id: 163
  related:
    events:
      - state_entry
    functions:
      - llResetOtherScript
      - llGetScriptState
      - llSetScriptState
      - llGetTime
      - llGetAndResetTime
      - llResetTime
    slwiki:
      - State
      - Default
    slwiki_categories:
      - LSL_Script
  scope: support.function.builtin
llMessageLinked:
  description: |-
    Allows scripts in the same object to communicate. Triggers a link_message
    event with the same parameters num, str, and id in all scripts in the prim(s)
    described by linknum.
  function-id: 164
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims or seated
        avatars) or a LINK_* flag
      name: linknum
      type: integer.link
    - description: number value to be transmitted
      name: num
      type: integer
    - description: string value to be transmitted
      name: str
      type: string
    - description: key value to be transmitted
      name: id
      type: key
  related:
    constants:
      - LINK_ROOT
      - LINK_SET
      - LINK_ALL_OTHERS
      - LINK_ALL_CHILDREN
      - LINK_THIS
    events:
      - link_message
    functions:
      - llGetLinkNumber
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llListen
      - llSleep
    slwiki:
      - LSL_Delay
      - Lag
      - Event
      - State
      - LSL_Errors#Script_run-time_error:_Stack-Heap_Collision
      - Limits#Scripting
    slwiki_categories:
      - LSL_Communications
      - LSL_Link_Message
  scope: support.function.builtin
llPushObject:
  description: Applies impulse and ang_impulse to object id
  function-id: 165
  params:
    - description: group, avatar or object UUID that is in the same region
      name: id
      type: key
    - description: direction and force of push, direction is affected by local
      name: impulse
      type: vector
    - description: rotational force
      name: ang_impulse
      type: vector
    - description: |-
        boolean, if TRUE uses the local axis of target, if FALSE uses
        the region axis
      name: local
      type: integer
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
      - NULL_KEY
    events:
      - collision_start
      - collision
      - collision_end
    slwiki:
      - Energy
      - Object
      - UUID
      - Region
      - Viewer_coordinate_frames#Local
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
      - LSL_Group
      - LSL_Avatar
  scope: support.function.builtin
llPassCollisions:
  description: |-
    If pass == TRUE, collisions are passed from children on to parents
    (default is FALSE)
  function-id: 166
  params:
    - description: PASS_* flag
      name: pass
      type: integer.pass
  related:
    constants:
      - PASS_IF_NOT_HANDLED
      - PASS_ALWAYS
      - PASS_NEVER
      - 'TRUE'
      - 'FALSE'
    events:
      - collision_start
      - collision
      - collision_end
    functions:
      - llPassTouches
      - llCollisionFilter
      - llCollisionSound
      - llVolumeDetect
    slwiki_categories:
      - LSL_Collision
      - LSL_Prim
      - LSL_Detected
      - LSL_Passable
  scope: support.function.builtin
llGetScriptName:
  description: Returns the name of the script that this function is used in
  function-id: 167
  related:
    constants:
      - INVENTORY_SCRIPT
    functions:
      - llRemoveInventory
      - llGetInventoryName
    slwiki_categories:
      - LSL_Inventory
      - LSL_Script
  scope: support.function.builtin
  type: string
llGetNumberOfSides:
  description: Returns the number of faces (or sides) of the prim
  function-id: 168
  related:
    constants:
      - ALL_SIDES
    functions:
      - llGetLinkNumberOfSides
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Face
  scope: support.function.builtin
  type: integer
llAxisAngle2Rot:
  description: Returns the rotation that is a generated angle about axis
  function-id: 169
  params:
    - description: a directional vector that doesn't need to be normalized
      name: axis
      type: vector
    - description: expressed in radians
      name: angle
      type: float
  related:
    constants:
      - RAD_TO_DEG
      - DEG_TO_RAD
    functions:
      - llRot2Angle
      - llRot2Axis
    slwiki_categories:
      - LSL_Math/3D
      - LSL_Rotation
  scope: support.function.builtin
  type: rotation
llRot2Axis:
  description: Returns the rotation axis represented by rot
  function-id: 170
  params:
    - description: rotation rot
      name: rot
      type: rotation
  related:
    constants:
      - ZERO_ROTATION
    functions:
      - llRot2Angle
      - llAxisAngle2Rot
      - llAxes2Rot
      - llRot2Left
      - llRot2Fwd
      - llRot2Up
    slwiki:
      - Slerp
    slwiki_categories:
      - LSL_Rotation
  scope: support.function.builtin
  snippets:
    - |-
      rotation slerp (rotation a, rotation b, float t)
      {
          return llAxisAngle2Rot(llRot2Axis(b /= a), t*llRot2Angle(b))*a;
      }
  type: vector
llRot2Angle:
  description: Returns the rotation angle represented by rot
  function-id: 171
  params:
    - description: rotation rot
      name: rot
      type: rotation
  related:
    constants:
      - ZERO_ROTATION
    functions:
      - llRot2Axis
      - llAxisAngle2Rot
      - llRot2Up
      - llRot2Fwd
      - llRot2Left
      - llAngleBetween
    slwiki_categories:
      - LSL_Rotation
  scope: support.function.builtin
  type: float
llAcos:
  description: Returns the arccosine in radians of val
  function-id: 172
  params:
    - description: in range [-1.0, 1.0]
      name: val
      type: float
  related:
    constants:
      - PI
    functions:
      - llSin
      - llAsin
      - llCos
      - llTan
      - llAtan2
    slwiki_categories:
      - LSL_Math/Trigonometry
    wikipedia:
        en:
          - Inverse_trigonometric_function
  scope: support.function.builtin
  type: float
llAsin:
  description: Returns the arcsine in radians of val
  function-id: 173
  params:
    - description: in range [-1.0, 1.0]
      name: val
      type: float
  related:
    constants:
      - PI_BY_TWO
    functions:
      - llSin
      - llCos
      - llAcos
      - llTan
      - llAtan2
    slwiki_categories:
      - LSL_Math/Trigonometry
    wikipedia:
        en:
          - Inverse_trigonometric_function
  scope: support.function.builtin
  type: float
llAngleBetween:
  description: Returns angle between rotation a and b
  function-id: 174
  params:
    - description: start rotation
      name: a
      type: rotation
    - description: end rotation
      name: b
      type: rotation
  related:
    constants:
      - ZERO_ROTATION
    functions:
      - llRotBetween
      - llRot2Angle
      - llGetRootRotation
    slwiki_categories:
      - LSL_Math/3D
  scope: support.function.builtin
  type: float
llGetInventoryKey:
  description: Returns the key that is the UUID of the inventory name
  function-id: 175
  params:
    - description: an item in the inventory of the prim this script is in
      name: name
      type: string
  related:
    constants:
      - NULL_KEY
      - DEBUG_CHANNEL
      - CHANGED_INVENTORY
    events:
      - changed
    functions:
      - llGetInventoryType
      - llGetInventoryPermMask
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryCreator
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Inventory
      - LSL_Key
  scope: support.function.builtin
  type: key
  version: '0.2'
llAllowInventoryDrop:
  description: |-
    If add == TRUE, users without modify permissions can still drop inventory
    items onto a prim
  function-id: 176
  params:
    - description: |-
        boolean, if TRUE allows anybody to drop inventory, if FALSE dropping
        inventory is only allowed by agents with modify permissions to that prim
      name: add
      type: integer
  related:
    constants:
      - CHANGED_ALLOWED_DROP
      - CHANGED_INVENTORY
      - 'TRUE'
      - 'FALSE'
    events:
      - changed
    slwiki:
      - Boolean
    slwiki_categories:
      - LSL_Inventory
  scope: support.function.builtin
llGetSunDirection:
  description: |-
    Returns a normalized vector of the direction of the sun in the region
  function-id: 177
  related:
    functions:
      - llGetTimeOfDay
    slwiki_categories:
      - LSL_Region
      - LSL_Time
      - LSL_Light
      - LSL_Weather
  scope: support.function.builtin
  type: vector
llGetTextureOffset:
  description: |-
    Returns the texture offset of face in the x and y components of a vector
  function-id: 178
  params:
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - ALL_SIDES
    functions:
      - llOffsetTexture
      - llGetNumberOfSides
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Get
      - LSL_Texture
  scope: support.function.builtin
  type: vector
llGetTextureScale:
  description: |-
    Returns the texture scale of side in the x and y components of a vector
  function-id: 179
  params:
    - description: face number or ALL_SIDES
      name: side
      type: integer
  related:
    constants:
      - ALL_SIDES
    functions:
      - llScaleTexture
      - llGetNumberOfSides
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Get
      - LSL_Texture
  scope: support.function.builtin
  type: vector
llGetTextureRot:
  description: Returns the texture rotation of side
  function-id: 180
  params:
    - description: face number or ALL_SIDES
      name: side
      type: integer
  related:
    constants:
      - ALL_SIDES
    functions:
      - llRotateTexture
      - llGetNumberOfSides
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Get
      - LSL_Texture
  scope: support.function.builtin
  type: float
llSubStringIndex:
  description: |-
      Returns an integer that is the index in source where pattern first appears.
      (Returns -1 if not found.)
  function-id: 181
  params:
    - description: what to search in (haystack)
      name: source
      type: string
    - description: what to search for (needle)
      name: pattern
      type: string
  related:
    functions:
      - llListFindList
      - llGetSubString
    slwiki:
      - SubStringLastIndex
    slwiki_categories:
      - LSL_String
  scope: support.function.builtin
  type: integer
llGetOwnerKey:
  description: Returns the owner of object id
  function-id: 182
  params:
    - description: prim UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - NULL_KEY
      - OBJECT_OWNER
    functions:
      - llGetOwner
      - llGetObjectDetails
      - llRequestAgentData
      - llKey2Name
      - llGetAgentSize
    slwiki_categories:
      - LSL_Owner
      - LSL_Key
  scope: support.function.builtin
  type: key
llGetCenterOfMass:
  description: |-
    Returns the prim's center of mass (unless called from the root prim,
    where it returns the object's center of mass)
  function-id: 183
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llGetPos
      - llGetGeometricCenter
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Physics
      - LSL_Prim
      - LSL_Object
  scope: support.function.builtin
  type: vector
llListSort:
  description: |-
      Sorts the list into blocks of stride, in ascending order if
      ascending == TRUE. The sort order is affected by type.
  function-id: 184
  params:
    - description: list to be sorted
      name: src
      type: list
    - description: |-
        number of entries per stride, if less than 1 it is assumed to be 1
      name: stride
      type: integer
    - description: |-
        if TRUE then the sort order is ascending, otherwise the order
        is descending
      name: ascending
      type: integer
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    functions:
      - llListRandomize
    slwiki:
      - List#Strided_lists
      - Vector
      - Rotation
    slwiki_categories:
      - LSL_List
  scope: support.function.builtin
  type: list
llGetListLength:
  description: Returns the number of elements in the list
  function-id: 185
  params:
    - description: list to be measured
      name: src
      type: list
  related:
    constants:
      - LIST_STAT_NUM_COUNT
    functions:
      - llListStatistics
      - llStringLength
    slwiki_categories:
      - LSL_List
  scope: support.function.builtin
  type: integer
llList2Integer:
  description: Copies the integer at index in the list
  function-id: 186
  params:
    - description: list containing the element of interest
      name: src
      type: list
    - description: index of the element of interest, supports negative indexes
      name: index
      type: integer
  related:
    functions:
      - llGetListEntryType
      - llList2Float
      - llList2Key
      - llList2List
      - llList2Rot
      - llList2String
      - llList2Vector
    slwiki:
      - Integer
      - Typecast
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
  scope: support.function.builtin
  type: integer
llList2Float:
  description: Copies the float at index in the list
  function-id: 187
  params:
    - description: list containing the element of interest
      name: src
      type: list
    - description: index of the element of interest, supports negative indexes
      name: index
      type: integer
  related:
    functions:
      - llGetListEntryType
      - llList2Integer
      - llList2Key
      - llList2List
      - llList2Rot
      - llList2String
      - llList2Vector
    slwiki:
      - Float
      - Typecast
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
  scope: support.function.builtin
  type: float
llList2String:
  description: Copies the string at index in the list
  function-id: 188
  params:
    - description: list containing the element of interest
      name: src
      type: list
    - description: index of the element of interest, supports negative indexes
      name: index
      type: integer
  related:
    functions:
      - llDumpList2String
      - llGetListEntryType
      - llList2Float
      - llList2Integer
      - llList2Key
      - llList2List
      - llList2Rot
      - llList2Vector
    slwiki:
      - String
      - Typecast
      - Hex
    slwiki_categories:
      - LSL_Negative_IndexLSL_List
  scope: support.function.builtin
  type: string
llList2Key:
  description: Copies the key at index in the list
  function-id: 189
  params:
    - description: list containing the element of interest
      name: src
      type: list
    - description: index of the element of interest, supports negative indexes
      name: index
      type: integer
  related:
    constants:
      - NULL_KEY
    functions:
      - llGetListEntryType
      - llList2Float
      - llList2Integer
      - llList2List
      - llList2Rot
      - llList2String
      - llList2Vector
    slwiki:
      - Key
      - Typecast
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
  scope: support.function.builtin
  type: key
llList2Vector:
  description: Copies the vector at index in the list
  function-id: 190
  params:
    - description: list containing the element of interest
      name: src
      type: list
    - description: index of the element of interest, supports negative indexes
      name: index
      type: integer
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llGetListEntryType
      - llList2Float
      - llList2Integer
      - llList2Key
      - llList2List
      - llList2Rot
      - llList2String
    slwiki:
      - Vector
      - Typecast
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
  scope: support.function.builtin
  type: vector
llList2Rot:
  description: Copies the rotation at index in the list
  function-id: 191
  params:
    - description: list containing the element of interest
      name: src
      type: list
    - description: index of the element of interest, supports negative indexes
      name: index
      type: integer
  related:
    constants:
      - ZERO_ROTATION
    functions:
      - llGetListEntryType
      - llList2Float
      - llList2Integer
      - llList2Key
      - llList2List
      - llList2String
      - llList2Vector
    slwiki:
      - Rotation
      - Quaternion
      - Typecast
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
      - LSL_List/Entry_Types
  scope: support.function.builtin
  type: rotation
llList2List:
  description: Copies the slice of the list from start to end
  function-id: 192
  params:
    - description: list containing the element(s) of interest
      name: src
      type: list
    - description: start index, supports negative indexes
      name: start
      type: integer
    - description: end index, supports negative indexes
      name: end
      type: integer
  related:
    functions:
      - llDeleteSubList
      - llListInsertList
      - llListReplaceList
    slwiki:
      - LlList2List#exclusion_range
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
  scope: support.function.builtin
  type: list
llDeleteSubList:
  description: |-
    Removes the slice from start to end and returns the remainder of the list
  function-id: 193
  params:
    - description: list containing the element(s) of interest
      name: src
      type: list
    - description: start index, supports negative indexes
      name: start
      type: integer
    - description: end index, supports negative indexes
      name: end
      type: integer
  related:
    functions:
      - llListInsertList
      - llListReplaceList
      - llList2List
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
  scope: support.function.builtin
  type: list
llGetListEntryType:
  description: |-
      Returns the type of the index entry in the list
      (TYPE_INTEGER, TYPE_FLOAT, TYPE_STRING, TYPE_KEY, TYPE_VECTOR,
      TYPE_ROTATION, or TYPE_INVALID if index is off list)
  function-id: 194
  params:
    - description: list containing the element of interest
      name: src
      type: list
    - description: index of the element of interest
      name: index
      type: integer
  related:
    constants:
      - TYPE_INVALID
      - TYPE_INTEGER
      - TYPE_FLOAT
      - TYPE_STRING
      - TYPE_KEY
      - TYPE_VECTOR
      - TYPE_ROTATION
    functions:
      - llList2Float
      - llList2Integer
      - llList2Key
      - llList2String
      - llList2Rot
      - llList2Vector
    slwiki_categories:
      - LSL_Negativ_Index
      - LSL_List
      - LSL_List/Entry_Types
  scope: support.function.builtin
  type: integer.type
llList2CSV:
  description: Creates a string of comma separated values from list
  function-id: 195
  params:
    - description: list containing the elements of interest
      name: src
      type: list
  related:
    functions:
      - llCSV2List
      - llDumpList2String
      - llParseString2List
      - llParseStringKeepNulls
      - llEscapeURL
      - llUnescapeURL
      - llGetSubString
    slwiki:
      - Typecast
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
      - LSL_CSV
    wikipedia:
        en:
          - Comma-separated_values
  scope: support.function.builtin
  type: string
llCSV2List:
  description: Creates a list from a string of comma separated values
  function-id: 196
  params:
    - description: string containing the CSV with the element(s) of interest
      name: src
      type: string
  related:
    functions:
      - llList2CSV
      - llDumpList2String
      - llParseString2List
      - llParseStringKeepNulls
      - llList2Float
      - llList2Integer
      - llList2Key
      - llList2RotllList2String
      - llList2Vector
    slwiki:
      - LlCSV2List#Vectors_.26_RotationsTypecast
      - Integer
      - Float
      - String
      - Key
      - Vector
      - Rotation
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
      - LSL_CSV
    wikipedia:
        en:
          - Comma-separated_values
  scope: support.function.builtin
  type: list
llListRandomize:
  description: Returns a randomized list of blocks of size stride
  function-id: 197
  params:
    - description: list containing the element(s) of interest
      name: src
      type: list
    - description: |-
        number of entries per stride, if less than 1 it is assumed to be 1
      name: stride
      type: integer
  related:
    functions:
      - llListSort
      - llFrand
    slwiki_categories:
      - LSL_List
  scope: support.function.builtin
  type: list
llList2ListStrided:
  description: Copies the strided slice of the list from start to end
  function-id: 198
  params:
    - description: list that contains the element(s) of interest
      name: src
      type: list
    - description: start index, supports negative indexes
      name: start
      type: integer
    - description: end index, supports negative indexes
      name: end
      type: integer
    - description: |-
        number of entries per stride, if less than 1 it is assumed to be 1
      name: stride
      type: integer
  related:
    functions:
      - llList2List
    slwiki:
      - List#Strided_ListsLlList2ListStrided#exclusion_range
    slwiki_categories:
      - LSL_Negativ_Index
      - LSL_List
  scope: support.function.builtin
  type: list
llGetRegionCorner:
  description: |-
    Returns a vector in meters that is the global location of the south-west
    corner of the region which the object is in
  function-id: 199
  related:
    constants:
      - ZERO_VECTOR
    slwiki_categories:
      - LSL_Region
  scope: support.function.builtin
  type: vector
llListInsertList:
  description: |-
    Returns a list that contains all the elements from dest but with
    the elements from src inserted at position start
  function-id: 200
  params:
    - description: destination
      name: dest
      type: list
    - description: source
      name: src
      type: list
    - description: start index, supports negative indexes
      name: start
      type: integer
  related:
    functions:
      - llDeleteSubList
      - llList2List
      - llListReplaceList
    slwiki_categories:
      - LSL_Negativ_Index
      - LSL_List
  scope: support.function.builtin
  type: list
llListFindList:
  description: |-
      Returns the index of the first instance of test in src.
      (Returns -1 if not found.)
  function-id: 201
  params:
    - description: what to search in (haystack)
      name: src
      type: list
    - description: what to search for (needle)
      name: test
      type: list
  related:
    functions:
      - llSubStringIndex
    slwiki_categories:
      - LSL_List
  scope: support.function.builtin
  type: integer
llGetObjectName:
  description: Returns the name of the prim which the script is attached to
  function-id: 202
  related:
    constants:
      - PRIM_NAME
      - OBJECT_NAME
      - LINK_ROOT
    functions:
      - llSetObjectName
      - llGetObjectDesc
      - llSetObjectDesc
      - llGetLinkName
      - llGetObjectDetails
    slwiki:
      - Limits
      - Prim_Attribute_Overloading
    slwiki_categories:
      - LSL_Prim
  scope: support.function.builtin
  type: string
llSetObjectName:
  description: Sets the prim's name to the name parameter
  function-id: 203
  params:
    - description: max of 63 chars of ASCII-7
      name: name
      type: string
  related:
    constants:
      - PRIM_NAME
      - OBJECT_NAME
    functions:
      - llGetObjectName
      - llGetLinkName
      - llGetObjectDesc
      - llSetObjectDesc
      - llGetObjectDetails
    slwiki:
      - Limits
    slwiki_categories:
      - LSL_Prim
    wikipedia:
        en:
          - ASCII#ASCII_printable_characters
  scope: support.function.builtin
  snippets:
    - |-
      default
      {
          state_entry()
          {
              llSetObjectName("New prim name");
              llRemoveInventory(llGetScriptName());
          }
      }
    - |-
      default
      {
          state_entry()
          {
              llSetLinkPrimitiveParamsFast(LINK_ROOT, [
                  PRIM_NAME, "New root prim name (for object)"]);
              llRemoveInventory(llGetScriptName());
          }
      }
llGetDate:
  description: |-
    Returns the current date in the UTC time zone in the format YYYY-MM-DD
  function-id: 204
  related:
    functions:
      - llGetTimestamp
    wikipedia:
        en:
          - ISO_8601
  scope: support.function.builtin
  type: string
llEdgeOfWorld:
  description: |-
    Checks to see whether the border hit by dir from pos is the edge
    of the world (has no neighboring region)
  function-id: 205
  params:
    - description: position in region coordinates
      name: pos
      type: vector
    - description: direction
      name: dir
      type: vector
  related:
    constants:
      - STATUS_DIE_AT_EDGE
      - STATUS_RETURN_AT_EDGE
      - 'TRUE'
      - 'FALSE'
    functions:
      - llScriptDanger
    slwiki_categories:
      - LSL_Region
      - LSL_World_Edge
      - LSL_Functions/Returns_a_integer/boolean
  scope: support.function.builtin
  type: integer.boolean
  version: '0.2.0'
llGetAgentInfo:
  description: |-
      Returns an integer bitfield containing the agent information about id.
      Returns AGENT_FLYING, AGENT_ATTACHMENTS, AGENT_SCRIPTED, AGENT_SITTING,
      AGENT_ON_OBJECT, AGENT_MOUSELOOK, AGENT_AWAY, AGENT_BUSY, AGENT_TYPING,
      AGENT_CROUCHING, AGENT_ALWAYS_RUN, AGENT_WALKING and/or AGENT_IN_AIR.
  function-id: 206
  params:
    - description: avatar UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - AGENT_ALWAYS_RUN
      - AGENT_ATTACHMENTS
      - AGENT_AUTOPILOT
      - AGENT_AWAY
      - AGENT_BUSY
      - AGENT_CROUCHING
      - AGENT_FLYING
      - AGENT_IN_AIR
      - AGENT_MOUSELOOK
      - AGENT_ON_OBJECT
      - AGENT_SCRIPTED
      - AGENT_SITTING
      - AGENT_TYPING
      - AGENT_WALKING
    functions:
      - llGetAnimationList
      - llGetAnimation
      - llGetAgentSize
      - llRequestAgentData
    slwiki:
      - UUID
      - Region
      - Integer
      - Internal_Animations
      - Debug_Settings
      - ChatFromViewer
    slwiki_categories:
      - LSL_Integer/bit_field
      - LSL_Avatar
      - LSL_Functions/Returns_a_integer/bit_field
  scope: support.function.builtin
  type: integer.bit_field
  version: '0.4.0'
llAdjustSoundVolume:
  delay: 0.1
  description: Adjusts volume of attached sound (0.0 - 1.0)
  function-id: 207
  params:
    - description: in range [0.0, 1.0] from silent to loud
      name: volume
      type: float
  related:
    slwiki_categories:
      - LSL_Sound
  scope: support.function.builtin
  version: '0.2.0'
llSetSoundQueueing:
  description: |-
    Sets whether attached sounds wait for the current sound to finish
    (If queue == TRUE then queuing is enabled, if FALSE queuing is disabled
    [default])
  function-id: 208
  params:
    - default: 'FALSE'
      description: |-
        boolean, TRUE enables sound queueing, FALSE (default) disables
      name: queue
      type: integer
  related:
    functions:
      - llLoopSound
      - llLoopSoundMaster
      - llLoopSoundSlave
    slwiki_categories:
      - LSL_Sound
      - LSL_Prim
  scope: support.function.builtin
  version: '0.2.0'
llSetSoundRadius:
  description: |-
    Establishes a hard cut-off radius for audibility of scripted sounds
    (both attached and triggered)
  function-id: 209
  params:
    - description: in meters
      name: radius
      type: float
  related:
    functions:
      - llTriggerSoundLimited
    slwiki_categories:
      - LSL_Sound
  scope: support.function.builtin
  version: '0.4.0'
llKey2Name:
  description: |-
      Returns the name of the prim or avatar specified by id.
      (The id must be a valid rezzed prim or avatar key in the current
      simulator, otherwise an empty string is returned.)
  function-id: 210
  params:
    - description: group, avatar or prim UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - NULL_KEY
    events:
      - dataserver
      - http_response
    functions:
      - llGetObjectDetails
      - llRequestAgentData
      - llHTTPRequest
      - llSensor
      - llGetUsername
      - llGetDisplayName
    slwiki:
      - Mini-Map
      - Ghost_Detector
      - Prim_Attribute_Overloading
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/Name
      - LSL_Legacy_Name
      - LSL_Prim
      - LSL_Key
  scope: support.function.builtin
  type: string
  version: '0.4.0'
llSetTextureAnim:
  description: Animates the texture on the specified face/faces
  function-id: 211
  params:
    - description: mask of mode flags
      name: mode
      type: integer.bit_field
    - description: face number or ALL_SIDES
      name: face
      type: integer
    - description: horizontal frames (ignored for ROTATE and SCALE)
      name: sizex
      type: integer
    - description: vertical frames (ignored for ROTATE and SCALE)
      name: sizey
      type: integer
    - description: start position / frame number (or radians for ROTATE)
      name: start
      type: float
    - description: number of frames to display (or radians for ROTATE)
      name: length
      type: float
    - description: frames per second (must not be zero)
      name: rate
      type: float
  related:
    constants:
      - ANIM_ON
      - LOOP
      - REVERSE
      - PING_PONG
      - SMOOTH
      - ROTATE
      - SCALE
      - ALL_SIDES
    functions:
      - llSetLinkTextureAnim
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_Face
      - LSL_Face/Set
      - LSL_Media
      - LSL_Effects
      - LSL_Texture
      - LSL_Video
      - LSL_Integer/bit_field
  scope: support.function.builtin
  version: '0.4.0'
llTriggerSoundLimited:
  description: |-
    Plays sound at volume (0.0 - 1.0), centered at but not attached to
    object, limited to the box defined by vectors top_north_east and
    bottom_south_west
  function-id: 212
  params:
    - description: |-
        a sound in the inventory of the prim this script is in or a UUID
        of a sound
      name: sound
      type: string
    - description: in range [0.0, 1.0] from silent to loud
      name: volume
      type: float
    - description: position in region coordinates
      name: top_north_east
      type: vector
    - description: position in region coordinates
      name: bottom_south_west
      type: vector
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llPlaySound
      - llTriggerSound
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Permissions/Asset
      - LSL_Sound
  scope: support.function.builtin
  version: '0.4.0'
llEjectFromLand:
  description: Ejects avatar from the parcel
  function-id: 213
  params:
    - description: avatar UUID that is in the same region
      name: avatar
      type: key
  related:
    slwiki:
      - UUID
      - Region
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Security
      - LSL_Parcel
  scope: support.function.builtin
  version: '0.6.0'
llParseString2List:
  description: |-
      Breaks src into a list, discarding separators, keeping spacers
      (separators and spacers must be lists of strings, maximum of 8 each)
  function-id: 214
  params:
    - description: source string
      name: src
      type: string
    - description: separators to be discarded
      name: separators
      type: list
    - description: spacers to be kept
      name: spacers
      type: list
  related:
    functions:
      - llParseStringKeepNulls
      - llDumpList2String
      - llCSV2List
      - llList2CSV
    slwiki:
      - Separate_Words
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
  scope: support.function.builtin
  type: list
  version: '0.6.0'
llOverMyLand:
  description: |-
    Returns TRUE if id is over land owned by the script owner,
    otherwise FALSE
  function-id: 215
  params:
    - description: group, avatar or object UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    functions:
      - llReturnObjectsByID
      - llReturnObjectsByOwner
    slwiki:
      - UUID
      - Region
      - Object
    slwiki_categories:
      - LSL_Group
      - LSL_Avatar/As_A_Parameter
      - LSL_Parcel
      - LSL_Security
  scope: support.function.builtin
  type: integer.boolean
  version: '0.6.0'
llGetLandOwnerAt:
  description: Returns the key of the land owner, returns NULL_KEY if public
  function-id: 216
  params:
    - description: region coordinates
      name: pos
      type: vector
  related:
    constants:
      - NULL_KEY
      - ZERO_VECTOR
      - PARCEL_DETAILS_OWNER
    functions:
      - llGetParcelDetails
    slwiki:
      - Group
    slwiki_categories:
      - LSL_Parcel
      - LSL_Owner
  scope: support.function.builtin
  type: key
  version: '0.6.0'
llGetNotecardLine:
  delay: 0.1
  description: Returns line line of notecard name via the dataserver event
  function-id: 217
  params:
    - description: |-
        a notecard in the inventory of the prim this script is in or
        a UUID of a notecard
      name: name
      type: string
    - description: |-
        Line number in a notecard (the index starts at zero), does NOT
        support negative indexes
      name: line
      type: integer
  related:
    constants:
      - NULL_KEY
      - DEBUG_CHANNEL
      - EOF
    events:
      - dataserver
    functions:
      - llGetNumberOfNotecardLines
      - llGetInventoryKey
    slwiki_categories:
      - LSL_Permissions/Asset
      - LSL_Negative_Index
      - LSL_Notecard
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '0.6.0'
llGetAgentSize:
  description: |-
    If the avatar is in the same region, returns the size of the bounding
    box of the requested avatar by id, otherwise returns ZERO_VECTOR
  function-id: 218
  params:
    - description: avatar UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llGetBoundingBox
      - llGetObjectDetails
      - llGetAgentInfo
      - llRequestAgentData
    slwiki:
      - UUID
      - Region
      - Ruth
      - Avatar_body_size
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
  scope: support.function.builtin
  type: vector
llSameGroup:
  description: |-
    Returns TRUE if avatar id is in the same region and has the same
    active group, otherwise FALSE
  function-id: 219
  params:
    - description: group, avatar or prim UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - NULL_KEY
      - 'TRUE'
      - 'FALSE'
      - OBJECT_GROUP
    functions:
      - llDetectedGroup
      - llGetAttachedList
      - llGetObjectDetails
      - llGetOwner
    slwiki:
      - Boolean
      - Integer
      - Prim
      - UUID
    slwiki_categories:
      - LSL_Group
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Integer/boolean
      - LSL_Functions/Returns_a_integer/boolean
  scope: support.function.builtin
  type: integer.boolean
llUnSit:
  description: |-
    If avatar identified by id is sitting on the object the script is
    attached to or is over land owned by the object's owner, the avatar is
    forced to stand up
  function-id: 220
  params:
    - description: avatar UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - NULL_KEY
    events:
      - changed
    functions:
      - llAvatarOnSitTarget
      - llSitTarget
    slwiki_categories:
      - LSL_Avatar/As_A_Parameter
      - LSL_Parcel
      - LSL_Sit
  scope: support.function.builtin
llGroundSlope:
  description: Returns the ground slope below the object position + offset
  function-id: 221
  params:
    - description: |-
        offset relative to the prim`s position and expressed in local
        coordinates
      name: offset
      type: vector
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llGround
      - llGroundContour
      - llGroundNormal
      - llGetPos
    slwiki:
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Ground
      - LSL_Region
  scope: support.function.builtin
  type: vector
  version: '0.9.0'
llGroundNormal:
  description: Returns the ground normal below the object position + offset
  function-id: 222
  params:
    - description: |-
        offset relative to the prim's position and expressed in local
        coordinates
      name: offset
      type: vector
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llVecNorm
      - llGround
      - llGroundContour
      - llGroundSlope
      - llGetPos
    slwiki:
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Ground
      - LSL_Region
    wikipedia:
        en:
          - Normal_(geometry)
          - Unit_vector
  scope: support.function.builtin
  type: vector
  version: '0.9.0'
llGroundContour:
  description: Returns the ground contour direction below the object position +
      offset
  function-id: 223
  params:
    - description: |-
        offset relative to the prim's position and expressed in local
        coordinates
      name: offset
      type: vector
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llGround
      - llGroundNormal
      - llGroundSlope
      - llGetPos
    slwiki:
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Ground
      - LSL_Region
  scope: support.function.builtin
  type: vector
  version: '0.9.0'
llGetAttached:
  description: Returns the object's attachment point, or 0 if not attached
  function-id: 224
  related:
    constants:
      - ATTACH_AVATAR_CENTER
      - ATTACH_BACK
      - ATTACH_BELLY
      - ATTACH_CHEST
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REAR
      - ATTACH_FACE_REYE
      - ATTACH_FACE_TONGUE
      - ATTACH_GROIN
      - ATTACH_HEAD
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM_RIGHT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_LEAR
      - ATTACH_LEFT_PEC
      - ATTACH_LEYE
      - ATTACH_LFOOT
      - ATTACH_LHAND
      - ATTACH_LHAND_RING1
      - ATTACH_LHIP
      - ATTACH_LLARM
      - ATTACH_LLLEG
      - ATTACH_LSHOULDER
      - ATTACH_LUARM
      - ATTACH_LULEG
      - ATTACH_LWING
      - ATTACH_MOUTH
      - ATTACH_NECK
      - ATTACH_NOSE
      - ATTACH_PELVIS
      - ATTACH_REAR
      - ATTACH_REYE
      - ATTACH_RFOOT
      - ATTACH_RHAND
      - ATTACH_RHAND_RING1
      - ATTACH_RHIP
      - ATTACH_RIGHT_PEC
      - ATTACH_RLARM
      - ATTACH_RLLEG
      - ATTACH_RSHOULDER
      - ATTACH_RUARM
      - ATTACH_RULEG
      - ATTACH_RWING
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - OBJECT_ATTACHED_POINT
    events:
      - attach
    functions:
      - llAttachToAvatar
      - llDetachFromAvatar
      - llGetAttachedList
      - llGetObjectDetails
    slwiki:
      - Integer
      - Project_Bento_Skeleton_Guide
    slwiki_categories:
      - LSL_Integer/attach_point
      - LSL_Attachment
  scope: support.function.builtin
  type: integer
  version: '1.1.0'
llGetFreeMemory:
  description: Returns the number of free bytes of memory the script can use
  function-id: 225
  related:
    functions:
      - llGetUsedMemory
      - llScriptProfiler
    slwiki:
      - LlGetFreeMemory#Mono
      - Mono
      - LlGetFreeMemory#LSO
      - LSO
    slwiki_categories:
      - LSL_Script
      - LSL_Memory
  scope: support.function.builtin
  type: integer
  version: '1.1.0'
llGetRegionName:
  description: Returns the current region name
  function-id: 226
  related:
    functions:
      - llRequestSimulatorData
      - llGetSimulatorHostname
      - llGetRegionTimeDilation
      - llGetRegionFPS
      - llGetParcelDetails
      - llEscapeURL
      - llUnescapeURL
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Region
  scope: support.function.builtin
  type: string
  version: '1.1.0'
llGetRegionTimeDilation:
  description: |-
    Returns the current time dilation as a float between 0.0 (full dilation)
    and 1.0 (no dilation)
  function-id: 227
  related:
    events:
      - timer
      - sensor
    functions:
      - llGetTime
      - llGetAndResetTime
      - llSetTimerEvent
      - llSensorRepeat
      - llGetRegionName
      - llGetSimulatorHostname
      - llGetRegionFPS
    slwiki_categories:
      - LSL_Time
      - LSL_Region
  scope: support.function.builtin
  type: float
  version: '1.1.0'
llGetRegionFPS:
  description: Returns the mean region frames per second
  function-id: 228
  related:
    functions:
      - llGetRegionName
      - llGetSimulatorHostname
      - llGetRegionTimeDilation
    slwiki_categories:
      - LSL_Region
  scope: support.function.builtin
  type: float
  version: '1.1.0'
llParticleSystem:
  description: |-
      Creates a particle system based on rules. An empty list removes the
      particle system. List format is [ rule1, data1, rule2, data2 … rulen,
      datan ].
  function-id: 229
  params:
    - description: a strided list of key-value pairs of particle system rules
      name: rules
      type: list
  related:
    constants:
      - PSYS_PART_BF_DEST_COLOR
      - PSYS_PART_BF_ONE
      - PSYS_PART_BF_ONE_MINUS_DEST_COLOR
      - PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA
      - PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR
      - PSYS_PART_BF_SOURCE_ALPHA
      - PSYS_PART_BF_SOURCE_COLOR
      - PSYS_PART_BF_ZERO
      - PSYS_PART_BLEND_FUNC_DEST
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BOUNCE_MASK
      - PSYS_PART_EMISSIVE_MASK
      - PSYS_PART_END_ALPHA
      - PSYS_PART_END_COLOR
      - PSYS_PART_END_GLOW
      - PSYS_PART_END_SCALE
      - PSYS_PART_FLAGS
      - PSYS_PART_FOLLOW_SRC_MASK
      - PSYS_PART_FOLLOW_VELOCITY_MASK
      - PSYS_PART_INTERP_COLOR_MASK
      - PSYS_PART_INTERP_SCALE_MASK
      - PSYS_PART_MAX_AGE
      - PSYS_PART_RIBBON_MASK
      - PSYS_PART_START_ALPHA
      - PSYS_PART_START_COLOR
      - PSYS_PART_START_GLOW
      - PSYS_PART_START_SCALE
      - PSYS_PART_TARGET_LINEAR_MASK
      - PSYS_PART_TARGET_POS_MASK
      - PSYS_PART_WIND_MASK
      - PSYS_SRC_ACCEL
      - PSYS_SRC_ANGLE_BEGIN
      - PSYS_SRC_ANGLE_END
      - PSYS_SRC_BURST_PART_COUNT
      - PSYS_SRC_BURST_RADIUS
      - PSYS_SRC_BURST_RATE
      - PSYS_SRC_BURST_SPEED_MAX
      - PSYS_SRC_BURST_SPEED_MIN
      - PSYS_SRC_MAX_AGE
      - PSYS_SRC_OMEGA
      - PSYS_SRC_PATTERN
      - PSYS_SRC_PATTERN_ANGLE
      - PSYS_SRC_PATTERN_ANGLE_CONE
      - PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY
      - PSYS_SRC_PATTERN_DROP
      - PSYS_SRC_PATTERN_EXPLODE
      - PSYS_SRC_TARGET_KEY
      - PSYS_SRC_TEXTURE
    functions:
      - llLinkParticleSystem
      - llUnSit
      - llGetLinkNumber
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
    slwiki:
      - Object
      - Prim
      - Link
      - Link#Child_Prim
      - Link#Root_Prim
    slwiki_categories:
      - LSL_Color
      - LSL_Alpha
      - LSL_Effects
      - LSL_Light
      - LSL_Particles
      - LSL_Prim
      - LSL_Stop
      - LSL_Link
      - LSL_Link/Set
  scope: support.function.builtin
  version: '1.1.0'
llGroundRepel:
  description: |-
    Critically damps to height if within height*0.5 of level (either
    above ground level, or above the higher of land and water if water == TRUE)
  function-id: 230
  params:
    - description: distance above the ground
      name: height
      type: float
    - description: boolean, if TRUE then hover above water too
      name: water
      type: integer
    - description: seconds to critically damp in
      name: tau
      type: float
  related:
    constants:
      - STATUS_PHYSICS
    functions:
      - llSetHoverHeight
      - llStopHover
    slwiki_categories:
      - LSL_Damping
      - LSL_Hover
      - LSL_Movement
      - LSL_Physics
  scope: support.function.builtin
  version: '1.1.0'
llGiveInventoryList:
  delay: 3.0
  description: |-
    Gives inventory items to target, creating a new folder to put them in
  function-id: 231
  params:
    - description: group, avatar or prim UUID that is in the same region
      name: target
      type: key
    - description: folder name to use
      name: folder
      type: string
    - description: |-
        a list of items in the inventory of the prim this script is in
      name: inventory
      type: list
  related:
    constants:
      - DEBUG_CHANNEL
    events:
      - changed
    functions:
      - llGiveInventory
    slwiki_categories:
      - LSL_Avatar/As_A_Parameter
      - LSL_Inventory
  scope: support.function.builtin
  version: '1.1.0'
llSetVehicleType:
  description: Sets the vehicle to one of the default types
  function-id: 232
  params:
    - description: desired vehicle type
      name: type
      type: integer
  related:
    constants:
      - VEHICLE_TYPE_NONE
      - VEHICLE_TYPE_SLED
      - VEHICLE_TYPE_CAR
      - VEHICLE_TYPE_BOAT
      - VEHICLE_TYPE_AIRPLANE
      - VEHICLE_TYPE_BALLOON
      - DEBUG_CHANNEL
    events:
      - timer
    slwiki:
      - Linden_Vehicle_Tutorial
    slwiki_categories:
      - LSL_Vehicle
  scope: support.function.builtin
  version: '1.1.0'
llSetVehicleFloatParam:
  description: Sets the specified vehicle float parameter
  function-id: 233
  params:
    - description: VEHICLE_* flag
      name: param
      type: integer
    - description: desired float value
      name: value
      type: float
  related:
    constants:
      - VEHICLE_ANGULAR_DEFLECTION
      - VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_TIMESCALE
      - VEHICLE_BANKING_EFFICIENCY
      - VEHICLE_BANKING_MIX
      - VEHICLE_BANKING_TIMESCALE
      - VEHICLE_BUOYANCY
      - VEHICLE_HOVER_HEIGHT
      - VEHICLE_HOVER_EFFICIENCY
      - VEHICLE_HOVER_TIMESCALE
      - VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
      - VEHICLE_LINEAR_DEFLECTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_TIMESCALE
      - VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
      - VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
    functions:
      - llSetVehicleRotationParam
      - llSetVehicleVectorParam
    slwiki:
      - Linden_Vehicle_Tutorial
  scope: support.function.builtin
  version: '1.1.0'
llSetVehicleVectorParam:
  description: Sets the specified vehicle vector parameter
  function-id: 234
  params:
    - description: VEHICLE_* flag
      name: param
      type: integer
    - description: desired vector value
      name: vec
      type: vector
  related:
    constants:
      - VEHICLE_ANGULAR_FRICTION_TIMESCALE
      - VEHICLE_ANGULAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_FRICTION_TIMESCALE
      - VEHICLE_LINEAR_MOTOR_DIRECTION
      - VEHICLE_LINEAR_MOTOR_OFFSET
    functions:
      - llSetVehicleRotationParam
      - llSetVehicleFloatParam
    slwiki:
      - Linden_Vehicle_Tutorial
    slwiki_categories:
      - LSL_Vehicle
  scope: support.function.builtin
  version: '1.1.0'
llSetVehicleRotationParam:
  description: Sets the specified vehicle rotation parameter
  function-id: 235
  params:
    - description: VEHICLE_* flag
      name: param
      type: integer
    - description: rotation to be applied
      name: rot
      type: rotation
  related:
    constants:
      - VEHICLE_REFERENCE_FRAME
    functions:
      - llSetVehicleFloatParam
      - llSetVehicleVectorParam
    slwiki:
      - Linden_Vehicle_Tutorial
    slwiki_categories:
      - LSL_Vehicle
  scope: support.function.builtin
  version: '1.1.0'
llSetVehicleFlags:
  description: Sets the enabled bits in 'flags'
  function-id: 236
  params:
    - description: 'bit_mask of VEHICLE_FLAG_* flags'
      name: flags
      type: integer.bit_field.bit_mask
  related:
    constants:
      - VEHICLE_FLAG_CAMERA_DECOUPLED
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_NO_DEFLECTION_UP
    functions:
      - llRemoveVehicleFlags
    slwiki:
      - Linden_Vehicle_Flags
      - Mouselook
    slwiki_categories:
      - LSL_Vehicle
      - LSL_Camera
      - LSL_Integer/bit_mask
  scope: support.function.builtin
  version: '1.1.0'
llRemoveVehicleFlags:
  description: Removes the enabled bits in 'flags'
  function-id: 237
  params:
    - description: 'bit_mask of VEHICLE_FLAG_* flags'
      name: flags
      type: integer.bit_field.bit_mask
  related:
    constants:
      - VEHICLE_FLAG_CAMERA_DECOUPLED
      - VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
      - VEHICLE_FLAG_HOVER_TERRAIN_ONLY
      - VEHICLE_FLAG_HOVER_UP_ONLY
      - VEHICLE_FLAG_HOVER_WATER_ONLY
      - VEHICLE_FLAG_LIMIT_MOTOR_UP
      - VEHICLE_FLAG_LIMIT_ROLL_ONLY
      - VEHICLE_FLAG_MOUSELOOK_BANK
      - VEHICLE_FLAG_MOUSELOOK_STEER
      - VEHICLE_FLAG_NO_DEFLECTION_UP
    functions:
      - llSetVehicleFlags
    slwiki:
      - Linden_Vehicle_Tutorial
      - Mouselook
    slwiki_categories:
      - LSL_Vehicle
      - LSL_Camera
      - LSL_Integer/bit_mask
  scope: support.function.builtin
  version: '1.1.0'
llSitTarget:
  description: |-
    Sets the sit location for the prim. If offset is ZERO_VECTOR then
    the sit target is removed.
  function-id: 238
  params:
    - description: |-
        additional position for the sit target in local prim coordinates
      name: offset
      type: vector
    - description: |-
        additional rotation for the sit target relative to the prim rotation
      name: rot
      type: rotation
  related:
    constants:
      - ZERO_VECTOR
      - ZERO_ROTATION
      - NULL_KEY
    events:
      - changed
    functions:
      - llLinkSitTarget
      - llSetSitText
      - llAvatarOnSitTarget
      - llAvatarOnLinkSitTarget
      - llUnSit
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Sit
      - LSL_Vehicle
      - LSL_Prim
      - LSL_Effects
      - LSL_Sit/Teleport
      - LSL_Stop
  scope: support.function.builtin
llAvatarOnSitTarget:
  description: |-
    If an avatar is seated on the sit target, returns the avatar's key,
    otherwise NULL_KEY
  function-id: 239
  related:
    constants:
      - NULL_KEY
      - OBJECT_POS
      - OBJECT_ROT
      - CHANGED_LINK
    events:
      - changed
    functions:
      - llAvatarOnLinkSitTarget
      - llSitTarget
      - llLinkSitTarget
      - llGetLinkKey
      - llGetObjectDetails
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Avatar
      - LSL_Prim
      - LSL_Sit
  scope: support.function.builtin
  type: key
llAddToLandPassList:
  delay: 0.1
  description: |-
    Adds avatar to the land pass list for hours, or indefinitely if hours is 0
  function-id: 240
  params:
    - description: avatar UUID
      name: avatar
      type: key
    - description: range [0.0, 144.0]
      name: hours
      type: float
  related:
    functions:
      - llRemoveFromLandPassList
      - llResetLandPassList
      - llAddToLandBanList
      - llRemoveFromLandBanList
      - llResetLandBanList
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Avatar/As_A_Parameter
      - LSL_Security
      - LSL_Parcel
  scope: support.function.builtin
llSetTouchText:
  description: Displays text rather than the default 'Touch' in the pie menu
  function-id: 241
  params:
    - description: limited to 9 characters
      name: text
      type: string
  related:
    events:
      - touch_start
      - touch
      - touch_end
    functions:
      - llSetSitText
    slwiki_categories:
      - LSL_Pie_Menu
      - LSL_Touch
      - LSL_Text
      - LSL_Prim
      - LSL_Effects
  scope: support.function.builtin
llSetSitText:
  description: Displays text rather than the default 'Sit Here' in the pie menu
  function-id: 242
  params:
    - description: 9 chars
      name: text
      type: string
  related:
    functions:
      - llSitTarget
      - llLinkSitTarget
      - llSetTouchText
    slwiki_categories:
      - LSL_Pie_Menu
      - LSL_Prim
      - LSL_Sit
      - LSL_Text
      - LSL_Parameter/text
  scope: support.function.builtin
llSetCameraEyeOffset:
  description: Sets the camera eye offset for avatars that sit on the object
  function-id: 243
  params:
    - description: |-
        offset relative to the prim's position and expressed in local
        coordinates
      name: offset
      type: vector
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llSetCameraAtOffset
      - llSetLinkCamera
      - llForceMouselook
      - llSetCameraParams
    slwiki:
      - Viewer_coordinate_frames#Local
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Agent
    slwiki_categories:
      - LSL_Camera
      - LSL_Sit
      - LSL_Vehicle
      - LSL_Prim
  scope: support.function.builtin
llSetCameraAtOffset:
  description: |-
    Sets the point the camera is looking at to offset for avatars that
    sit on the object
  function-id: 244
  params:
    - description: |-
        offset relative to the prim's position and expressed in local
        coordinates
      name: offset
      type: vector
  related:
    constants:
      - ZERO_VECTOR
    functions:
      - llSetCameraEyeOffset
      - llSetLinkCamera
      - llForceMouselook
      - llSetCameraParams
    slwiki:
      - Viewer_coordinate_frames#Local
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Agent
    slwiki_categories:
      - LSL_Camera
      - LSL_Sit
      - LSL_Vehicle
      - LSL_Prim
  scope: support.function.builtin
llDumpList2String:
  description: |-
    Returns the list in a single string, using separator between the
    entries
  function-id: 245
  params:
    - description: source list
      name: src
      type: list
    - name: separator
      type: string
  related:
    functions:
      - llParseString2List
      - llParseStringKeepNulls
      - llList2CSV
      - llCSV2List
    slwiki:
      - Typecast
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
  scope: support.function.builtin
  type: string
  version: '1.2.0'
llScriptDanger:
  description: |-
    Returns TRUE if pos is over public land, sandbox land, land that
    doesn't allow everyone to edit and build, or land that doesn't allow outside
    scripts
  function-id: 246
  params:
    - description: position in region coordinates
      name: pos
      type: vector
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    functions:
      - llGetParcelFlags
    slwiki:
      - Viewer_coordinate_frames#Region
      - Boolean
    slwiki_categories:
      - LSL_Parcel
      - LSL_Script
      - LSL_Integer/boolean
      - LSL_Functions/Returns_a_integer/boolean
  scope: support.function.builtin
  type: integer.boolean
  version: '1.2.0'
llDialog:
  delay: 1.0
  description: |-
      Shows a dialog box on the avatar's screen with a message and up to 12
      buttons. If a button is pressed, the avatar says the text of the button
      label on chat_channel.
  function-id: 247
  params:
    - description: avatar UUID that is in the same region
      name: avatar
      type: key
    - description: message to be displayed in the dialog box
      name: message
      type: string
    - description: button labels
      name: buttons
      type: list
    - description: output chat channel, any integer value
      name: chat_channel
      type: integer
  related:
    constants:
      - PUBLIC_CHANNEL
      - DEBUG_CHANNEL
    events:
      - listen
    functions:
      - llListen
      - llTextBox
      - llRegionSay
      - llWhisper
      - llSay
      - llShout
      - llInstantMessage
      - llOwnerSay
    slwiki:
      - LlDialog#LimitsUUID
      - Region
    slwiki_categories:
      - LSL_Chat
      - LSL_Avatar/As_A_Parameter
      - LSL_Communications
      - LSL_Chat
      - LSL_Dialog
  scope: support.function.builtin
  snippets:
    - |-
      list order_buttons(list buttons)
      {
          return llList2List(buttons, -3, -1) + llList2List(buttons, -6, -4)
               + llList2List(buttons, -9, -7) + llList2List(buttons, -12, -10);
      }
  version: '1.2.0'
llVolumeDetect:
  description: |-
      If detect = TRUE, object works much like Phantom, but triggers
      collision_start and collision_end events when other objects start and stop
      interpenetrating. Must be applied to the root prim.
  function-id: 248
  params:
    - name: detect
      type: integer
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    events:
      - collision_start
      - collision
      - collision_end
      - land_collision_start
      - land_collision
      - land_collision_end
    functions:
      - llPassCollisions
      - llDetectedLinkNumber
    slwiki_categories:
      - LSL_Integer/boolean
      - LSL_Collision
      - LSL_Physics
      - LSL_Object
      - LSL_Phantom
  scope: support.function.builtin
  version: '1.2.0'
llResetOtherScript:
  description: Resets script name
  function-id: 249
  params:
    - description: a script in the invenotry of the prim this script is in
      name: name
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
    functions:
      - llResetScript
      - llGetScriptState
      - llSetScriptState
    slwiki_categories:
      - LSL_Inventory
      - LSL_Script
      - LSL_Stop
  scope: support.function.builtin
llGetScriptState:
  description: Returns TRUE if the script name is running
  function-id: 250
  params:
    - description: a script in the inventory of the prim this script is in
      name: name
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - 'TRUE'
      - 'FALSE'
    functions:
      - llSetScriptState
      - llResetScript
      - llResetOtherScript
    slwiki_categories:
      - LSL_Inventory
      - LSL_Script
      - LSL_Functions/Returns_a_integer/boolean
  scope: support.function.builtin
  type: integer.boolean
llSetRemoteScriptAccessPin:
  delay: 0.2
  description: |-
    If pin is set to a non-zero number, allows a prim to have scripts
    remotely loaded via llRemoteLoadScriptPin when it passes in the correct pin.
    Otherwise, llRemoteLoadScriptPin is ignored.
  function-id: 252
  params:
    - description: zero disables, non-zero enables
      name: pin
      type: integer
  related:
    functions:
      - llRemoteLoadScriptPin
    slwiki_categories:
      - LSL_Script
  scope: support.function.builtin
llRemoteLoadScriptPin:
  delay: 3.0
  description: |-
      Copies script name onto target, if the owner of this scripted object can
      modify target and is in the same region, and the matching pin is used.
      If running == TRUE, starts the script with start_param.
  function-id: 253
  params:
    - description: prim UUID that is in the same region
      name: target
      type: key
    - description: a script in the inventory of the prim this script is in
      name: name
      type: string
    - description: must match pin set by llSetRemoteScriptAccessPin
      name: pin
      type: integer
    - description: |-
        boolean, if TRUE the script is set as running, if FALSE the script
        is not set as running
      name: running
      type: integer
    - description: value returned by llGetStartParameter in the target script
      name: start_param
      type: integer
  related:
    constants:
      - DEBUG_CHANNEL
    events:
      - state_entry
    functions:
      - llSetRenoteScriptAccessPin
      - llGetStartParameter
      - llGetKey
      - llSetScriptState
      - llResetOtherScript
    slwiki:
      - Prim
      - UUID
      - Region
      - Boolean
    slwiki_categories:
      - LSL_Attachment
      - LSL_Inventory
      - LSL_Script
  scope: support.function.builtin
llOpenRemoteDataChannel:
  delay: 1.0
  description: |-
    Creates a channel to listen for XML-RPC calls, and will trigger a
    remote_data event with channel id once it is available
  function-id: 254
  related:
    events:
      - remote_data
    functions:
      - llCloseRemoteDataChannel
      - llSendRemoteData
      - llRemoteDataReply
    slwiki:
      - LSL_HTTP_server
      - HTTP_Polling
    slwiki_categories:
      - LSL_XML-RPC
  scope: support.function.builtin
llSendRemoteData:
  delay: 3.0
  description: |-
      Sends an XML-RPC request to dest through channel with payload of channel
      (in a string), integer idata and string sdata. Returns a key that is the
      message_id for the resulting remote_data events.
  function-id: 255
  params:
    - name: channel
      type: key
    - name: dest
      type: string
    - name: idata
      type: integer
    - name: sdata
      type: string
  related:
    events:
      - remote_data
    functions:
      - llRemoteDataReply
      - llOpenRemoteDataChannel
      - llCloseRemoteDataChannel
    slwiki:
      - LSL_HTTP_server
      - HTTP_Polling
    slwiki_categories:
      - LSL_XML-RPC
      - LSL_Key/channel
  scope: support.function.builtin
  type: key
llRemoteDataReply:
  delay: 3.0
  description: |-
    Sends an XML-RPC reply to message_id on channel with payload of string
    sdata and integer idata
  function-id: 256
  params:
    - name: channel
      type: key
    - name: message_id
      type: key
    - name: sdata
      type: string
    - name: idata
      type: integer
  related:
    events:
      - remote_data
    functions:
      - llSendRemoteData
      - llOpenRemoteDataChannel
      - llCloseRemoteDataChannel
    slwiki:
      - LSL_HTTP_server
      - HTTP_Polling
    slwiki_categories:
      - LSL_XML-RPC
      - LSL_Key/channel
  scope: support.function.builtin
llCloseRemoteDataChannel:
  delay: 1.0
  description: Closes XML-RPC channel
  function-id: 257
  params:
    - name: channel
      type: key
  related:
    events:
      - remote_data
    functions:
      - llOpenRemoteDataChannel
      - llSendRemoteData
      - llRemoteDataReply
    slwiki:
      - LSL_HTTP_server
      - HTTP_Polling
    slwiki_categories:
      - LSL_XML-RPC
      - LSL_Key/channel
  scope: support.function.builtin
llMD5String:
  description: |-
    Returns a string of 32 hex characters that is a RSA Data Security,
    Inc. MD5 Message-Digest Algorithm of src with nonce
  function-id: 258
  params:
    - name: src
      type: string
    - name: nonce
      type: integer
  related:
    functions:
      - llSHA1String
    slwiki_categories:
      - LSL_Hash
      - LSL_Encoding
      - LSL_String
      - LSL_Encryption
    wikipedia:
        en:
          - MD5
          - Salt_(cryptography)
  scope: support.function.builtin
  type: string
  version: '1.3.0'
llSetPrimitiveParams:
  delay: 0.2
  description: Sets the prim's parameters according to rules
  function-id: 259
  params:
    - name: rules
      type: list
  related:
    constants:
      - PRIM_ALLOW_UNSIT
      - PRIM_ALPHA_MODE
      - PRIM_BUMP_SHINY
      - PRIM_COLOR
      - PRIM_DESC
      - PRIM_FLEXIBLE
      - PRIM_FULLBRIGHT
      - PRIM_GLOW
      - PRIM_LINK_TARGET
      - PRIM_MATERIAL
      - PRIM_NAME
      - PRIM_NORMAL
      - PRIM_OMEGA
      - PRIM_PHANTOM
      - PRIM_PHYSICS
      - PRIM_PHYSICS_SHAPE_TYPE
      - PRIM_POINT_LIGHT
      - PRIM_POSITION
      - PRIM_POS_LOCAL
      - PRIM_ROTATION
      - PRIM_ROT_LOCAL
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SCULPT_TYPE_MASK
      - PRIM_SIT_TARGET
      - PRIM_SIZE
      - PRIM_SLICE
      - PRIM_SPECULAR
      - PRIM_TEMP_ON_REZ
      - PRIM_TEXGEN
      - PRIM_TEXT
      - PRIM_TEXTURE
      - PRIM_TYPE
      - DEBUG_CHANNEL
      - NULL_KEY
    functions:
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llGetLinkNumber
      - llGetLinkNumberOfSides
      - llSetAlpha
      - llSetTexture
      - llSetColor
      - llSetScale
      - llSetStatus
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llVecDist
      - llAngleBetween
    slwiki:
      - Mesh
      - Object
      - Prim
      - Link
      - UUID
      - Limits
      - Viewer_coordinate_frames
    slwiki_categories:
      - LSL_Color
      - LSL_Alpha
      - LSL_Face
      - LSL_Face/Set
      - LSL_Light
      - LSL_Link
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Link
      - LSL_Movement
      - LSL_Status
      - LSL_Texture
      - LSL_Object
      - LSL_List/instructions
      - LSL_Permissions/Asset
  scope: support.function.builtin
  version: '1.3.0'
llStringToBase64:
  description: Converts a string to the Base64 representation of the string
  function-id: 260
  params:
    - name: str
      type: string
  related:
    functions:
      - llBase64ToString
      - llBase64ToInteger
      - llIntegerToBase64
      - llXorBase64
    slwiki_categories:
      - LSL_Base64
      - LSL_String
      - LSL_Encoding
  scope: support.function.builtin
  type: string
  version: '1.3.0'
llBase64ToString:
  description: |-
      Converts a Base64 string to a conventional string.
      If the conversion creates any unprintable characters, they are converted
      to spaces.
  function-id: 261
  params:
    - description: base64 string
      name: str
      type: string
  related:
    functions:
      - llStringToBase64
      - llBase64ToInteger
      - llIntegerToBas64
      - llXorBase64
    slwiki_categories:
      - LSL_Base64
      - LSL_String
  scope: support.function.builtin
  type: string
  version: '1.3.0'
llLog10:
  description: Returns the base 10 logarithm of val. Returns zero if val <= 0.
  function-id: 264
  params:
    - description: should be greater than zero
      name: val
      type: float
  related:
    functions:
      - llLog
      - llPow
      - llSqrt
    slwiki_categories:
      - LSL_Math
    wikipedia:
        en:
          - Logarithm
          - Natural_logarithm
  scope: support.function.builtin
  type: float
llLog:
  description: Returns the natural logarithm of val. Returns zero if val <= 0.
  function-id: 265
  params:
    - description: should be greater than zero
      name: val
      type: float
  related:
    functions:
      - llLog10
      - llPow
      - llSqrt
    slwiki_categories:
      - LSL_Math
    wikipedia:
        en:
          - Natural_logarithm
          - Logarithm
  scope: support.function.builtin
  type: float
llGetAnimationList:
  description: |-
    Returns a list of keys of playing animations for avatar described by id
  function-id: 266
  params:
    - description: avatar UUID that is in the same region
      name: id
      type: key
  related:
    constants:
      - NULL_KEY
    functions:
      - llGetAnimation
      - llGetAgentInfo
      - llStartAnimation
      - llStopAnimation
    slwiki:
      - Internal_Animations#Viewer-generated_motions
      - Internal_Animations#User-playable_animations
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Animation
  scope: support.function.builtin
  type: list
  version: '1.4.0'
llSetParcelMusicURL:
  delay: 2.0
  description: |-
    Sets the streaming audio URL for the parcel which the object is on
  function-id: 267
  params:
    - name: url
      type: string
  related:
    functions:
      - llGetParcelMusicURL
    slwiki:
      - Streaming_music
    slwiki_categories:
      - LSL_Parcel
      - LSL_Sound
      - LSL_Media
  scope: support.function.builtin
llGetRootPosition:
  description: |-
    Returns the position (in region coordinates) of the root prim of
    the object which the script is attached to
  function-id: 268
  related:
    constants:
      - PRIM_POS
      - PRIM_POS_LOCAL
      - OBJECT_POS
      - OBJECT_ROOT
    functions:
      - llGetRootRotation
      - llGetLocalPos
      - llGetPos
      - llSetPos
      - llDetectedPos
      - llGetObjectDetails
    slwiki:
      - Position
      - Viewer_coordinate_frames#Region
      - Object
    slwiki_categories:
      - LSL_Movement
      - LSL_Prim
  scope: support.function.builtin
  type: vector
  version: '1.5.0'
llGetRootRotation:
  description: |-
    Returns the rotation (relative to the region) of the root prim of
    the object which the script is attached to
  function-id: 269
  related:
    constants:
      - PRIM_ROT
      - PRIM_ROT_LOCAL
      - DEG_TO_RAD
      - RAD_TO_DEG
      - OBJECT_ROT
      - OBJECT_ROOT
    functions:
      - llGetRot
      - llSetRot
      - llGetLocalRot
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llDetectedRot
      - llGetObjectDetails
    slwiki:
      - Rotation
      - Rotation#Single_or_Root_Prims_vs_Linked_Prims_vs_Attachments
    slwiki_categories:
      - LSL_Movement
      - LSL_Rotation
      - LSL_Prim
  scope: support.function.builtin
  type: rotation
  version: '1.5.0'
llGetObjectDesc:
  description: Returns the description of the prim the script is attached to
  function-id: 270
  related:
    constants:
      - PRIM_DESC
      - OBJECT_DESC
    functions:
      - llSetObjectDesc
      - llGetObjectName
      - llSetObjectName
      - llGetObjectDetails
    slwiki:
      - Limits
      - Bytes
      - Prim_Attribute_Overloading
    slwiki_categories:
      - LSL_Prim
      - LSL_Description
  scope: support.function.builtin
  snippets:
    - llList2String(llGetLinkPrimitiveParams(LINK_ROOT, [PRIM_DESC]), 0); // to get
      the root desc
  type: string
  version: '1.5.0'
llSetObjectDesc:
  description: Sets the prim's description to desc
  function-id: 271
  params:
    - name: desc
      type: string
  related:
    constants:
      - PRIM_DESC
      - OBJECT_DESC
    functions:
      - llGetObjectDesc
      - llGetObjectName
      - llSetObjectName
      - llGetObjectDetails
    slwiki:
      - Limits
      - Bytes
      - Prim_Attribute_Overloading
    slwiki_categories:
      - LSL_Prim
      - LSL_Description
  scope: support.function.builtin
  snippets:
    - |-
      llSetLinkPrimitiveParamsFast(LINK_ROOT, [
          PRIM_DESC, string description]); // to set the root desc
  version: '1.5.0'
llGetCreator:
  description: Returns a key for the creator of the prim
  function-id: 272
  related:
    constants:
      - OBJECT_CREATOR
    functions:
      - llGetInventoryCreator
      - llGetObjectDetails
    slwiki_categories:
      - LSL_Creator
      - LSL_Prim
      - LSL_Key
  scope: support.function.builtin
  type: key
  version: '1.5.0'
llGetTimestamp:
  description: |-
    Returns the timestamp in the UTC time zone in the format:
    YYYY-MM-DDThh:mm:ss.ff..fZ
  function-id: 273
  related:
    functions:
      - llGetDate
      - llGetUnixTime
      - llGetTime
    slwiki:
      - Code_Racer
      - Efficiency_Tester
      - LSL_Script_Efficiency
    slwiki_categories:
      - LSL_Time
    wikipedia:
        en:
          - ISO_8601
  scope: support.function.builtin
  type: string
  version: '1.5.0'
llSetLinkAlpha:
  description: |-
    If a prim exists in the link chain at linknumber, sets face to alpha
  function-id: 274
  params:
    - description: |-
        link number (0 unlinked, 1 root, >1 child prims and seated avataras)
        or a LINK_* flag
      name: linknumber
      type: integer.link
    - description: in range [0.0, 1.0] from transparent to opaque
      name: alpha
      type: float
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - PRIM_ALPHA
      - CHANGED_COLOR
    events:
      - changed
    functions:
      - llGetAlpha
      - llSetAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llSetLinkTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetLinkNumber
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
    slwiki:
      - Link
      - Prim
    slwiki_categories:
      - LSL_Alpha
      - LSL_Face
      - LSL_Face/Set
      - LSL_Link
      - LSL_Link/Set
  scope: support.function.builtin
  version: '1.5.0'
llGetNumberOfPrims:
  description: |-
    Returns the number of prims in a link set the script is attached to
  function-id: 275
  related:
    functions:
      - llGetObjectPrimCount
      - llGetKey
      - llGetLinkNumber
    slwiki_categories:
      - LSL_Link
      - LSL_Object
  scope: support.function.builtin
  type: integer
  version: '1.5.0'
llGetNumberOfNotecardLines:
  delay: 0.1
  description: |-
    Returns number of lines in notecard name via the dataserver event
    (cast return value to integer)
  function-id: 276
  params:
    - name: name
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - NULL_KEY
      - INVENTORY_NOTECARD
    events:
      - dataserver
    functions:
      - llGetInventoryKey
      - llGetNotecardLine
      - llStringTrim
      - llGetSubString
      - llSubStringIndex
    slwiki:
      - Key
      - UUID
    slwiki_categories:
      - LSL_Key/handle
      - LSL_Inventory
      - LSL_Permissions/Asset
      - LSL_Notecard
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '1.5.0'
llGetBoundingBox:
  description: |-
    Returns the bounding box around the object (including any linked
    prims) relative to its root prim, in a list in the format [ (vector)
    min_corner, (vector) max_corner ]
  function-id: 277
  params:
    - description: group, avatar or prim UUID that is in the same region
      name: object
      type: key
  related:
    constants:
      - PRIM_SIZE
    functions:
      - llGetAgentSize
    slwiki:
      - Viewer_coordinate_frames#Local
      - Prim
      - UUID
    slwiki_categories:
      - LSL_Group
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Prim
      - LSL_Physics
  scope: support.function.builtin
  type: list
llGetGeometricCenter:
  description: |-
    Returns the geometric center of the linked set the script is attached to
  function-id: 278
  related:
    functions:
      - llGetCenterOfMass
      - llRezObject
      - llGetRootPosition
    slwiki:
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Physics
  scope: support.function.builtin
  type: vector
llGetPrimitiveParams:
  delay: 0.2
  description: Returns the primitive parameters specified in the params list
  function-id: 279
  params:
    - name: params
      type: list
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
      - PRIM_ALLOW_UNSIT
      - PRIM_ALPHA_MODE
      - PRIM_BUMP_SHINY
      - PRIM_COLOR
      - PRIM_DESC
      - PRIM_FLEXIBLE
      - PRIM_FULLBRIGHT
      - PRIM_GLOW
      - PRIM_LINK_TARGET
      - PRIM_MATERIAL
      - PRIM_NAME
      - PRIM_NORMAL
      - PRIM_OMEGA
      - PRIM_PHANTOM
      - PRIM_PHYSICS
      - PRIM_PHYSICS_SHAPE_TYPE
      - PRIM_POINT_LIGHT
      - PRIM_POSITION
      - PRIM_POS_LOCAL
      - PRIM_ROTATION
      - PRIM_ROT_LOCAL
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SCULPT_TYPE_MASK
      - PRIM_SIT_TARGET
      - PRIM_SIZE
      - PRIM_SLICE
      - PRIM_SPECULAR
      - PRIM_TEMP_ON_REZ
      - PRIM_TEXGEN
      - PRIM_TEXT
      - PRIM_TEXTURE
      - PRIM_TYPE
      - DEBUG_CHANNEL
      - NULL_KEY
    functions:
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetLinkPrimitiveParams
      - llGetLinkNumber
      - llGetLinkNumberOfSides
      - llSetAlpha
      - llSetTexture
      - llSetColor
      - llSetScale
      - llSetStatus
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llVecDist
      - llAngleBetween
    slwiki:
      - Mesh
      - Object
      - Prim
      - Link
      - UUID
      - Limits
      - Viewer_coordinate_frames
    slwiki_categories:
      - LSL_Color
      - LSL_Alpha
      - LSL_Face
      - LSL_Face/Get
      - LSL_Light
      - LSL_Link
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Link
      - LSL_Movement
      - LSL_Status
      - LSL_Texture
      - LSL_Object
      - LSL_List/instructions
      - LSL_Permissions/Asset
  scope: support.function.builtin
  type: list
  version: '1.5.0'
llIntegerToBase64:
  description: Returns a string that is a Base64 big endian encode of number
  function-id: 280
  params:
    - description: any valid integer value
      name: number
      type: integer
  related:
    functions:
      - llBase64ToInteger
      - llBase64ToString
      - llStringToBase64
      - llXorBase64
    slwiki:
      - Limits
      - Integer
    slwiki_categories:
      - LSL_Base64
      - LSL_Encoding
  scope: support.function.builtin
  type: string
  version: '1.5.0'
llBase64ToInteger:
  description: |-
    Returns an integer that is the str Base64 decoded as a big endian integer
  function-id: 281
  params:
    - description: Base64 string
      name: str
      type: string
  related:
    functions:
      - llIntegerToBase64
      - llBase64ToString
      - llStringToBase64
      - llXorBase64
    slwiki:
      - Limits
      - Integer
    slwiki_categories:
      - LSL_Base64
      - LSL_Encoding
  scope: support.function.builtin
  type: integer
  version: '1.5.0'
llGetGMTclock:
  description: Returns the time in seconds since midnight GMT
  function-id: 282
  related:
    functions:
      - llGetWallclock
    slwiki_categories:
      - LSL_Time
  scope: support.function.builtin
  type: float
  version: '1.5.0'
llGetSimulatorHostname:
  delay: 10.0
  description: |-
    Returns the hostname of the machine which the script is running on
    (same as string in viewer Help dialog)
  function-id: 283
  related:
    constants:
      - CHANGED_REGION
      - CHANGED_REGION_START
    functions:
      - llGetRegionFPS
      - llGetRegionTimeDilation
      - llGetEnv
    slwiki:
      - Simulator_IP_Addresses
    slwiki_categories:
      - LSL_Region
  scope: support.function.builtin
  type: string
  usage:
    - llGetEnv("simulator_hostname"); // use this instead to skip the delay
llSetLocalRot:
  delay: 0.2
  description: Sets the rotation of a child prim relative to the root prim
  function-id: 284
  params:
    - name: rot
      type: rotation
  related:
    constants:
      - DEG_TO_RAD
      - RAD_TO_DEG
      - PRIM_ROT_LOCAL
      - PRIM_ROT
    functions:
      - llEuler2Rot
      - llRot2Euler
      - llGetRot
      - llGetLocalRot
      - llSetRot
      - llGetRootRotation
      - llGetPrimitiveParams
      - llSetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki_categories:
      - LSL_Movement
      - LSL_Rotation
  scope: support.function.builtin
llParseStringKeepNulls:
  description: |-
    Breaks src into a list, discarding separators, keeping spacers, keeping
    any null values generated (separators and spacers must be lists of strings,
    maximum of 8 each)
  function-id: 285
  params:
    - description: source string
      name: src
      type: string
    - description: separators to be discarded
      name: separators
      type: list
    - description: spacers to be kept
      name: spacers
      type: list
  related:
    functions:
      - llParseString2List
      - llList2String
      - llDumpList2String
      - llList2CSV
      - llCSV2List
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
  scope: support.function.builtin
  type: list
llRezAtRoot:
  delay: 0.1
  description: |-
    Instantiates owner's inventory object rotated to rot with its root
    at pos, moving at vel, using param as the start parameter
  energy: 200
  function-id: 286
  params:
    - description: an object in the inventory of the prim this script is in
      name: inventory
      type: string
    - description: position in region coordinates to place the object
      name: pos
      type: vector
    - description: initial velocity
      name: vel
      type: vector
    - description: initial rotation
      name: rot
      type: rotation
    - description: |-
        on_rez event parameter and value returned by llGetStartParameter
        in the rezzed object (or by each of the items in a coalesced object)
      name: param
      type: integer
  related:
    constants:
      - DEBUG_CHANNEL
      - PRIM_TEMP_ON_REZ
    events:
      - object_rez
    functions:
      - llRezObject
      - llGetStartParameter
      - llGodLikeRezObject
    slwiki_categories:
      - LSL_Rez
      - LSL_Object
      - LSL_Inventory
  scope: support.function.builtin
llGetObjectPermMask:
  description: |-
    Returns the requested permission mask for the root object the task
    is attached to
  function-id: 287
  params:
    - description: 'a MASK_* flag'
      name: category
      type: integer
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
    functions:
      - llGetInventoryPermMask
    slwiki:
      - Hex
    slwiki_categories:
      - LSL_Permissions/Asset
      - LSL_Object
      - LSL_Integer/bit_field
      - LSL_Functions/Returns_a_integer/bit_field
  scope: support.function.builtin
  type: integer.bit_field
  usage:
    - |-
      if ((permsYouHave & permsYouWant) == permsYouWant) continue();
      else print_error();
llGetInventoryPermMask:
  description: Returns the requested permission mask for the inventory item
  function-id: 289
  params:
    - description: 'an item in the inventory of the prim'
      name: item
      type: string
    - description: 'a MASK_* flag'
      name: category
      type: integer
  related:
    constants:
      - MASK_BASE
      - MASK_OWNER
      - MASK_GROUP
      - MASK_EVERYONE
      - MASK_NEXT
      - PERM_ALL
      - PERM_COPY
      - PERM_MODIFY
      - PERM_MOVE
      - PERM_TRANSFER
      - DEBUG_CHANNEL
    functions:
      - llGetObjectPermMask
      - llGetInventoryName
      - llGetInventoryType
      - llGetInventoryNumber
      - llGetInventoryKey
      - llGetInventoryCreator
    slwiki:
      - Hex
    slwiki_categories:
      - LSL_Permissions/Asset
      - LSL_Object
      - LSL_Inventory
      - LSL_Integer
      - LSL_Integer/bit_field
      - LSL_Functions/Returns_a_integer/bit_field
  scope: support.function.builtin
  type: integer.bit_field
  usage:
    - |-
      if ((permsYouHave & permsYouWant) == permsYouWant) continue();
      else print_error();
llGetInventoryCreator:
  description: Returns a key for the creator of the inventory item
  function-id: 291
  params:
    - name: item
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - NULL_KEY
    functions:
      - llGetInventoryName
      - llGetInventoryType
      - llGetInventoryNumber
      - llGetInventoryPermMask
      - llGetInventoryKey
    slwiki_categories:
      - LSL_Inventory
  scope: support.function.builtin
  type: key
llOwnerSay:
  description: Says msg to owner only. (Owner must be in the same region.)
  function-id: 292
  params:
    - name: msg
      type: string
  related:
    functions:
      - llRegionSay
      - llRegionSayTo
      - llWhisper
      - llSay
      - llShout
      - llInstantMessage
    slwiki:
      - Region
      - Deed
    slwiki_categories:
      - LSL_Communications
  scope: support.function.builtin
llRequestSimulatorData:
  delay: 1.0
  description: |-
    Requests data about simulator. When data is available the dataserver
    event will be raised.
  function-id: 293
  params:
    - name: simulator
      type: string
    - name: data
      type: integer
  related:
    constants:
      - DATA_SIM_POS
      - DATA_SIM_STATUS
      - DATA_SIM_RATING
    events:
      - dataserver
    functions:
      - llGetEnv
      - llGetParcelDetails
      - llGetParcelFlags
      - llGetParcelMaxPrims
      - llGetParcelPrimCount
    slwiki:
      - Key
      - Viewer_coordinate_frames#Global
    slwiki_categories:
      - LSL_Key/handle
      - LSL_Dataserver
      - LSL_Region
  scope: support.function.builtin
  type: key
  usage:
    - llGetEnv("region_product_name"); // to get the region max prims
  version: '1.6.0'
llForceMouselook:
  description: If mouselook is TRUE, any avatar that sits upon the prim will be
      forced into mouselook mode
  function-id: 294
  params:
    - default: 'FALSE'
      description: |-
        boolean, if TRUE when an avatar sits on the prim, the avatar will be
        forced into mouselook mode, if FALSE (default) the avatar will keep
        their current camera mode
      name: mouselook
      type: integer
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    functions:
      - llAvatarOnSitTarget
      - llAvatarOnLinkSitTarget
      - llSitTarget
      - llLinkSitTarget
      - llGetAgentInfo
      - llGetCameraRot
      - llSetCameraAtOffset
      - llSetCameraEyeOffset
    slwiki:
      - Mouselook
      - Boolean
    slwiki_categories:
      - LSL_Sit
      - LSL_Vehicle
      - LSL_Camera
      - LSL_Prim
      - LSL_Mouselook
      - LSL_Status
  scope: support.function.builtin
  version: '1.6.0'
llGetObjectMass:
  description: Returns the mass of the avatar or object in the region
  function-id: 295
  params:
    - description: group, avatar or object UUID that is in the same region
      name: id
      type: key
  related:
    functions:
      - llGetMass
    slwiki:
      - Object
      - UUID
      - Region
    slwiki_categories:
      - LSL_Group
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Object
      - LSL_Physics
    wikipedia:
        en:
          - Mass
  scope: support.function.builtin
  type: float
  version: '1.6.0'
llListReplaceList:
  description: |-
    Returns a list that is dest with start through end removed and src
    inserted at start
  function-id: 296
  params:
    - description: destination
      name: dest
      type: list
    - description: source
      name: src
      type: list
    - description: start index, supports negative indexes
      name: start
      type: integer
    - description: end index, supports negative indexes
      name: end
      type: integer
  related:
    functions:
      - llDeleteSubList
      - llListInsertList
      - llList2List
    slwiki:
      - LlListReplaceList#exclusion_range
      - LSO
      - Mono
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
  scope: support.function.builtin
  type: list
  version: '1.6.0'
llLoadURL:
  delay: 0.1
  description: |-
      Shows a dialog to avatar offering to load the web page at url with a
      message. If user clicks yes, launches the page in their web browser.
  function-id: 297
  params:
    - description: avatar UUID that is in the same region
      name: avatar
      type: key
    - description: message to be displayed in the dialog box
      name: message
      type: string
    - description: must start with http or https, should be RFC-1738 compliant with
          proper escapes
      name: url
      type: string
  related:
    slwiki:
      - Limits
      - UUID
      - Region
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Communications
      - LSL_Dialog
  scope: support.function.builtin
  version: '1.6.0'
llParcelMediaCommandList:
  delay: 2.0
  description: |-
    Sends a list of commands, some with arguments, to a parcel to control
    the playback of movies and other media
  function-id: 298
  params:
    - description: |-
        a list of integer PARCEL_MEDIA_COMMAND_* flags and their parameters
      name: command
      type: list
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_STOP
      - PARCEL_MEDIA_COMMAND_PAUSE
      - PARCEL_MEDIA_COMMAND_PLAY
      - PARCEL_MEDIA_COMMAND_LOOP
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TIME
      - PARCEL_MEDIA_COMMAND_AGENT
      - PARCEL_MEDIA_COMMAND_UNLOAD
      - PARCEL_MEDIA_COMMAND_AUTO_ALIGN
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaQuery
      - llSetTextureAnim
      - llSetTexture
    slwiki:
      - Integer
    slwiki_categories:
      - LSL_Video
      - LSL_Media
      - LSL_Parcel
  scope: support.function.builtin
llParcelMediaQuery:
  delay: 2.0
  description: |-
    Returns a list containing results of the sent query, results are
    in the same order as requested
  function-id: 299
  params:
    - name: query
      type: list
  related:
    constants:
      - PARCEL_MEDIA_COMMAND_TEXTURE
      - PARCEL_MEDIA_COMMAND_URL
      - PARCEL_MEDIA_COMMAND_TYPE
      - PARCEL_MEDIA_COMMAND_SIZE
      - PARCEL_MEDIA_COMMAND_DESC
      - PARCEL_MEDIA_COMMAND_LOOP_SET
    functions:
      - llParcelMediaCommandList
    slwiki_categories:
      - LSL_Media
      - LSL_Video
      - LSL_Parcel
  scope: support.function.builtin
  type: list
llModPow:
  delay: 1.0
  description: |-
      Returns a raised to the b power, mod c. ( (a**b)%c )
      b is capped at 0xFFFF (16 bits).
  function-id: 300
  params:
    - name: a
      type: integer
    - name: b
      type: integer
    - name: c
      type: integer
  related:
    functions:
      - llAbs
      - llCeil
      - llFabs
      - llFloor
      - llFrand
      - llListStatistics
      - llLog
      - llLog10
      - llPow
      - llRound
      - llSqrt
    slwiki:
      - Integer
    slwiki_categories:
      - LSL_Math
  scope: support.function.builtin
  type: integer
llGetInventoryType:
  description: Returns the type of the inventory item name
  function-id: 301
  params:
    - description: name of an inventory item
      name: name
      type: string
  related:
    constants:
      - INVENTORY_NONE
      - INVENTORY_ALL
      - INVENTORY_TEXTURE
      - INVENTORY_SOUND
      - INVENTORY_LANDMARK
      - INVENTORY_CLOTHING
      - INVENTORY_OBJECT
      - INVENTORY_NOTECARD
      - INVENTORY_SCRIPT
      - INVENTORY_BODYPART
      - INVENTORY_ANIMATION
      - INVENTORY_GESTURE
    functions:
      - llGetInventoryName
      - llGetInventoryNumber
      - llGetInventoryCreator
      - llGetInventoryPermMask
      - llGetInventoryKey
    slwiki_categories:
      - LSL_Inventory
  scope: support.function.builtin
  type: integer
  version: '1.7.0'
llSetPayPrice:
  description: |-
    Sets the default amount on the dialog that appears when someone chooses
    to pay this prim
  function-id: 302
  params:
    - description: PAY_* constant or positive integer value
      name: price
      type: integer
    - description: four PAY_* constants and/or positive integer values
      name: quick_pay_buttons
      type: list
  related:
    constants:
      - PAY_HIDE
      - PAY_DEFAULT
    events:
      - money
    functions:
      - llGiveMoney
      - llTransferLindenDollars
    slwiki_categories:
      - LSL_Money
      - LSL_Prim
      - LSL_Dialog
  scope: support.function.builtin
  version: '1.7.0'
llGetCameraPos:
  description: |-
    Returns the current camera position for the agent the task has permissions
    for
  function-id: 303
  related:
    constants:
      - PERMISSION_TRACK_CAMERA
      - DEBUG_CHANNEL
    events:
      - run_time_permissions
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llGetCameraRot
      - llSetCameraParams
      - llSetCameraAtOffset
      - llSetCameraEyeOffset
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Camera
  required_permissions:
    - PERMISSION_TRACK_CAMERA
  scope: support.function.builtin
  type: vector
llGetCameraRot:
  description: |-
    Returns the current camera orientation for the agent the task has
    permissions for
  function-id: 304
  related:
    constants:
      - PERMISSION_TRACK_CAMERA
    events:
      - run_time_permissions
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llGetCameraPos
      - llSetCameraParams
      - llSetCameraAtOffset
      - llSetCameraEyeOffset
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Camera
  required_permissions:
    - PERMISSION_TRACK_CAMERA
  scope: support.function.builtin
  type: rotation
llEscapeURL:
  description: |-
    Returns an escaped/encoded version of url, replacing spaces with
    %20 etc.
  function-id: 307
  params:
    - description: a (preferably valid and unescaped ULR) string
      name: url
      type: string
  related:
    functions:
      - llUnescapeURL
    slwiki:
      - UTF-8
    slwiki_categories:
      - LSL_Base64
      - LSL_Encoding
      - LSL_Encoding/URL
      - LSL_String
    wikipedia:
        en:
          - Hexadecimal
          - UTF-8
          - Byte
  scope: support.function.builtin
  type: string
  version: '1.7.0'
llUnescapeURL:
  description: |-
    Returns an unescaped/ unencoded version of url, replacing %20 with
    spaces etc.
  function-id: 308
  params:
    - description: a (preferably valid and escaped URL) string
      name: url
      type: string
  related:
    functions:
      - llEscapeURL
    slwiki:
      - UTF-8
    slwiki_categories:
      - LSL_Base64
      - LSL_Encoding
      - LSL_Encoding/URL
      - LSL_String
    wikipedia:
        en:
          - Hexadecimal
          - UTF-8
          - Byte
  scope: support.function.builtin
  type: string
  version: '1.7.0'
llMapDestination:
  delay: 1.0
  description: |-
      Opens the World Map centered on the region simname with pos highlighted.
      (NOTE: look_at currently does nothing.) Only works for scripts attached to
      avatar, or during touch events.
  function-id: 309
  params:
    - description: region name
      name: simname
      type: string
    - description: position in region coordinates
      name: pos
      type: vector
    - description: position in local coordinates (not used)
      name: look_at
      type: vector
  related:
    constants:
      - ZERO_VECTOR
    events:
      - attach
      - touch_start
      - touch
      - touch_end
    functions:
      - llRequestInventoryData
    slwiki:
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Local
      - Attachment
    slwiki_categories:
      - LSL_Touch
      - LSL_Owner
      - LSL_Dialog
      - LSL_Attachment
      - LSL_Avatar
      - LSL_Touch
  scope: support.function.builtin
  version: '1.8.0'
llAddToLandBanList:
  delay: 0.1
  description: |-
    Adds avatar to the land ban list for hours, or indefinitely if hours is 0
  function-id: 310
  params:
    - description: avatar UUID
      name: avatar
      type: key
    - name: hours
      type: float
  related:
    functions:
      - llAddToLandPassList
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Avatar/As_A_Parameter
      - LSL_Security
      - LSL_Parcel
  scope: support.function.builtin
  version: '1.8.0'
llRemoveFromLandPassList:
  delay: 0.1
  description: Removes avatar from the land pass list
  function-id: 311
  params:
    - name: avatar
      type: key
  related:
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llRemoveFromLandBanList
      - llResetLandBanList
      - llResetLandPassList
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Avatar/As_A_Parameter
      - LSL_Security
      - LSL_Parcel
  scope: support.function.builtin
  version: '1.8.0'
llRemoveFromLandBanList:
  delay: 0.1
  description: Removes avatar from the land ban list
  function-id: 312
  params:
    - name: avatar
      type: key
  related:
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Avatar/As_A_Parameter
      - LSL_Security
      - LSL_Parcel
  scope: support.function.builtin
  version: '1.8.0'
llSetCameraParams:
  description: |-
      Sets multiple camera parameters at once.
      List format is [ rule1, data1, rule2, data2 … rulen, datan ].
  function-id: 313
  params:
    - name: rules
      type: list
  related:
    constants:
      - PERMISSION_CONTROL_CAMERA
      - DEBUG_CHANNEL
      - CAMERA_ACTIVE
      - CAMERA_BEHINDNESS_ANGLE
      - CAMERA_BEHINDNESS_LAG
      - CAMERA_DISTANCE
      - CAMERA_FOCUS
      - CAMERA_FOCUS_LAG
      - CAMERA_FOCUS_LOCKED
      - CAMERA_FOCUS_OFFSET
      - CAMERA_FOCUS_THRESHOLD
      - CAMERA_PITCH
      - CAMERA_POSITION_LAG
      - CAMERA_POSITION_LOCKED
      - CAMERA_POSITION_THRESHOLD
      - 'TRUE'
      - 'FALSE'
    events:
      - run_time_permissions
    functions:
      - llRequestPermissions
      - llGetPermissions
      - llGetPermissionsKey
      - llClearCameraParams
      - llGetCameraPos
      - llGetCameraRot
    slwiki:
      - Script
      - Viewer_coordinate_frames#Region
      - Position
      - FollowCam
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Camera
  required_permissions:
    - PERMISSION_CONTROL_CAMERA
  scope: support.function.builtin
  version: '1.9.0(15)'
llClearCameraParams:
  description: |-
    Resets all camera parameters to default values and turns off scripted
    camera control
  function-id: 314
  related:
    constants:
      - PERMISSION_CONTROL_CAMERA
      - DEBUG_CHANNEL
    events:
      - run_time_permissions
    functions:
      - llSetCameraParams
      - llGetCameraPos
      - llGetCameraRot
    slwiki:
      - Script
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Camera
  required_permissions:
    - PERMISSION_CONTROL_CAMERA
  scope: support.function.builtin
  version: '1.9.0(15)'
llListStatistics:
  description: |-
    Performs statistical aggregate functions on list src using LIST_STAT_*
    operations
  function-id: 315
  params:
    - description: a LIST_STAT_* flag
      name: operation
      type: integer
    - name: src
      type: list
  related:
    constants:
      - LIST_STAT_RANGE
      - LIST_STAT_MIN
      - LIST_STAT_MAX
      - LIST_STAT_MEAN
      - LIST_STAT_MEDIAN
      - LIST_STAT_STD_DEV
      - LIST_STAT_SUM
      - LIST_STAT_SUM_SQUARES
      - LIST_STAT_COUNT
      - LIST_STAT_GEOMETRIC_MEAN
    functions:
      - llGetListEntryType
    slwiki_categories:
      - LSL_List
      - LSL_Math
  scope: support.function.builtin
  type: float
  version: '1.9.0(15)'
llGetUnixTime:
  description: |-
    Returns the number of seconds elapsed since 00:00 hours, Jan 1, 1970
    UTC from the system clock
  function-id: 316
  related:
    functions:
      - llGetTimestamp
      - llGetDate
      - llGetTime
    slwiki_categories:
      - LSL_Time
    wikipedia:
        en:
          - Coordinated_Universal_Time
  scope: support.function.builtin
  type: integer
  version: '1.9.0(15)'
llGetParcelFlags:
  description: |-
    Returns an integer bit_field of the parcel flags (PARCEL_FLAG_*) for the
    parcel that includes the point pos
  function-id: 317
  params:
    - name: pos
      type: vector
  related:
    constants:
      - PARCEL_FLAG_ALLOW_FLY
      - PARCEL_FLAG_ALLOW_SCRIPTS
      - PARCEL_FLAG_ALLOW_LANDMARK
      - PARCEL_FLAG_ALLOW_TERRAFORM
      - PARCEL_FLAG_ALLOW_DAMAGE
      - PARCEL_FLAG_ALLOW_CREATE_OBJECTS
      - PARCEL_FLAG_USE_ACCESS_GROUP
      - PARCEL_FLAG_USE_ACCESS_LIST
      - PARCEL_FLAG_USE_BAN_LIST
      - PARCEL_FLAG_USE_LAND_PASS_LIST
      - PARCEL_FLAG_LOCAL_SOUND_ONLY
      - PARCEL_FLAG_RESTRICT_PUSHOBJECT
      - PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
      - PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS
      - PARCEL_FLAG_ALLOW_ALL_OBJECTS_ENTRY
      - PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY
    functions:
      - llGetParcelDetails
      - llGetRegionFlags
    slwiki:
      - Integer
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Integer/bit_field
      - LSL_Functions/Returns_a_integer/bit_field
      - LSL_Parcel
  scope: support.function.builtin
  type: integer.bit_field
  version: '1.9.1(9)'
llGetRegionFlags:
  description: |-
    Returns the region flags (REGION_FLAG_*) for the region the object
    is in
  function-id: 318
  related:
    constants:
      - REGION_FLAG_ALLOW_DAMAGE
      - REGION_FLAG_FIXED_SUN
      - REGION_FLAG_BLOCK_TERRAFORM
      - REGION_FLAG_SANDBOX
      - REGION_FLAG_DISABLE_COLLISIONS
      - REGION_FLAG_DISABLE_PHYSICS
      - REGION_FLAG_BLOCK_FLY
      - REGION_FLAG_ALLOW_DIRECT_TELEPORT
      - REGION_FLAG_RESTRICT_PUSHOBJECT
      - REGION_FLAG_
    functions:
      - llGetEnv
      - llGetParcelFlags
      - llRequestSimulatorData
    slwiki_categories:
      - LSL_Region
      - LSL_Region/Flags
      - LSL_Integer/bit_field
  scope: support.function.builtin
  type: integer.bit_field
  version: '1.9.0(15)'
llHTTPRequest:
  description: |-
    Sends an HTTP request to the specified url with the body of the request
    and parameters
  function-id: 320
  params:
    - name: url
      type: string
    - name: parameters
      type: list
    - name: body
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
      - NULL_KEY
      - 'TRUE'
      - 'FALSE'
    events:
      - http_response
      - http_request
    functions:
      - llEscapeURL
      - llUnescapeURL
      - llHTTPResponse
    slwiki:
      - Key
      - Mono
      - LSO
      - UUID
      - Prim
      - Web_Textures
      - Simulator_IP_Addresses
    slwiki_categories:
      - LSL_Key/handle
      - LSL_List/instructions
      - LSL_Avatar/Name
      - LSL_HTTP
      - LSL_XML-RPC
      - LSL_Communications
      - LSL_HTTP/Client
    wikipedia:
        en:
          - List_of_HTTP_status_codes
  scope: support.function.builtin
  type: key
  version: '1.9.1(9)'
llResetLandBanList:
  delay: 0.1
  description: Removes all Residents from the land ban list
  function-id: 321
  related:
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandPassList
    slwiki_categories:
      - LSL_Security
      - LSL_Parcel
  scope: support.function.builtin
llResetLandPassList:
  delay: 0.1
  description: Removes all Residents from the land access/pass list
  function-id: 322
  related:
    functions:
      - llAddToLandBanList
      - llAddToLandPassList
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
    slwiki_categories:
      - LSL_Security
      - LSL_Parcel
  scope: support.function.builtin
llGetParcelPrimCount:
  description: |-
      Returns the number of prims on the parcel at pos of the given category.
      Categories: PARCEL_COUNT_TOTAL, _OWNER, _GROUP, _OTHER, _SELECTED, _TEMP.
  function-id: 323
  params:
    - description: position in region coordinates (z component is ignored)
      name: pos
      type: vector
    - description: a PARCEL_COUNT_* flag
      name: category
      type: integer
    - description: |-
        boolean, if TRUE, searches parcels in the region with the same
        owner as the targeted parcel, FALSE searches only the targeted parcel
      name: sim_wide
      type: integer
  related:
    constants:
      - PARCEL_COUNT_TOTAL
      - PARCEL_COUNT_OWNER
      - PARCEL_COUNT_GROUP
      - PARCEL_COUNT_OTHER
      - PARCEL_COUNT_SELECTED
      - PARCEL_COUNT_TEMP
      - 'TRUE'
      - 'FALSE'
    functions:
      - llGetParcelMaxPrims
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Parcel
      - LSL_Parcel/Prim_Count
  scope: support.function.builtin
  type: integer
  version: '1.13.0(8)'
llGetParcelPrimOwners:
  delay: 2.0
  description: |-
      Returns a list of all Residents who own objects on the parcel at pos and
      with individual prim counts. Requires owner-like permissions for the
      parcel.
  function-id: 324
  params:
    - description: position in region coordinates
      name: pos
      type: vector
  related:
    slwiki:
      - Deed
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Parcel
      - LSL_Owner
  scope: support.function.builtin
  type: list
  version: '1.13.0(8)'
llGetObjectPrimCount:
  description: Returns the total number of prims for an object in the region
  function-id: 325
  params:
    - description: prim UUID that is in the same region
      name: object_id
      type: key
  related:
    functions:
      - llGetAgentInfo
      - llGetNumberOfPrims
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Object
  scope: support.function.builtin
  type: integer
  version: '1.13.0(8)'
llGetParcelMaxPrims:
  description: Returns the maximum number of prims allowed on the parcel at pos
  function-id: 326
  params:
    - description: position in region coordinates (z component is ignored)
      name: pos
      type: vector
    - description: |-
        TRUE treats all parcels owned by this parcel owner in the sim
        in a single maximum, FALSE determines the max for the specified parcel
      name: sim_wide
      type: integer
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    functions:
      - llGetParcelPrimCount
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Parcel
      - LSL_Region
  scope: support.function.builtin
  type: integer
  version: '1.13.0(8)'
llGetParcelDetails:
  description: |-
      Returns the parcel details specified in params for the parcel at pos.
      Params is one or more of: PARCEL_DETAILS_NAME, *_DESC, *_OWNER, *_GROUP,
      *_AREA, *_ID, *_SEE_AVATARS.
  function-id: 327
  params:
    - description: position in region coordinates (z component is ignored)
      name: pos
      type: vector
    - description: a list of PARCEL_DETAILS_* flags
      name: params
      type: list
  related:
    constants:
      - PARCEL_DETAILS_NAME
      - PARCEL_DETAILS_DESC
      - PARCEL_DETAILS_OWNER
      - PARCEL_DETAILS_GROUP
      - PARCEL_DETAILS_AREA
      - PARCEL_DETAILS_ID
      - PARCEL_DETAILS_SEE_AVATARS
    functions:
      - llGetParcelFlags
      - llGetRegionFlags
      - llGetRegionName
      - llRequestSimulatorData
      - llGetObjectDetails
    slwiki:
      - Typecast
    slwiki_categories:
      - LSL_Parcel
      - LSL_Parcel/Details
      - LSL_Owner
      - LSL_Group
  scope: support.function.builtin
  type: list
  version: '1.13.0(8)'
llSetLinkPrimitiveParams:
  delay: 0.2
  description: Sets primitive parameters for linknumber based on rules
  function-id: 328
  params:
    - name: linknumber
      type: integer.link
    - name: rules
      type: list
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
      - PRIM_ALLOW_UNSIT
      - PRIM_ALPHA_MODE
      - PRIM_BUMP_SHINY
      - PRIM_COLOR
      - PRIM_DESC
      - PRIM_FLEXIBLE
      - PRIM_FULLBRIGHT
      - PRIM_GLOW
      - PRIM_LINK_TARGET
      - PRIM_MATERIAL
      - PRIM_NAME
      - PRIM_NORMAL
      - PRIM_OMEGA
      - PRIM_PHANTOM
      - PRIM_PHYSICS
      - PRIM_PHYSICS_SHAPE_TYPE
      - PRIM_POINT_LIGHT
      - PRIM_POSITION
      - PRIM_POS_LOCAL
      - PRIM_ROTATION
      - PRIM_ROT_LOCAL
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SCULPT_TYPE_MASK
      - PRIM_SIT_TARGET
      - PRIM_SIZE
      - PRIM_SLICE
      - PRIM_SPECULAR
      - PRIM_TEMP_ON_REZ
      - PRIM_TEXGEN
      - PRIM_TEXT
      - PRIM_TEXTURE
      - PRIM_TYPE
      - DEBUG_CHANNEL
      - NULL_KEY
    functions:
      - llGetPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetLinkPrimitiveParams
      - llGetLinkNumber
      - llGetLinkNumberOfSides
      - llSetAlpha
      - llSetTexture
      - llSetColor
      - llSetScale
      - llSetStatus
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llVecDist
      - llAngleBetween
    slwiki:
      - Mesh
      - Object
      - Prim
      - Link
      - UUID
      - Limits
      - Viewer_coordinate_frames
    slwiki_categories:
      - LSL_Color
      - LSL_Alpha
      - LSL_Face
      - LSL_Face/Get
      - LSL_Light
      - LSL_Link
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Link
      - LSL_Movement
      - LSL_Status
      - LSL_Texture
      - LSL_Object
      - LSL_List/instructions
      - LSL_Permissions/Asset
  scope: support.function.builtin
  version: '1.13.4(1)'
llSetLinkTexture:
  delay: 0.2
  description: |-
    Sets the texture of face for a task that exists in the link chain
    at linknumber
  function-id: 329
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims and seated
        avatars) or a LINK_* flag
      name: linknumber
      type: integer.link
    - description: |-
        a texture in the inventory of the prim this script is in or a
        UUID of a texture
      name: texture
      type: string
    - description: face number or ALL_SIDES
      name: face
      type: integer
  related:
    constants:
      - LINK_ROOT
      - LINK_SET
      - LINK_ALL_OTHERS
      - LINK_ALL_CHILDREN
      - LINK_THIS
      - ALL_SIDES
      - DEBUG_CHANNEL
    functions:
      - llGetAlpha
      - llSetAlpha
      - llSetLinkAlpha
      - llGetColor
      - llSetColor
      - llSetLinkColor
      - llGetTexture
      - llSetTexture
      - llScaleTexture
      - llGetTextureScale
      - llOffsetTexture
      - llGetTextureOffset
      - llGetTextureRot
      - llRotateTexture
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llUnSit
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llGetLinkNumber
      - llGetLinkNumberOfSides
    slwiki:
      - Link
      - Link#Root_Prim
      - Link#Child_Prim
      - Flag
      - Prim
      - Script
      - UUID
    slwiki_categories:
      - LSL_Inventory
      - LSL_Face
      - LSL_Face/Set
      - LSL_Permissions/Asset
  scope: support.function.builtin
  version: '1.13.4(1)'
llStringTrim:
  description: |-
      Trims the leading and/or trailing white spaces from a string.
      trim_type can be STRING_TRIM, STRING_TRIM_HEAD or STRING_TRIM_TAIL.
  function-id: 330
  params:
    - description: the string to be trimmed
      name: src
      type: string
    - description: STRING_TRIM_* flag(s)
      name: trim_type
      type: integer
  related:
    constants:
      - STRING_TRIM_HEAD
      - STRING_TRIM_TAIL
      - STRING_TRIM
    functions:
      - llStringLength
      - llDumpList2String
      - llSubStringIndex
      - llDeleteSubString
    slwiki_categories:
      - LSL_String
  scope: support.function.builtin
  type: string
  usage:
    - llJson2List(llList2Json(JSON_ARRAY, list source)); // to trim an entire list
      of strings
  version: '1.15.0(2)'
llRegionSay:
  description: |-
    Broadcasts msg on channel (not 0) that can be heard anywhere in the
    region by a script listening on channel
  function-id: 331
  params:
    - description: output chat channel, any valid non-zero integer value
      name: channel
      type: integer
    - description: message to be transmitted
      name: msg
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
    events:
      - listen
    functions:
      - llListen
      - llRegionSayTo
      - llOwnerSay
      - llWhisper
      - llSay
      - llShout
      - llInstantMessage
      - llDialog
      - llTextBox
    slwiki:
      - Region
    slwiki_categories:
      - LSL_Communications
      - LSL_Chat
  scope: support.function.builtin
  version: '1.16.0(1)'
llGetObjectDetails:
  description: |-
      Returns the object details specified in params for the object with key id.
      Params are OBJECT_NAME, *_DESC, *_POS, *_ROT, *_VELOCITY, *_OWNER,
      *_GROUP, *_CREATOR.
  function-id: 332
  params:
    - description: |-
        group, avatar or prim UUID that is in the same region or adjacent
        regions
      name: id
      type: key
    - description: OBJECT_* flags
      name: params
      type: list
  related:
    constants:
      - OBJECT_UNKNOWN_DETAIL
      - OBJECT_NAME
      - OBJECT_DESC
      - OBJECT_POS
      - OBJECT_ROT
      - OBJECT_VELOCITY
      - OBJECT_OWNER
      - OBJECT_GROUP
      - OBJECT_CREATOR
      - OBJECT_RUNNING_SCRIPT_COUNT
      - OBJECT_TOTAL_SCRIPT_COUNT
      - OBJECT_SCRIPT_MEMORY
      - OBJECT_SCRIPT_TIME
      - OBJECT_PRIM_EQUIVALENCE
      - OBJECT_SERVER_COST
      - OBJECT_STREAMING_COST
      - OBJECT_PHYSICS_COST
      - OBJECT_CHARACTER_TIME
      - OBJECT_ROOT
      - OBJECT_ATTACHED_POINT
      - OBJECT_PATHFINDING_TYPE
      - OBJECT_PHYSICS
      - OBJECT_PHANTOM
      - OBJECT_TEMP_ON_REZ
      - OBJECT_RENDER_WEIGHT
      - OBJECT_HOVER_HEIGHT
      - OBJECT_BODY_SHAPE_TYPE
      - OBJECT_LAST_OWNER_ID
      - OBJECT_CLICK_ACTION
      - OBJECT_OMEGA
      - OBJECT_PRIM_COUNT
      - OBJECT_TOTAL_INVENTORY_COUNT
      - OBJECT_REZZER_KEY
      - OBJECT_GROUP_TAG
      - OBJECT_TEMP_ATTACHED
      - OBJECT_ATTACHED_SLOTS_AVAILABLE
      - OBJECT_CREATION_TIME
      - OBJECT_SELECT_COUNT
      - OBJECT_SIT_COUNT
      - STATUS_PHYSICS
      - PRIM_PHANTOM
      - PRIM_TEMP_ON_REZ
      - INVENTORY_ALL
    functions:
      - llKey2Name
      - llDetectedName
      - llGetObjectName
      - llGetObjectDesc
      - llDetectedPos
      - llGetPos
      - llDetectedRot
      - llGetRot
      - llDetectedVel
      - llGetVel
      - llDetectedOwner
      - llGetOwnerKey
      - llGetOwner
      - llGetCreator
      - llGetScriptState
      - llGetInventoryNumber
      - llGetLinkKey
      - llGetAttached
      - llGetStatus
      - llGetOmega
      - llGetObjectPrimCount
      - llGetNumberOfPrims
      - llGetInventoryNumber
      - llSetMemoryLimit
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
    slwiki:
      - Viewerhelp:Top_Colliders_and_Top_Scripts
      - Mesh/Mesh_Server_Weight
      - Mesh/Mesh_Streaming_Cost
      - Mesh/Mesh_physics
      - Viewerhelp:Pathfinding_characters
      - Pathfinding_Quick_Start_Guide
      - Avatar_Rendering_Cost
      - Mono
      - LSO
      - Limits
      - Prim_Attribute_Overloading
    slwiki_categories:
      - LSL_Group
      - LSL_Creator
      - LSL_Effects
      - LSL_Avatar/As_A_Parameter
      - LSL_Object
      - LSL_Prim
      - LSL_Avatar
      - LSL_Owner
      - LSL_Creator
      - LSL_Group
      - LSL_Link
      - LSL_Link/Get
      - LSL_Click_Action
      - LSL_Detected
  scope: support.function.builtin
  type: list
  version: '1.18.3(5)'
llSetClickAction:
  description: Sets the action performed when a prim is clicked upon
  function-id: 333
  params:
    - description: CLICK_ACTION_* flag
      name: action
      type: integer
  related:
    constants:
      - CLICK_ACTION_NONE
      - CLICK_ACTION_TOUCH
      - CLICK_ACTION_SIT
      - CLICK_ACTION_BUY
      - CLICK_ACTION_PAY
      - CLICK_ACTION_OPEN
      - CLICK_ACTION_PLAY
      - CLICK_ACTION_OPEN_MEDIA
      - CLICK_ACTION_ZOOM
    events:
      - touch_start
      - touch
      - touch_end
      - money
    functions:
      - llPassTouches
    slwiki:
      - Click_action
    slwiki_categories:
      - LSL_Detected
      - LSL_Integer/click_action
  scope: support.function.builtin
llGetRegionAgentCount:
  description: Returns the number of avatars in the region
  function-id: 334
  related:
    functions:
      - llGetAgentList
      - llGetRegionFPS
      - llGetRegionTimeDilation
    slwiki_categories:
      - LSL_Region
  scope: support.function.builtin
  type: integer
llTextBox:
  delay: 1.0
  description: |-
      Shows a window on the avatar's screen with the message.
      It contains a text box for input, and if entered that text is chatted on
      chat_channel.
  function-id: 335
  params:
    - description: avatar UUID that is in the same region
      name: avatar
      type: key
    - description: message to be displayed in the text box
      name: message
      type: string
    - description: output channel, any valid integer value
      name: chat_channel
      type: integer
  related:
    constants:
      - DEBUG_CHANNEL
      - PUBLIC_CHANNEL
      - NULL_KEY
    events:
      - listen
    functions:
      - llListen
      - llDialog
      - llWhisper
      - llSay
      - llShout
      - llRegionSay
      - llRegionSayTo
      - llInstantMessage
    slwiki:
      - UUID
      - Region
    slwiki_categories:
      - LSL_Avatar/As_A_Parameter
      - LSL_Chat
      - LSL_Communications
      - LSL_Dialog
  scope: support.function.builtin
llGetAgentLanguage:
  description: |-
    Returns the language code of the preferred interface language of
    the avatar
  function-id: 336
  params:
    - description: avatar UUID that is in the same region
      name: avatar
      type: key
  related:
    constants:
      - NULL_KEY
    slwiki:
      - UUID
      - Region
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
    wikipedia:
        en:
          - List_of_ISO_639-1_codes
  scope: support.function.builtin
  type: string
llDetectedTouchUV:
  description: |-
    Returns the u and v coordinates in the first two components of a
    vector, for the texture coordinates where the prim was touched in a
    triggered touch event
  function-id: 337
  params:
    - description: Index of detection information
      name: index
      type: integer
  related:
    constants:
      - NULL_KEY
      - TOUCH_INVALID_TEXCOORD
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: vector
  version: '1.24'
llDetectedTouchFace:
  description: |-
    Returns the index of the face where the avatar clicked in a triggered
    touch event
  function-id: 338
  params:
    - description: Index of detection information
      name: index
      type: integer
  related:
    constants:
      - NULL_KEY
      - TOUCH_INVALID_FACE
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: integer
  version: '1.24'
llDetectedTouchPos:
  description: |-
    Returns the position where the object was touched in a triggered
    touch event
  function-id: 339
  params:
    - description: Index of detection information
      name: index
      type: integer
  related:
    constants:
      - NULL_KEY
      - TOUCH_INVALID_VECTOR
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
      - llGetAttached
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: vector
  version: '1.24'
llDetectedTouchNormal:
  description: Returns the surface normal for a triggered touch event
  function-id: 340
  params:
    - description: Index of detection information
      name: index
      type: integer
  related:
    constants:
      - NULL_KEY
      - TOUCH_INVALID_VECTOR
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
    wikipedia:
        en:
          - Tangent_space
  scope: support.function.builtin
  type: vector
  version: '1.24'
llDetectedTouchBinormal:
  description: Returns the surface binormal for a triggered touch event
  function-id: 341
  params:
    - description: Index of detection information
      name: index
      type: integer
  related:
    constants:
      - NULL_KEY
      - TOUCH_INVALID_VECTOR
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
    wikipedia:
        en:
          - Tangent_space
  scope: support.function.builtin
  type: vector
  version: '1.24'
llDetectedTouchST:
  description: |-
    Returns the s and t coordinates in the first two components of a
    vector, for the surface coordinates where the prim was touched in a
    triggered touch event
  function-id: 342
  params:
    - description: Index of detection information
      name: index
      type: integer
  related:
    constants:
      - NULL_KEY
      - TOUCH_INVALID_TEXCOORD
    events:
      - collision
      - collision_start
      - collision_end
      - sensor
      - touch
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassCollisions
      - llPassTouches
      - llSensor
      - llSensorRepeat
    slwiki_categories:
      - LSL_Detected
      - LSL_Collision
      - LSL_Passable
      - LSL_Sensor
      - LSL_Touch
  scope: support.function.builtin
  type: vector
  version: '1.24'
llSHA1String:
  description: |-
    Returns a string of 40 hex characters that is the SHA1 security Hash of src
  function-id: 343
  params:
    - name: src
      type: string
  related:
    functions:
      - llMD5String
    slwiki:
      - SHA-1
    slwiki_categories:
      - LSL_Hash
      - LSL_Encoding
      - LSL_Encryption
    wikipedia:
        en:
          - SHA-1
  scope: support.function.builtin
  type: string
  version: '1.25'
llGetFreeURLs:
  description: Returns the number of available URLs for the current script
  function-id: 344
  related:
    functions:
      - llRequestURL
      - llRequestSecureURL
      - llReleaseURL
      - llHTTPResponse
      - llGetHTTPHeader
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_HTTP
  scope: support.function.builtin
  type: integer
llRequestURL:
  description: |-
      Requests one HTTP:// url for use by this object.
      An http_request event is triggered with the results.
  function-id: 345
  related:
    constants:
      - CHANGED_REGION_START
    events:
      - http_request
    functions:
      - llRequestSecureURL
      - llSleep
      - llReleaseURL
      - llGetFreeURLs
      - llHTTPResponse
      - llGetHTTPHeader
    slwiki:
      - Script
      - Event
      - Key
      - LSL_HTTP_server
      - LSL_HTTP_server#Resource_Limitations
    slwiki_categories:
      - LSL_Integer/handle
      - LSL_HTTP
      - LSL_HTTP/Server
  scope: support.function.builtin
  type: key
llRequestSecureURL:
  description: |-
      Requests one HTTPS:// (SSL) url for use by this object.
      An http_request event is triggered with the results.
  function-id: 346
  related:
    constants:
      - CHANGED_REGION_START
    events:
      - http_request
    functions:
      - llRequestURL
      - llSleep
      - llReleaseURL
      - llGetFreeURLs
      - llHTTPResponse
      - llGetHTTPHeader
    slwiki:
      - Script
      - Event
      - Key
      - LSL_HTTP_server
      - LSL_HTTP_server#Resource_Limitations
    slwiki_categories:
      - LSL_Integer/handle
      - LSL_HTTP
      - LSL_HTTP/Server
  scope: support.function.builtin
  type: key
llReleaseURL:
  description: Releases the specified URL, it will no longer be usable
  function-id: 347
  params:
    - description: URL to be released
      name: url
      type: string
  related:
    functions:
      - llRequestURL
      - llRequestSecureURL
      - llGetFreeURLs
      - llHTTPResponse
      - llGetHTTPHeader
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_HTTP
      - LSL_HTTP/Server
  scope: support.function.builtin
llHTTPResponse:
  description: Responds to request_id with status and body
  function-id: 348
  params:
    - description: a valid HTTP request key
      name: request_id
      type: key
    - description: HTTP status
      name: status
      type: integer
    - description: contents of response
      name: body
      type: string
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llSetContentType
      - llHTTPRequest
      - llGetFreeURLs
      - llRequestURL
      - llRequestSecureURL
      - llReleaseURL
      - llGetHTTPHeader
    slwiki:
      - LSL_HTTP_server
    slwiki_categories:
      - LSL_Key/handle
      - LSL_HTTP
      - LSL_HTTP/Server
    wikipedia:
        en:
          - List_of_HTTP_status_codes
  scope: support.function.builtin
llGetHTTPHeader:
  description: Returns the value for header for request_id
  function-id: 349
  params:
    - description: a valid HTTP request key
      name: request_id
      type: key
    - description: lower case header value name
      name: header
      type: string
  related:
    events:
      - http_request
    functions:
      - llHTTPResponse
      - llRequestURL
      - llRequestSecureURL
      - llReleaseURL
      - llHTTPRequest
      - llGetFreeURLs
    slwiki:
      - LSL_HTTP_server
      - UUID
    slwiki_categories:
      - LSL_Key/handle
      - LSL_Avatar/Name
      - LSL_HTTP
      - LSL_HTTP/Server
    wikipedia:
        en:
          - List_of_HTTP_headers
  scope: support.function.builtin
  type: string
llSetPrimMediaParams:
  delay: 1.0
  description: |-
      Sets the media params for a particular face on an object. If media is not
      already on this object, add it. List is a set of name/value pairs in no
      particular order. Params not specified are unchanged, or if new media is
      added then set to the default specified.
  function-id: 350
  params:
    - description: face number
      name: face
      type: integer
    - description: a set of key/value pairs (in no particular order)
      name: params
      type: list
  related:
    constants:
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERM_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
    functions:
      - llGetPrimMediaParams
      - llGetLinkMedia
      - llSetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
      - llEscapeURL
      - llUnescapeURL
    slwiki:
      - Integer
    slwiki_categories:
      - LSL_Integer/status
      - LSL_Face
      - LSL_Face/Set
      - LSL_List/instructions
      - LSL_Prim_Media
      - LSL_Media
      - Shared_Media
  scope: support.function.builtin
  type: integer.status
llGetPrimMediaParams:
  delay: 1.0
  description: |-
      Returns the media params for a particular face on an object, given the
      desired list of names, in the order requested. (Returns an empty list if
      no media exists on the face.)
  function-id: 351
  params:
    - description: face number
      name: face
      type: integer
    - description: a set of keys (in no particular order)
      name: params
      type: list
  related:
    constants:
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERM_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
    functions:
      - llSetPrimMediaParams
      - llGetLinkMedia
      - llSetLinkMedia
      - llClearPrimMedia
      - llClearLinkMedia
      - llEscapeURL
      - llUnescapeURL
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Get
      - LSL_List/instructions
      - LSL_Prim_Media
      - LSL_Media
      - Shared_Media
  scope: support.function.builtin
  type: list
llClearPrimMedia:
  delay: 1.0
  description: Clears (deletes) the media and all params from the given face
  function-id: 352
  params:
    - name: face
      type: integer
  related:
    constants:
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llGetPrimMediaParams
      - llSetPrimMediaParams
      - llGetLinkMedia
      - llSetLinkMedia
      - llClearLinkMedia
      - llEscapeURL
      - llUnescapeURL
    slwiki_categories:
      - LSL_Integer/status
      - LSL_Face
      - LSL_Face/Set
      - LSL_Prim_Media
      - LSL_Media
  scope: support.function.builtin
  type: integer.status
llSetLinkPrimitiveParamsFast:
  description: Set primitive parameters for linknumber based on rules
  function-id: 353
  params:
    - name: linknumber
      type: integer.link
    - name: rules
      type: list
  related:
    constants:
      - PRIM_ALLOW_UNSIT
      - PRIM_ALPHA_MODE
      - PRIM_BUMP_SHINY
      - PRIM_COLOR
      - PRIM_DESC
      - PRIM_FLEXIBLE
      - PRIM_FULLBRIGHT
      - PRIM_GLOW
      - PRIM_LINK_TARGET
      - PRIM_MATERIAL
      - PRIM_NAME
      - PRIM_NORMAL
      - PRIM_OMEGA
      - PRIM_PHANTOM
      - PRIM_PHYSICS
      - PRIM_PHYSICS_SHAPE_TYPE
      - PRIM_POINT_LIGHT
      - PRIM_POSITION
      - PRIM_POS_LOCAL
      - PRIM_ROTATION
      - PRIM_ROT_LOCAL
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SCULPT_TYPE_MASK
      - PRIM_SIT_TARGET
      - PRIM_SIZE
      - PRIM_SLICE
      - PRIM_SPECULAR
      - PRIM_TEMP_ON_REZ
      - PRIM_TEXGEN
      - PRIM_TEXT
      - PRIM_TEXTURE
      - PRIM_TYPE
      - DEBUG_CHANNEL
      - NULL_KEY
    functions:
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llGetPrimitiveParams
      - llGetLinkPrimitiveParams
      - llGetLinkNumber
      - llGetLinkNumberOfSides
      - llSetAlpha
      - llSetTexture
      - llSetColor
      - llSetScale
      - llSetStatus
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llVecDist
      - llAngleBetween
    slwiki:
      - Mesh
      - Object
      - Prim
      - Link
      - UUID
      - Limits
      - Viewer_coordinate_frames
    slwiki_categories:
      - LSL_Color
      - LSL_Alpha
      - LSL_Face
      - LSL_Face/Set
      - LSL_Light
      - LSL_Link
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Link
      - LSL_Movement
      - LSL_Status
      - LSL_Texture
      - LSL_Object
      - LSL_List/instructions
      - LSL_Permissions/Asset
  scope: support.function.builtin
  version: '1.38'
llGetLinkPrimitiveParams:
  description: Get primitive parameters for linknumber based on rules
  function-id: 354
  params:
    - name: linknumber
      type: integer.link
    - name: rules
      type: list
  related:
    constants:
      - PRIM_ALLOW_UNSIT
      - PRIM_ALPHA_MODE
      - PRIM_BUMP_SHINY
      - PRIM_COLOR
      - PRIM_DESC
      - PRIM_FLEXIBLE
      - PRIM_FULLBRIGHT
      - PRIM_GLOW
      - PRIM_LINK_TARGET
      - PRIM_MATERIAL
      - PRIM_NAME
      - PRIM_NORMAL
      - PRIM_OMEGA
      - PRIM_PHANTOM
      - PRIM_PHYSICS
      - PRIM_PHYSICS_SHAPE_TYPE
      - PRIM_POINT_LIGHT
      - PRIM_POSITION
      - PRIM_POS_LOCAL
      - PRIM_ROTATION
      - PRIM_ROT_LOCAL
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SCULPT_TYPE_MASK
      - PRIM_SIT_TARGET
      - PRIM_SIZE
      - PRIM_SLICE
      - PRIM_SPECULAR
      - PRIM_TEMP_ON_REZ
      - PRIM_TEXGEN
      - PRIM_TEXT
      - PRIM_TEXTURE
      - PRIM_TYPE
      - DEBUG_CHANNEL
      - NULL_KEY
    functions:
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
      - llGetPrimitiveParams
      - llGetLinkNumber
      - llGetLinkNumberOfSides
      - llSetAlpha
      - llSetTexture
      - llSetColor
      - llSetScale
      - llSetStatus
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llVecDist
      - llAngleBetween
    slwiki:
      - Mesh
      - Object
      - Prim
      - Link
      - UUID
      - Limits
      - Viewer_coordinate_frames
    slwiki_categories:
      - LSL_Color
      - LSL_Alpha
      - LSL_Face
      - LSL_Face/Get
      - LSL_Light
      - LSL_Link
      - LSL_PrimitiveParams
      - LSL_PrimitiveParams/Link
      - LSL_Movement
      - LSL_Status
      - LSL_Texture
      - LSL_Object
      - LSL_List/instructions
      - LSL_Permissions/Asset
  scope: support.function.builtin
  type: list
llLinkParticleSystem:
  description: |-
      Creates a particle system based on rules. Empty list removes particle
      system from object. List format is [ rule1, data1, rule2, data2 … rulen,
      datan ].
  function-id: 355
  params:
    - name: linknumber
      type: integer.link
    - name: rules
      type: list
  related:
    constants:
      - LINK_ROOT
      - LINK_SET
      - LINK_ALL_OTHERS
      - LINK_ALL_CHILDREN
      - LINK_THIS
      - PSYS_PART_BF_DEST_COLOR
      - PSYS_PART_BF_ONE
      - PSYS_PART_BF_ONE_MINUS_DEST_COLOR
      - PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA
      - PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR
      - PSYS_PART_BF_SOURCE_ALPHA
      - PSYS_PART_BF_SOURCE_COLOR
      - PSYS_PART_BF_ZERO
      - PSYS_PART_BLEND_FUNC_DEST
      - PSYS_PART_BLEND_FUNC_SOURCE
      - PSYS_PART_BOUNCE_MASK
      - PSYS_PART_EMISSIVE_MASK
      - PSYS_PART_END_ALPHA
      - PSYS_PART_END_COLOR
      - PSYS_PART_END_GLOW
      - PSYS_PART_END_SCALE
      - PSYS_PART_FLAGS
      - PSYS_PART_FOLLOW_SRC_MASK
      - PSYS_PART_FOLLOW_VELOCITY_MASK
      - PSYS_PART_INTERP_COLOR_MASK
      - PSYS_PART_INTERP_SCALE_MASK
      - PSYS_PART_MAX_AGE
      - PSYS_PART_RIBBON_MASK
      - PSYS_PART_START_ALPHA
      - PSYS_PART_START_COLOR
      - PSYS_PART_START_GLOW
      - PSYS_PART_START_SCALE
      - PSYS_PART_TARGET_LINEAR_MASK
      - PSYS_PART_TARGET_POS_MASK
      - PSYS_PART_WIND_MASK
      - PSYS_SRC_ACCEL
      - PSYS_SRC_ANGLE_BEGIN
      - PSYS_SRC_ANGLE_END
      - PSYS_SRC_BURST_PART_COUNT
      - PSYS_SRC_BURST_RADIUS
      - PSYS_SRC_BURST_RATE
      - PSYS_SRC_BURST_SPEED_MAX
      - PSYS_SRC_BURST_SPEED_MIN
      - PSYS_SRC_MAX_AGE
      - PSYS_SRC_OMEGA
      - PSYS_SRC_PATTERN
      - PSYS_SRC_PATTERN_ANGLE
      - PSYS_SRC_PATTERN_ANGLE_CONE
      - PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY
      - PSYS_SRC_PATTERN_DROP
      - PSYS_SRC_PATTERN_EXPLODE
      - PSYS_SRC_TARGET_KEY
      - PSYS_SRC_TEXTURE
    events:
      - timer
    functions:
      - llParticleSystem
      - llUnSit
      - llGetLinkNumber
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llWind
      - llSleep
    slwiki:
      - Object
      - Prim
      - Link
      - Link#Child_Prim
      - Link#Root_Prim
      - UUID
      - Geometric_center
      - Viewer_coordinate_frames#Local
    slwiki_categories:
      - LSL_Color
      - LSL_Alpha
      - LSL_Effects
      - LSL_Light
      - LSL_Particles
      - LSL_Prim
      - LSL_Stop
      - LSL_Link
      - LSL_Link/Set
    wikipedia:
        en:
          - Sprite_(computer_graphics)
  scope: support.function.builtin
  version: '1.38'
llSetLinkTextureAnim:
  description: Animate the texture on the specified prim's face/faces
  function-id: 356
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims and seated
        avatars) or a LINK_* flag
      name: link
      type: integer.link
    - description: bit-field of mode flags
      name: mode
      type: integer.bit_field
    - description: face number or ALL_SIDES
      name: face
      type: integer
    - description: horizontal frames (ignored for ROTATE and SCALE)
      name: sizex
      type: integer
    - description: vertical frames (ignored for ROTATE and SCALE)
      name: sizey
      type: integer
    - description: start position / frame number (or radians for ROTATE)
      name: start
      type: float
    - description: number of frames to display (or radians for ROTATE)
      name: length
      type: float
    - description: frames per second (must not be zero)
      name: rate
      type: float
  related:
    constants:
      - ALL_SIDES
      - LINK_ROOT
      - LINK_SET
      - LINK_ALL_OTHERS
      - LINK_ALL_CHILDREN
      - LINK_THIS
      - ANIM_ON
      - LOOP
      - REVERSE
      - PING_PONG
      - SMOOTH
      - ROTATE
      - SCALE
    functions:
      - llSetTextureAnim
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llGetLinkNumber
    slwiki:
      - Prim
      - Object
      - Script
      - Link#Root_Prim
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Set
      - LSL_Link
      - LSL_Negative_Index
      - LSL_Media
      - LSL_Effects
      - LSL_Texture
      - LSL_Video
      - LSL_Integer/bit_field
  scope: support.function.builtin
  version: '1.38'
llGetLinkNumberOfSides:
  description: Returns the number of sides of the specified linked prim
  function-id: 357
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims or seated
        avatars) or a LINK_* flag
      name: link
      type: integer.link
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
    functions:
      - llGetNumberOfSides
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llGetLinkNumber
      - llSetLinkColor
      - llSetLinkTexture
    slwiki:
      - Flag
      - Link#Root_Prim
      - Object
      - Prim
    slwiki_categories:
      - LSL_Face
  scope: support.function.builtin
  type: integer
  version: '1.40'
llGetUsername:
  description: |-
    Returns the single-word username of an avatar, iff the avatar is
    in the current region, otherwise the empty string
  function-id: 358
  params:
    - description: |-
        avatar UUID that is in the same region as the prim this script
        is in or is otherwise known to the region
      name: id
      type: key
  related:
    constants:
      - AGENT_BY_USERNAME
      - AGENT_BY_LEGACY_NAME
      - AGENT
    events:
      - dataserver
    functions:
      - llRequestUsername
      - llGetDisplayName
      - llRequestDisplayName
      - llKey2Name
      - llRequestAgentData
      - llDetectedName
    slwiki:
      - Viewer_URL_Name_Space
      - Usernames
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Avatar/Name
      - LSL_Username
      - LSL_Key
  scope: support.function.builtin
  type: string
llRequestUsername:
  description: |-
    Requests single-word username of an avatar. When data is available
    the dataserver event will be raised.
  function-id: 359
  params:
    - description: avatar UUID
      name: id
      type: key
  related:
    constants:
      - AGENT_BY_USERNAME
      - AGENT_BY_LEGACY_NAME
      - AGENT
    events:
      - dataserver
    functions:
      - llGetUsername
      - llGetDisplayName
      - llRequestDisplayName
      - llKey2Name
      - llRequestAgentData
      - llDetectedName
    slwiki:
      - Viewer_URL_Name_Space
      - Usernames
      - UUID
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Avatar/Name
      - LSL_Username
      - LSL_Dataserver
      - LSL_Key
      - LSL_Key/handle
  scope: support.function.builtin
  type: key
llGetDisplayName:
  description: |-
    Returns the name of an avatar, iff the avatar is in the current simulator,
    and the name has been cached, otherwise the same as llGetUsername. Use
    llRequestDisplayName if you absolutely must have the display name.
  function-id: 360
  params:
    - name: id
      type: key
  related:
    constants:
      - AGENT_BY_USERNAME
      - AGENT_BY_LEGACY_NAME
      - AGENT
    events:
      - dataserver
    functions:
      - llRequestDisplayName
      - llGetUsername
      - llRequestUsername
    slwiki:
      - Display_names
      - UUID
      - Region
      - Viewer_URI_Name_Space
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Avatar/Name
      - LSL_Display_Name
      - LSL_Key
  scope: support.function.builtin
  type: string
llRequestDisplayName:
  description: |-
    Requests name of an avatar. When data is available the dataserver
    event will be raised.
  function-id: 361
  params:
    - description: avatar UUID
      name: id
      type: key
  related:
    constants:
      - AGENT_BY_USERNAME
      - AGENT_BY_LEGACY_NAME
      - AGENT
    events:
      - dataserver
    functions:
      - llGetDisplayName
      - llGetUsername
      - llRequestUsername
    slwiki:
      - Display_names
      - UUID
      - Region
      - Viewer_URI_Name_Space
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Avatar/Name
      - LSL_Display_Name
      - LSL_Dataserver
      - LSL_Key
      - LSL_Key/handle
  scope: support.function.builtin
  type: key
llGetEnv:
  description: Returns a string with the requested data about the region
  function-id: 362
  params:
    - name: name
      type: string
  related:
    functions:
      - llRequestSimulatorData
      - llGetSimulatorHostname
      - llGetRegionFlags
      - lLGetRegionTimeDilation
    slwiki:
      - Region
      - SimConsole
    slwiki_categories:
      - LSL_Region
  scope: support.function.builtin
  type: string
  usage:
    - (integer)llGetEnv("agent_limit"); // get the maximum number of avatars normally
      allowed on this region (teleport home, and login to last location, are allowed
      to exceed this)
    - llGetEnv("dynamic_pathfinding"); // get the region's effective dynamic_pathfinding
      status, "enabled" or "disabled". This option is configured in the region debug
      console.
    - (integer)llGetEnv("estate_id"); // Numerical index identifying which estate
      a region belongs to. Main grid mainland is "1".
    - llGetEnv("estate_name"); // "mainland", "Linden Homes", "My Region Name", etc.
    - (integer)llGetEnv("frame_number"); // Get the frame number of the simulator,
      for example "42042".
    - (integer)llGetEnv("region_cpu_ratio"); // get number of regions per CPU for
      this region type. Returns "1" or "4".
    - (integer)llGetEnv("region_idle"); // get the region's idle status. "1" or "0".
    - llGetEnv("region_product_name"); // Get the type of region this is. "Estate
      / Full Region", "Mainland / Homestead", "Estate / Openspace", "Estate / Full
      Region - Skill Gaming", etc.
    - llGetEnv("region_product_sku"); // Get the region's product number (as string)
    - (integer)llGetEnv("region_start_time"); // Get the time the region was last
      (re)started in llGetUnixTime format.
    - llGetEnv("sim_channel"); // Get the region's channel string, for example "Second
      Life Server".
    - llGetEnv("sim_version"); // Get the region's version number string, for example
      "10.11.30.215699".
    - llGetEnv("simulator_hostname"); // Get the simhost running this region. Same
      as llGetSimulatorHostname but without the script delay.
    - (integer)llGetEnv("region_max_prims"); // Get the maximum number of prims allowed
      on this region.
    - (float)llGetEnv("region_object_bonus"); // Get the region's object bonus factor.
llRegionSayTo:
  description: Sends msg on channel (not DEBUG_CHANNEL) directly to prim or avatar
      target anywhere within the region
  function-id: 363
  params:
    - description: group, avatar or prim UUID that is in the same region
      name: target
      type: key
    - name: channel
      type: integer
    - name: msg
      type: string
  related:
    constants:
      - DEBUG_CHANNEL
    events:
      - listen
    functions:
      - llListen
      - llRegionSay
      - llOwnerSay
      - llWhisper
      - llSay
      - llShout
      - llInstantMessage
    slwiki:
      - Hello_Avatar
    slwiki_categories:
      - LSL_Avatar/As_A_Parameter
  scope: support.function.builtin
llSitOnLink:
  params:
    - description: UUID of the avatar being forced to sit
      name: agent_id
      type: key
    - description: link number for the prim containing the desired sit target
      name: link
      type: integer
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
      - SIT_NOT_EXPERIENCE
      - SIT_NO_EXPERIENCE_PERMISSION
      - SIT_NO_SIT_TARGET
      - SIT_INVALID_AGENT
      - SIT_INVALID_LINK
      - SIT_NO_ACCESS
      - SIT_INVALID_OBJECT
      - PRIM_ALLOW_UNSIT
      - PRIM_SCRIPTED_SIT_ONLY
      - PRIM_SIT_TARGET
    functions:
      - llLinkSitTarget
      - llSitTarget
      - llSetSitText
      - llAvatarOnLinkSitTarget
      - llAvatarOnSitTarget
      - llUnSit
    slwiki_categories:
      - Experience_Tools
      - LSL_Experience
  scope: support.function.builtin
  type: integer.status
llSetMemoryLimit:
  description: |-
      Request limit bytes to be reserved for this script.
      Returns a success/failure flag for whether the memory limit was set.
      Only relevant for Mono-compiled scripts.
  params:
    - name: limit
      type: integer
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    functions:
      - llScriptProfiler
      - llGetSPMaxMemory
      - llGetMemoryLimit
      - llGetFreeMemory
      - llGetUsedMemory
      - llGetObjectDetails
    slwiki:
      - Mono
      - LSO
    slwiki_categories:
      - LSL_Integer
      - LSL_Integer/boolean
      - LSL_Functions/Returns_a_integer/boolean
      - LSL_Script
      - LSL_Memory
      - LSL_Script_Profiler
  scope: support.function.builtin
  type: integer.boolean
  version: '11'
llGetMemoryLimit:
  description: |-
      Get the maximum memory a script can use.
      Returns the integer amount of memory the script can use in bytes.
  related:
    functions:
      - llScriptProfiler
      - llGetSPMaxMemory
      - llSetMemoryLimit
      - llGetFreeMemory
      - llGetUsedMemory
      - llGetObjectDetails
    slwiki:
      - Mono
      - LSO
    slwiki_categories:
      - LSL_Script
      - LSL_Memory
      - LSL_Script_Profiler
  scope: support.function.builtin
  type: integer
  version: '11.08.10.238207'
llSetLinkMedia:
  description: |-
    Set the media params for a particular face on linked prim. List is
    a set of name/value pairs (in no particular order). If media is not already
    on this object, add it. Params not specified are unchanged, or if new media
    is added set to the default specified.
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims or seated
        avatars) or a LINK_* flag
      name: link
      type: integer.link
    - description: face number
      name: face
      type: integer
    - name: params
      type: list
  related:
    constants:
      - DEBUG_CHANNEL
      - LINK_ROOT
      - LINK_THIS
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERM_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
    functions:
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llUnSit
      - llGetLinkNumber
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llGetLinkMedia
      - llClearLinkMedia
    slwiki:
      - Prim
      - Object
      - Script
      - Link
      - User:Kelly_Linden/lsl_hacks
    slwiki_categories:
      - LSL_Integer
      - LSL_Integer/status
      - LSL_Face
      - LSL_Face/Set
      - LSL_Link
      - LSL_Link/Set
      - LSL_List/instructions
  scope: support.function.builtin
  type: integer.status
  version: '11.08.10.238207'
llGetLinkMedia:
  description: |-
    Get the media params for a particular face on linked prim, given
    the desired list of names. Returns a list of values in the order requested.
    Returns an empty list if no media exists on the face.
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims or seated
        avatars) or a LINK_* flag
      name: link
      type: integer.link
    - description: face number
      name: face
      type: integer
    - description: a set of keys (in no particular order)
      name: params
      type: list
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
      - PRIM_MEDIA_ALT_IMAGE_ENABLE
      - PRIM_MEDIA_CONTROLS
      - PRIM_MEDIA_CONTROLS_STANDARD
      - PRIM_MEDIA_CONTROLS_MINI
      - PRIM_MEDIA_CURRENT_URL
      - PRIM_MEDIA_HOME_URL
      - PRIM_MEDIA_AUTO_LOOP
      - PRIM_MEDIA_AUTO_PLAY
      - PRIM_MEDIA_AUTO_SCALE
      - PRIM_MEDIA_AUTO_ZOOM
      - PRIM_MEDIA_FIRST_CLICK_INTERACT
      - PRIM_MEDIA_WIDTH_PIXELS
      - PRIM_MEDIA_HEIGHT_PIXELS
      - PRIM_MEDIA_WHITELIST_ENABLE
      - PRIM_MEDIA_WHITELIST
      - PRIM_MEDIA_PERMS_INTERACT
      - PRIM_MEDIA_PERM_CONTROL
      - PRIM_MEDIA_PERM_NONE
      - PRIM_MEDIA_PERM_OWNER
      - PRIM_MEDIA_PERM_GROUP
      - PRIM_MEDIA_PERM_ANYONE
    functions:
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llUnSit
      - llGetLinkNumber
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llClearLinkMedia
    slwiki:
      - Prim
      - Object
      - Script
      - Link
      - User:Kelly_Linden/lsl_hacks
    slwiki_categories:
      - LSL_Face
      - LSL_Face/Get
      - LSL_Link
      - LSL_Link/Get
      - LSL_Prim_Media
      - LSL_Media
      - LSL_List/instructions
  scope: support.function.builtin
  type: list
  version: '11.08.10.238207'
llClearLinkMedia:
  description: |-
    Clears (deletes) the media and all params from the given face on
    linked prim
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims or seated
        avatars) or a LINK_* flag
      name: link
      type: integer.link
    - description: face number
      name: face
      type: integer
  related:
    constants:
      - DEBUG_CHANNEL
      - LINK_ROOT
      - LINK_THIS
      - STATUS_OK
      - STATUS_MALFORMED_PARAMS
      - STATUS_TYPE_MISMATCH
      - STATUS_BOUNDS_ERROR
      - STATUS_NOT_FOUND
      - STATUS_NOT_SUPPORTED
      - STATUS_INTERNAL_ERROR
      - STATUS_WHITELIST_FAILED
    functions:
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llUnSit
      - llGetLinkNumber
      - llSetPrimMediaParams
      - llGetPrimMediaParams
      - llSetLinkMedia
      - llGetLinkMedia
    slwiki:
      - Prim
      - Object
      - Script
      - Link
      - User:Kelly_Linden/lsl_hacks
    slwiki_categories:
      - LSL_Integer
      - LSL_Integer/status
      - LSL_Face
      - LSL_Face/Set
      - LSL_Link
      - LSL_Link/Set
      - LSL_Prim_Media
      - LSL_Media
      - LSL_List/instructions
  scope: support.function.builtin
  type: integer.status
  version: '11.08.10.238207'
llSetLinkCamera:
  description: |-
      Sets the camera eye offset, and the offset that camera is looking at, for
      avatars that sit on the linked prim. The two vector parameters are offsets
      relative to the object's center and expressed in local coordinates.
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims or seated
        avatars) or a LINK_* flag
      name: link
      type: integer.link
    - description: |-
        offset relateive to the prim's position and expressed in local
        coordinates
      name: eye
      type: vector
    - description: |-
        offset relative to the prim's position and expressed in local
        coordinates
      name: at
      type: vector
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
    functions:
      - llGetLinkNumber
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llSetCameraAtOffset
      - llSetCameraEyeOffset
      - llForceMouselook
      - llSetCameraParams
    slwiki:
      - Viewer_coordinate_frames#Local
      - Viewer_coordinate_frames#Region
      - Viewer_coordinate_frames#Agent
      - Object
      - Prim
      - Link
      - Flag
    slwiki_categories:
      - LSL_Link
      - LSL_Link/Set
      - LSL_Camera
      - LSL_Sit
      - LSL_Vehicle
      - LSL_Prim
  scope: support.function.builtin
  version: '11.08.10.238207'
llSetContentType:
  description: |-
      Set the Internet media type of an LSL HTTP server response.
      content_type may be one of CONTENT_TYPE_TEXT (default) "text/plain", or
      CONTENT_TYPE_HTML "text/html", only valid for embedded browsers on content
      owned by the person viewing. Falls back to "text/plain" otherwise.
  params:
    - description: a valid http_request key
      name: request_id
      type: key
    - description: |-
        media type to use with any following llHTTPResponse(key request_id,
        integer status, string body)
      name: content_type
      type: integer
  related:
    constants:
      - CONTENT_TYPE_TEXT
      - CONTENT_TYPE_HTML
      - CONTENT_TYPE_XML
      - CONTENT_TYPE_XHTML
      - CONTENT_TYPE_ATOM
      - CONTENT_TYPE_JSON
      - CONTENT_TYPE_LLSD
      - CONTENT_TYPE_FORM
      - CONTENT_TYPE_RSS
    events:
      - http_request
      - http_response
    functions:
      - llHTTPResponse
      - llAttachToAvatarTemp
    slwiki:
      - LSL_HTTP_server
      - HTML_HUD_Demo
    slwiki_categories:
      - LSL_Key/handle
      - LSL_HTTP
      - LSL_HTTP/Server
    wikipedia:
        en:
          - Internet_media_type
  scope: support.function.builtin
llLinkSitTarget:
  description: |-
    Set the sit location for this object (if offset == <0,0,0> clear
    it)
  params:
    - description: |-
        link number (0 unlinked, 1 root prim, >1 child prims or seated
        avatars) or a LINK_* flag
      name: link
      type: integer.link
    - description: |-
        additional position for the sit target in local prim coordinates
      name: offset
      type: vector
    - description: |-
        additional rotation for the sit target relative to the prim rotation
      name: rot
      type: rotation
  related:
    constants:
      - LINK_ROOT
      - LINK_THIS
      - NULL_KEY
      - CHANGED_LINK
    events:
      - changed
    functions:
      - llGetLinkNumber
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llUnSit
      - llSitTarget
      - llSetSitText
      - llAvatarOnSitTarget
      - llAvatarOnLinkSitTarget
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Object
      - Prim
      - Link
    slwiki_categories:
      - LSL_Link
      - LSL_Link/Set
      - LSL_Sit
      - LSL_Vehicle
      - LSL_Prim
      - LSL_Effects
      - LSL_Sit/Teleport
      - LSL_Stop
    wikipedia:
        en:
          - Interval_(mathematics)#Notations_for_intervals
          - Lava_flow_(programming)
  scope: support.function.builtin
  version: '11.08.10.238207'
llAvatarOnLinkSitTarget:
  description: |-
    If an avatar is sitting on the sit target, return the avatar's key,
    NULL_KEY otherwise
  params:
    - name: link
      type: integer.link
  related:
    constants:
      - CHANGED_LINK
    events:
      - changed
    functions:
      - llGetLinkNumber
      - llGetNumberOfPrims
      - llGetObjectPrimCount
      - llGetKey
      - llGetLinkKey
      - llAvatarOnSitTarget
      - llSitTarget
      - llLinkSitTarget
    slwiki:
      - Object
      - Prim
      - Link
    slwiki_categories:
      - LSL_Link
      - LSL_Link/Get
      - LSL_Avatar
      - LSL_Prim
      - LSL_Sit
  scope: support.function.builtin
  type: key
  version: '11.08.10.238207'
llSetVelocity:
  description: |-
    Sets an objects velocity, in local coords if local == TRUE (if the
    script is physical)
  params:
    - name: velocity
      type: vector
    - description: |-
        boolean, if TRUE velocity is treated as a local directional vector,
        if FALSE velocity is treated as a region directional vector
      name: local
      type: integer
  related:
    constants:
      - STATUS_PHYSICS
      - 'TRUE'
      - 'FALSE'
    functions:
      - llSetForce
      - llSetAngularVelocity
    slwiki:
      - Viewer_coordinate_frames#Local
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
  version: '11.08.10.238207'
llCastRay:
  description: |-
    Casts a ray into the physics world from 'start' to 'end' and returns
    data according to details in params
  params:
    - description: starting location
      name: start
      type: vector
    - description: ending location
      name: end
      type: vector
    - description: any number of option flags and their parameters
      name: params
      type: list
  related:
    constants:
      - RCERR_UNKNOWN
      - RCERR_SIM_PERF_LOW
      - RCERR_CAST_TIME_EXCEEDED
      - RC_REJECT_TYPES
      - RC_REJECT_AGENTS
      - RC_REJECT_PHYSICAL
      - RC_REJECT_NONPHYSICAL
      - RC_REJECT_LAND
      - RC_DATA_FLAGS
      - RC_GET_NORMAL
      - RC_GET_ROOT_KEY
      - RC_GET_LINK_NUM
      - RC_MAX_HITS
      - RC_DETECT_PHANTOM
      - NULL_KEY
    functions:
      - llGetRot
      - llGetCameraRot
      - llDumpList2String
      - llList2Integer
    slwiki:
      - Vector
      - Key
    slwiki_categories:
      - LSL_Physics
      - LSL_Light
  scope: support.function.builtin
  type: list
  version: '11.09.23.241511'
llGetMassMKS:
  description: Returns the mass of the linkset in kilograms
  related:
    functions:
      - llGetMass
      - llGetObjectMass
      - llGetOmega
      - llGetVel
      - llGetTorque
      - llGetAccel
    slwiki_categories:
      - LSL_Physics
      - LSL_Object
  scope: support.function.builtin
  type: float
  version: '11.09.23.241511'
llSetPhysicsMaterial:
  description: |-
    Sets the requested attributes of the root object's physics material
  params:
    - description: |-
        bitwise combínation of DENSITY, FRICTION, RESTITUTION and
        GRAVITY_MULTIPLIER
      name: mask
      type: integer
    - description: range [-1.0, 28.0], defaults to 1.0
      name: gravity_multiplier
      type: float
    - description: range [0.0, 1.0], defaults to [0.3, 0.9]
      name: restitution
      type: float
    - description: range [0.0, 255.0], defaults to [0.2, 0.9]
      name: friction
      type: float
    - description: range [1.0, 22587.0] kg / m³, defaults to 1000.0
      name: density
      type: float
  related:
    constants:
      - DENSITY
      - FRICTION
      - RESTITUTION
      - GRAVITY_MULTIPLIER
      - PRIM_MATERIAL
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_PLASTIC
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetMassMKS
      - llGetPhysicsMaterial
    slwiki:
      - Physics_Material_Settings_test
    slwiki_categories:
      - LSL_Physics
      - LSL_Material
      - LSL_Physics/Material
    wikipedia:
        en:
          - Interval_(mathematics)#Notations_for_intervals
  scope: support.function.builtin
  version: '11.09.23.241511'
llGetPhysicsMaterial:
  description: |-
    Returns the gravity multiplier, restitution, friction, and density
    of the linkset as a list in that order
  related:
    constants:
      - DENSITY
      - FRICTION
      - RESTITUTION
      - GRAVITY_MULTIPLIER
      - PRIM_MATERIAL
      - PRIM_MATERIAL_STONE
      - PRIM_MATERIAL_METAL
      - PRIM_MATERIAL_GLASS
      - PRIM_MATERIAL_WOOD
      - PRIM_MATERIAL_FLESH
      - PRIM_MATERIAL_PLASTIC
      - PRIM_MATERIAL_RUBBER
    functions:
      - llGetMassMKS
      - llSetPhysicsMaterial
    slwiki:
      - Physics_Material_Settings_test
    slwiki_categories:
      - LSL_Physics
      - LSL_Material
      - LSL_Physics/Material
  scope: support.function.builtin
  type: list
  version: '11.09.23.241511'
llManageEstateAccess:
  description: |-
      To add or remove agents from the estate's agent access or ban lists or
      groups from the estate's group access list. Only works for objects owned
      by the Estate Owner or an Estate Manager. Returns TRUE if successful and
      FALSE if throttled, on invalid action, on invalid or null id, or if object
      owner is not allowed to manage the estate. 'action' can be any of:
      ESTATE_ACCESS_ALLOWED_[AGENT/GROUP]_[ADD/REMOVE] or
      ESTATE_ACCESS_BANNED_AGENT_[ADD/REMOVE].
  params:
    - description: ESTATE_ACCES_* flag
      name: action
      type: integer
    - description: avatar or group UUID
      name: id
      type: key
  related:
    constants:
      - DEBUG_CHANNEL
      - ESTATE_ACCESS_ALLOWED_AGENT_ADD
      - ESTATE_ACCESS_ALLOWED_AGENT_REMOVE
      - ESTATE_ACCESS_ALLOWED_GROUP_ADD
      - ESTATE_ACCESS_ALLOWED_GROUP_REMOVE
      - ESTATE_ACCESS_BANNED_AGENT_ADD
      - ESTATE_ACCESS_BANNED_AGENT_REMOVE
      - 'TRUE'
      - 'FALSE'
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
    functions:
      - llAddToLandPassList
      - llAddToLandBanList
      - llRemoveFromLandBanList
      - llRemoveFromLandPassList
      - llResetLandBanList
      - llResetLandPassList
    slwiki:
      - UUID
      - Estate_Manager
    slwiki_categories:
      - LSL_Integer
      - LSL_Integer/boolean
      - LSL_Functions/Returns_a_integer/boolean
      - LSL_Avatar/As_A_Parameter
      - LSL_Security
      - LSL_Region
      - LSL_Estate
  scope: support.function.builtin
  type: integer.boolean
  version: '11.10.18.243270'
llSetKeyframedMotion:
  description: |-
    Requests that a nonphysical object be keyframed according to keyframe list
  params:
    - description: |-
        strided list with [vector position, rotation orientation, float
        time]
      name: keyframes
      type: list
    - description: modifiers and future options
      name: options
      type: list
  related:
    constants:
      - KFM_COMMAND
      - KFM_CMD_PLAY
      - KFM_CMD_STOP
      - KFM_CMD_PAUSE
      - KFM_MODE
      - KFM_FORWARD
      - KFM_LOOP
      - KFM_PING_PONG
      - KFM_REVERSE
      - KFM_DATA
      - KFM_ROTATION
      - KFM_TRANSLATION
      - ZERO_VECTOR
      - ZERO_ROTATION
    events:
      - moving_end
      - at_target
      - at_rot_target
    functions:
      - llSetPos
      - llSetRegionPos
      - llEuler2Rot
      - llRot2Euler
    slwiki_categories:
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
  version: '11.11.09.244706'
llTransferLindenDollars:
  description: |-
    Transfer amount of linden dollars (L$) from script owner to destination.
    Returns a key to a corresponding transaction_result event for the success
    of the transfer.
  params:
    - description: avatar UUID
      name: destination
      type: key
    - description: number of L$, must be greater than zero
      name: amount
      type: integer
  related:
    constants:
      - DEBUG_CHANNEL
      - PERMISSION_DEBIT
    events:
      - run_time_permissions
      - transaction_result
      - money
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llGiveMoney
      - llSetPayPrice
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Money
      - LSL_Transfer
  required_permissions:
    - PERMISSION_DEBIT
  scope: support.function.builtin
  type: key
  version: '11.12.03.246118'
llGetParcelMusicURL:
  description: Gets the streaming audio URL for the parcel of land on which the
      object is located
  related:
    functions:
      - llSetParcelMusicURL
    slwiki:
      - Streaming_Music
    slwiki_categories:
      - LSL_Parcel
      - LSL_Sound
      - LSL_Media
  scope: support.function.builtin
  type: string
  version: '11.12.03.246118'
llScriptProfiler:
  description: |-
      Enabled or disables script profiling options. Currently only supports
      PROFILE_SCRIPT_MEMORY (mono only) and PROFILE_NONE.
      MAY SIGNIFICANTLY REDUCE SCRIPT PERFORMANCE!
  params:
    - description: PROFILE_* flags
      name: flags
      type: integer
  related:
    constants:
      - PROFILE_NONE
      - PROFILE_SCRIPT_MEMORY
    functions:
      - llGetSPMaxMemory
      - llGetMemoryLimit
      - llSetMemoryLimit
    slwiki:
      - Mono
      - LSO
    slwiki_categories:
      - LSL_Script
      - LSL_Memory
      - LSL_Script_Profiler
  scope: support.function.builtin
  version: '11.06.17.233176'
llGetSPMaxMemory:
  description: |-
    Returns the maximum used memory for the current script. Only valid
    after using PROFILE_SCRIPT_MEMORY. Non-mono scripts always use 16k.
  related:
    functions:
      - llScriptProfiler
      - llGetMemoryLimit
      - llSetMemoryLimit
      - llGetFreeMemory
      - llGetUsedMemory
    slwiki:
      - Mono
      - LSO
    slwiki_categories:
      - LSL_Script
      - LSL_Memory
      - LSL_Script_Profiler
  scope: support.function.builtin
  type: integer
  version: '11.06.17.233176'
llGetUsedMemory:
  description: |-
    Returns the current used memory for the current script. Non-mono
    scripts always use 16k.
  related:
    functions:
      - llGetFreeMemory
      - llScriptProfiler
      - llSetMemoryLimit
      - llGetMemoryLimit
    slwiki:
      - Mono
      - LSO
    slwiki_categories:
      - LSL_Script
      - LSL_Memory
  scope: support.function.builtin
  type: integer
  version: '11.06.17.233176'
llSetAngularVelocity:
  description: |-
    Sets an objects angular velocity, in local coords if local == TRUE
    (if the script is physical)
  params:
    - description: initial omega
      name: angular_velocity
      type: vector
    - description: |-
        boolean, if TRUE force is treated as a local directional vector,
        if FALSE force is treated as a region directional vector
      name: local
      type: integer
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
      - STATUS_PHYSICS
    functions:
      - llApplyRotationalImpulse
      - llTargetOmega
      - llSetVelocity
    slwiki:
      - Viewer_coordinate_frames#Local
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Integer
      - LSL_Integer/boolean
      - LSL_Physics
      - LSL_Movement
  scope: support.function.builtin
  version: '11.08.10.238207'
llSetRegionPos:
  description: |-
    Sets the position anywhere within the region (if the object isn't
    physical)
  params:
    - description: position in region coordinates
      name: pos
      type: vector
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
      - STATUS_PHYSICS
    functions:
      - llGetLocalPos
      - llGetRootPosition
      - llGetRootRotation
      - llGetPos
      - llSetPos
      - llEdgeOfWorld
    slwiki:
      - Viewer_coordinate_frames#Region
      - WarpPos
    slwiki_categories:
      - LSL_Integer
      - LSL_Integer/boolean
      - LSL_Movement
      - LSL_Prim
  scope: support.function.builtin
  type: integer
  version: '12.01.24.248357'
llGetAgentList:
  description: |-
    Requests a list of (max 100) agents currently in the region, limited
    by the scope parameter
  params:
    - description: AGENT_LIST_* flag
      name: scope
      type: integer
    - description: unused parameter
      name: options
      type: list
  related:
    constants:
      - AGENT_LIST_PARCEL
      - AGENT_LIST_PARCEL_OWNER
      - AGENT_LIST_REGION
    functions:
      - llGetAgentSize
      - llGetRegionAgentCount
    slwiki:
      - LSL_Errors#Script_run-time_error:_Stack-Heap_Collision
    slwiki_categories:
      - LSL_Avatar
      - LSL_Owner
      - LSL_Parcel
      - LSL_Region
  scope: support.function.builtin
  type: list
  version: '12.04.30.255166'
llAttachToAvatarTemp:
  description: |-
    Attaches the object to the avatar who has granted permission to the
    script, with the exception that the object will not create new inventory for
    the user, and will disappear on detach or disconnect
  params:
    - default: ATTACH_RHAND
      description: ATTACH_* constant or valid value
      name: attach_point
      type: integer
  related:
    constants:
      - PERMISSION_ATTACH
      - ATTACH_AVATAR_CENTER
      - ATTACH_BACK
      - ATTACH_BELLY
      - ATTACH_CHEST
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REAR
      - ATTACH_FACE_REYE
      - ATTACH_FACE_TONGUE
      - ATTACH_GROIN
      - ATTACH_HEAD
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_HUD_BOTTOM
      - ATTACH_HUD_BOTTOM_LEFT
      - ATTACH_HUD_BOTTOM_RIGHT
      - ATTACH_HUD_CENTER_1
      - ATTACH_HUD_CENTER_2
      - ATTACH_HUD_TOP_CENTER
      - ATTACH_HUD_TOP_LEFT
      - ATTACH_HUD_TOP_RIGHT
      - ATTACH_LEAR
      - ATTACH_LEFT_PEC
      - ATTACH_LEYE
      - ATTACH_LFOOT
      - ATTACH_LHAND
      - ATTACH_LHAND_RING1
      - ATTACH_LHIP
      - ATTACH_LLARM
      - ATTACH_LLLEG
      - ATTACH_LSHOULDER
      - ATTACH_LUARM
      - ATTACH_LULEG
      - ATTACH_LWING
      - ATTACH_MOUTH
      - ATTACH_NECK
      - ATTACH_NOSE
      - ATTACH_PELVIS
      - ATTACH_REAR
      - ATTACH_REYE
      - ATTACH_RFOOT
      - ATTACH_RHAND
      - ATTACH_RHAND_RING1
      - ATTACH_RHIP
      - ATTACH_RIGHT_PEC
      - ATTACH_RLARM
      - ATTACH_RLLEG
      - ATTACH_RSHOULDER
      - ATTACH_RUARM
      - ATTACH_RULEG
      - ATTACH_RWING
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
    events:
      - run_time_permissions
    functions:
      - llAttachToAvatar
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llDetachFromAvatar
      - llGetAttached
    slwiki:
      - Project_Bento_Skeleton_Guide
    slwiki_categories:
      - LSL_Requires_Permissions
      - LSL_Permissions/Script
      - LSL_Attachment
      - LSL_Avatar
  required_permissions:
    - PERMISSION_ATTACH
  scope: support.function.builtin
  version: '12.07.24.262437'
llTeleportAgent:
  description: |-
    Requests a teleport of avatar to a landmark stored in the object's
    inventory. If no landmark is provided (an empty string), the avatar is
    teleported to the location position in the current region. In either case,
    the avatar is turned to face the position given by look_at in local
    coordinates.
  params:
    - description: |-
        avatar UUID that is in the same region (the avatar to teleport
        must be the owner)
      name: avatar
      type: key
    - description: |-
        a landmark in the inventory of the prim this script is in or
        an empty string (for teleporting within the same region)
      name: landmark
      type: string
    - description: |-
        the position within the local region to teleport the avatar to
        if no landmark was provided
      name: position
      type: vector
    - description: |-
        the position within the region that the avatar should be turned
        to face upon arrival
      name: look_at
      type: vector
  related:
    constants:
      - DEBUG_CHANNEL
      - PERMISSION_TELEPORT
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llTeleportAgentGlobalCoords
      - llGetOwner
      - llUnSit
    slwiki:
      - UUID
      - Region
      - Experience_Tools
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Avatar/As_A_Parameter
      - LSL_Requires_Permissions
      - LSL_Teleport
      - LSL_Inventory
      - LSL_Vector/direction
  required_permissions:
    - PERMISSION_TELEPORT
  scope: support.function.builtin
  version: '12.07.24.262437'
llTeleportAgentGlobalCoords:
  description: |-
      Teleports an agent to set of a region_coordinates within a region at the
      specified global_coordinates. The agent lands facing the position defined
      by look_at local coordinates. A region's global coordinates can be
      retrieved using llRequestSimulatorData(region_name, DATA_SIM_POS).
  params:
    - name: agent
      type: key
    - name: global_coordinates
      type: vector
    - name: region_coordinates
      type: vector
    - name: look_at
      type: vector
  related:
    constants:
      - DEBUG_CHANNEL
      - PERMISSION_TELEPORT
      - DATA_SIM_POS
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llRequestSimulatorData
      - llTeleportAgent
      - llAttachToAvatarTemp
      - llUnSit
    slwiki:
      - UUID
      - Region
      - Viewer_coordinate_frames#Region
      - Experience_Tools
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Vector/direction
      - LSL_Avatar/As_A_Parameter
      - LSL_Requires_Permissions
      - LSL_Teleport
  required_permissions:
    - PERMISSION_TELEPORT
  scope: support.function.builtin
  version: '12.07.24.262437'
llGenerateKey:
  description: Return a unique generated key, should never be NULL_KEY
  energy: 0
  related:
    constants:
      - NULL_KEY
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Key
      - LSL_Encryption
    wikipedia:
        en:
          - UUID#Version_5_.28SHA-1_hash.29
  scope: support.function.builtin
  type: key
llNavigateTo:
  description: 'For AI Character: Navigate to destination'
  params:
    - description: |-
        position in region coordinates for the character to navigate to
      name: point
      type: vector
    - description: list of parameters to control the type of pathfinding used
      name: options
      type: list
  related:
    constants:
      - FORCE_DIRECT_PATH
      - 'TRUE'
      - 'FALSE'
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_List/instructions
      - LSL_Integer/boolean
      - LSL_Pathfinding
  scope: support.function.builtin
  version: '12.07.31.262785'
llCreateCharacter:
  description: Convert linkset to AI Character which can navigate the world
  params:
    - description: character configuration options
      name: options
      type: list
  related:
    constants:
      - CHARACTER_DESIRED_SPEED
      - CHARACTER_RADIUS
      - CHARACTER_LENGTH
      - CHARACTER_ORIENTATION
      - VERTICAL
      - HORIZONTAL
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_FAST
      - TRAVERSAL_TYPE_NONE
      - CHARACTER_TYPE
      - CHARACTER_TYPE_NONE
      - CHARACTER_TYPE_A
      - CHARACTER_TYPE_B
      - CHARACTER_TYPE_C
      - CHARACTER_TYPE_D
      - CHARACTER_AVOIDANCE_MODE
      - AVOID_CHARACTERS
      - AVOID_DYNAMIC_OBSTACLES
      - AVOID_NONE
      - CHARACTER_MAX_ACCEL
      - CHARACTER_MAX_DECEL
      - CHARACTER_DESIRED_TURN_SPEED
      - CHARACTER_MAX_TURN_RADIUS
      - CHARACTER_MAX_SPEED
      - CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES
      - CHARACTER_STAY_WITHIN_PARCEL
      - 'TRUE'
      - 'FALSE'
    events:
      - path_update
    functions:
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki:
      - Mesh/Mesh_physics#Physics_Resource_Cost
    slwiki_categories:
      - LSL_Pathfinding
    wikipedia:
        en:
          - Interval_(mathematics)#Notations_for_intervals
  scope: support.function.builtin
  version: '12.07.31.262785'
llPursue:
  description: 'For AI Character: Chase after a target'
  params:
    - description: group, avatar or object UUID to pursue
      name: target
      type: key
    - description: parameters for pursuit
      name: options
      type: list
  related:
    constants:
      - PURSUIT_OFFSET
      - REQUIRE_LINE_OF_SIGHT
      - PURSUIT_FUZZ_FACTOR
      - PURSUIT_INTERCEPT
      - PURSUIT_GOAL_TOLERANCE
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llWanderWithin
      - llGetSimStats
    slwiki:
      - Mesh/Mesh_physics#Physics_Resource_Cost
    slwiki_categories:
      - LSL_Pathfinding
  scope: support.function.builtin
  version: '12.07.31.262785'
llWanderWithin:
  description: 'For AI Character: Wander within a specified volume'
  params:
    - description: central point to wander about
      name: center
      type: vector
    - description: |-
        sets how far the character may wander from origin, along each
        world-aligned axis
      name: radius
      type: vector
    - description: WANDER_* flags and their parameters
      name: options
      type: list
  related:
    constants:
      - WANDER_PAUSE_AT_WAYPOINTS
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llGetSimStats
    slwiki:
      - Mesh/Mesh_physics#Physics_Resource_Cost
    slwiki_categories:
      - LSL_Pathfinding
  scope: support.function.builtin
  version: '12.07.31.262785'
llFleeFrom:
  description: 'For AI Character: Flee from a point'
  params:
    - description: position in region coordinates from which to flee
      name: source
      type: vector
    - description: distance in meters to flee from position
      name: radius
      type: float
    - description: parameter currently unused
      name: options
      type: list
  related:
    constants:
      - PU_FAILURE_INVALID_GOAL
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_List/instructions
      - LSL_Pathfinding
  scope: support.function.builtin
  version: '12.07.31.262785'
llPatrolPoints:
  description: 'For AI Character: Patrol a list of points'
  params:
    - description: |-
        A list of vectors for the character to travel through sequentially.
        The list must contain at least two entries.
      name: points
      type: list
    - description: PATROL_* flags and their parameters
      name: options
      type: list
  related:
    constants:
      - PATROL_PAUSE_AT_WAYPOINTS
      - 'TRUE'
      - 'FALSE'
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki_categories:
      - LSL_Pathfinding
  scope: support.function.builtin
  version: '12.07.31.262785'
llExecCharacterCmd:
  description: 'For AI Character: Execute a character command'
  params:
    - description: CHARACTER_CMD_* to be sent
      name: cmd
      type: integer
    - description: CHARACTER_CMD_* parameters
      name: options
      type: list
  related:
    constants:
      - CHARACTER_CMD_JUMP
      - CHARACTER_CMD_SMOOTH_STOP
      - CHARACTER_CMD_STOP
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki_categories:
      - LSL_Pathfinding
      - LSL_List/instructions
  scope: support.function.builtin
  version: '12.07.31.262785'
llDeleteCharacter:
  description: Convert linkset from AI Character to Physics object
  related:
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki_categories:
      - LSL_Pathfinding
  scope: support.function.builtin
  version: '12.07.31.262785'
llUpdateCharacter:
  description: Change the AI Character's settings
  params:
    - description: character configuration options
      name: options
      type: list
  related:
    constants:
      - CHARACTER_DESIRED_SPEED
      - CHARACTER_RADIUS
      - CHARACTER_LENGTH
      - CHARACTER_ORIENTATION
      - VERTICAL
      - HORIZONTAL
      - TRAVERSAL_TYPE
      - TRAVERSAL_TYPE_SLOW
      - TRAVERSAL_TYPE_FAST
      - TRAVERSAL_TYPE_NONE
      - CHARACTER_TYPE
      - CHARACTER_TYPE_NONE
      - CHARACTER_TYPE_A
      - CHARACTER_TYPE_B
      - CHARACTER_TYPE_C
      - CHARACTER_TYPE_D
      - CHARACTER_AVOIDANCE_MODE
      - AVOID_CHARACTERS
      - AVOID_DYNAMIC_OBSTACLES
      - AVOID_NONE
      - CHARACTER_MAX_ACCEL
      - CHARACTER_MAX_DECEL
      - CHARACTER_DESIRED_TURN_SPEED
      - CHARACTER_MAX_TURN_RADIUS
      - CHARACTER_MAX_SPEED
      - CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES
      - CHARACTER_STAY_WITHIN_PARCEL
      - 'TRUE'
      - 'FALSE'
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki:
      - Mesh/Mesh_physics#Physics_Resource_Cost
    slwiki_categories:
      - LSL_Pathfinding
      - LSL_List/instructions
    wikipedia:
        en:
          - Interval_(mathematics)#Notations_for_intervals
  scope: support.function.builtin
  version: '12.07.31.262785'
llEvade:
  description: 'For AI Character: Evade a specified target'
  params:
    - description: group, avatar or object UUID to evade
      name: target
      type: key
    - description: no options currently available
      name: options
      type: list
  related:
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki:
      - Object
      - UUID
    slwiki_categories:
      - LSL_Pathfinding
      - LSL_Group
      - LSL_Avatar
      - LSL_List/instructions
  scope: support.function.builtin
  version: '12.07.31.262785'
llGetClosestNavPoint:
  description: 'For AI Character: Get the closest navigable point to the point provided'
  params:
    - description: a point in region-local space
      name: point
      type: vector
    - description: GCNP_* and other flags with their parameters
      name: options
      type: list
  related:
    constants:
      - GCNP_RADIUS
      - GCNP_STATIC
      - 'TRUE'
      - 'FALSE'
      - CHARACTER_TYPE
      - CHARACTER_TYPE_NONE
      - CHARACTER_TYPE_A
      - CHARACTER_TYPE_B
      - CHARACTER_TYPE_C
      - CHARACTER_TYPE_D
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetStaticPath
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki:
      - Viewer_coordinate_frames#Region
    slwiki_categories:
      - LSL_Pathfinding
      - LSL_List/instructions
  scope: support.function.builtin
  type: list
  version: '12.07.31.262785'
llGetStaticPath:
  description: |-
    Returns a list of position vectors indicating pathfinding waypoints
    between positions at start and end, for a character of a given radius and
    a status code of 0 for success, else a status code indicating the sort of
    error
  params:
    - description: starting position
      name: start
      type: vector
    - description: end position
      name: end
      type: vector
    - description: |-
        radius of the character that we're creating a path for, in range
        [0.125, 5.0] meters
      name: radius
      type: float
    - description: |-
        currently only accepts CHARACTER_TYPE and an appropriate valid value
      name: params
      type: list
  related:
    constants:
      - PU_EVADE_HIDDEN
      - PU_EVADE_SPOTTED
      - PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED
      - PU_FAILURE_INVALID_GOAL
      - PU_FAILURE_INVALID_START
      - PU_FAILURE_NO_NAVMESH
      - PU_FAILURE_NO_VALID_DESTINATION
      - PU_FAILURE_OTHER
      - PU_FAILURE_PARCEL_UNREACHABLE
      - PU_FAILURE_TARGET_GONE
      - PU_FAILURE_UNREACHABLE
      - PU_GOAL_REACHED
      - PU_SLOWDOWN_DISTANCE_REACHED
      - CHARACTER_TYPE
      - CHARACTER_TYPE_NONE
      - CHARACTER_TYPE_A
      - CHARACTER_TYPE_B
      - CHARACTER_TYPE_C
      - CHARACTER_TYPE_D
    events:
      - path_update
    functions:
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
      - llGetSimStats
    slwiki_categories:
      - LSL_Pathfinding
    wikipedia:
        en:
          - Interval_(mathematics)#Notations_for_intervals
  scope: support.function.builtin
  type: list
  version: '12.07.31.262785'
llGetSimStats:
  description: Returns the value of a particular simulator statistic
  params:
    - description: a SIM_STAT_* flag
      name: stat_type
      type: integer
  related:
    constants:
      - SIM_STAT_PCT_CHARS_STEPPED
    functions:
      - llAbs
      - llCreateCharacter
      - llUpdateCharacter
      - llDeleteCharacter
      - llEvade
      - llExecCharacterCmd
      - llGetStaticPath
      - llGetClosestNavPoint
      - llFleeFrom
      - llNavigateTo
      - llPatrolPoints
      - llPursue
      - llWanderWithin
    slwiki:
      - Integer
    slwiki_categories:
      - LSL_Region
      - LSL_Pathfinding
    wikipedia:
        en:
          - Interval_(mathematics)#Notations_for_intervals
  scope: support.function.builtin
  type: float
  version: '12.10.26.266333'
llSetAnimationOverride:
  description: Set the animation that will play for the given animation state.
  params:
    - description: animation state to be overridden
      name: anim_state
      type: string
    - description: |-
        an animation in the inventory of the prim this script is in or
        the name of a built-in animation
      name: anim
      type: string
  related:
    constants:
      - PERMISSION_OVERRIDE_ANIMATIONS
      - DEBUG_CHANNEL
      - PERMISSION_TRIGGER_ANIMATION
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llGetAnimationOverride
      - llResetAnimationOverride
      - llStartAnimation
      - llStopAnimation
    slwiki:
      - Internal_Animations
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Animation
      - LSL_Animation/Override
  required_permissions:
    - PERMISSION_OVERRIDE_ANIMATIONS
  scope: support.function.builtin
  usage:
    - llSetAnimationOverride("Crouching", string anim);
    - llSetAnimationOverride("CrouchWalking", string anim);
    - llSetAnimationOverride("Falling Down", string anim);
    - llSetAnimationOverride("Flying", string anim);
    - llSetAnimationOverride("FlyingSlow", string anim);
    - llSetAnimationOverride("Hovering", string anim);
    - llSetAnimationOverride("Hovering Down", string anim);
    - llSetAnimationOverride("Hovering Up", string anim);
    - llSetAnimationOverride("Jumping", string anim);
    - llSetAnimationOverride("Landing", string anim);
    - llSetAnimationOverride("PreJumping", string anim);
    - llSetAnimationOverride("Running", string anim);
    - llSetAnimationOverride("Sitting", string anim);
    - llSetAnimationOverride("Sitting on Ground", string anim);
    - llSetAnimationOverride("Standing", string anim);
    - llSetAnimationOverride("Standing Up", string anim);
    - llSetAnimationOverride("Striding", string anim);
    - llSetAnimationOverride("Soft Landing", string anim);
    - llSetAnimationOverride("Taking Off", string anim);
    - llSetAnimationOverride("Turning Left", string anim);
    - llSetAnimationOverride("Turning Right", string anim);
    - llSetAnimationOverride("Walking", string anim);
  version: '13.04.12.273874'
llGetAnimationOverride:
  description: |-
    Get the name of the animation currently set for the given animation
    state. Requires either PERMISSION_OVERRIDE_ANIMATIONS or
    PERMISSION_TRIGGER_ANIMATION.
  params:
    - name: anim_state
      type: string
  related:
    constants:
      - PERMISSION_OVERRIDE_ANIMATIONS
      - PERMISSION_TRIGGER_ANIMATION
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetAnimationOverride
      - llResetAnimationOverride
    slwiki:
      - Internal_Animations
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Animation
      - LSL_Animation/Override
  required_permissions:
    - PERMISSION_OVERRIDE_ANIMATIONS
    - PERMISSION_TRIGGER_ANIMATION
  scope: support.function.builtin
  type: string
  usage:
    - string anim = llGetAnimationOverride("Crouching");
    - string anim = llGetAnimationOverride("CrouchWalking");
    - string anim = llGetAnimationOverride("Falling Down");
    - string anim = llGetAnimationOverride("Flying");
    - string anim = llGetAnimationOverride("FlyingSlow");
    - string anim = llGetAnimationOverride("Hovering");
    - string anim = llGetAnimationOverride("Hovering Down");
    - string anim = llGetAnimationOverride("Hovering Up");
    - string anim = llGetAnimationOverride("Jumping");
    - string anim = llGetAnimationOverride("Landing");
    - string anim = llGetAnimationOverride("PreJumping");
    - string anim = llGetAnimationOverride("Running");
    - string anim = llGetAnimationOverride("Sitting");
    - string anim = llGetAnimationOverride("Sitting on Ground");
    - string anim = llGetAnimationOverride("Standing");
    - string anim = llGetAnimationOverride("Standing Up");
    - string anim = llGetAnimationOverride("Striding");
    - string anim = llGetAnimationOverride("Soft Landing");
    - string anim = llGetAnimationOverride("Taking Off");
    - string anim = llGetAnimationOverride("Turning Left");
    - string anim = llGetAnimationOverride("Turning Right");
    - string anim = llGetAnimationOverride("Walking");
  version: '13.04.12.273874'
llResetAnimationOverride:
  description: |-
    Resets the animation for the given animation state to the default.
    The special value "ALL" will reset the animations for all states.
  params:
    - name: anim_state
      type: string
  related:
    constants:
      - PERMISSION_OVERRIDE_ANIMATIONS
      - PERMISSION_TRIGGER_ANIMATION
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llSetAnimationOverride
      - llGetAnimationOverride
    slwiki:
      - Internal_Animations
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Animation
      - LSL_Animation/Override
  required_permissions:
    - PERMISSION_OVERRIDE_ANIMATIONS
  scope: support.function.builtin
  usage:
    - llResetAnimationOverride("Crouching");
    - llResetAnimationOverride("CrouchWalking");
    - llResetAnimationOverride("Falling Down");
    - llResetAnimationOverride("Flying");
    - llResetAnimationOverride("FlyingSlow");
    - llResetAnimationOverride("Hovering");
    - llResetAnimationOverride("Hovering Down");
    - llResetAnimationOverride("Hovering Up");
    - llResetAnimationOverride("Jumping");
    - llResetAnimationOverride("Landing");
    - llResetAnimationOverride("PreJumping");
    - llResetAnimationOverride("Running");
    - llResetAnimationOverride("Sitting");
    - llResetAnimationOverride("Sitting on Ground");
    - llResetAnimationOverride("Standing");
    - llResetAnimationOverride("Standing Up");
    - llResetAnimationOverride("Striding");
    - llResetAnimationOverride("Soft Landing");
    - llResetAnimationOverride("Taking Off");
    - llResetAnimationOverride("Turning Left");
    - llResetAnimationOverride("Turning Right");
    - llResetAnimationOverride("Walking");
  version: '13.04.12.273874'
llJson2List:
  description: Converts the top level of the json string to a list
  params:
    - description: JSON-formet source string
      name: json
      type: string
  related:
    functions:
      - llList2Json
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
    slwiki:
      - Json_usage_in_LSL
      - Typecast
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
      - LSL_JSON
  scope: support.function.builtin
  type: list
  version: '13.05.20.276191'
llList2Json:
  description: |-
    Converts either a strided list of key:value pairs to a JSON_OBJECT
    or a list of values to a JSON_ARRAY. type must be either JSON_OBJECT or
    JSON_ARRAY.
  params:
    - name: type
      type: string
    - name: values
      type: list
  related:
    constants:
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
    functions:
      - llJson2List
      - llJsonGetValue
      - llJsonSetValue
      - llJsonValueType
    slwiki:
      - Json_usage_in_LSL
      - Typecast
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
      - LSL_JSON
  scope: support.function.builtin
  type: string
  version: '13.05.20.276191'
llJsonGetValue:
  description: Gets the value indicated by specifiers from the json string
  params:
    - name: json
      type: string
    - name: specifiers
      type: list
  related:
    constants:
      - JSON_NULL
      - JSON_INVALID
    functions:
      - llJson2List
      - llList2Json
      - llJsonSetValue
      - llJsonValueType
    slwiki:
      - Json_usage_in_LSL
      - Typecast
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
      - LSL_JSON
  scope: support.function.builtin
  type: string
llJsonSetValue:
  description: |-
    Returns a new json string that is the json given with the value indicated
    by specifiers set to value
  params:
    - description: source JSON data
      name: json
      type: string
    - description: |-
        location of the relevant value, does NOT support negative indexes
      name: specifiers
      type: list
    - description: new value or JSON_DELETE flag
      name: value
      type: string
  related:
    constants:
      - JSON_INVALID
      - JSON_APPEND
      - JSON_DELETE
    functions:
      - llJson2List
      - llList2Json
      - llJsonGetValue
      - llJsonValueType
    slwiki:
      - Json_usage_in_LSL
      - Typecast
    slwiki_categories:
      - LSL_Negative_Index
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
      - LSL_JSON
  scope: support.function.builtin
  type: string
  version: '13.05.20.276191'
llJsonValueType:
  description: |-
    Returns the type constant for the value in json indicated by specifiers
  params:
    - name: json
      type: string
    - name: specifiers
      type: list
  related:
    constants:
      - JSON_INVALID
      - JSON_OBJECT
      - JSON_ARRAY
      - JSON_NUMBER
      - JSON_STRING
      - JSON_NULL
      - JSON_TRUE
      - JSON_FALSE
      - JSON_DELETE
    functions:
      - llJson2List
      - llList2Json
      - llJsonGetValue
      - llJsonSetValue
    slwiki:
      - Json_usage_in_LSL
      - Typecast
    slwiki_categories:
      - LSL_List
      - LSL_String
      - LSL_Data_Conversion
      - LSL_JSON
  scope: support.function.builtin
  type: string
  version: '13.05.20.276191'
llReturnObjectsByID:
  description: |-
      Return objects using their UUIDs.
      Requires that the script owner owns the parcel the returned objects are
      in, or is an estate manager or region owner.
  params:
    - name: objects
      type: list
  related:
    constants:
      - PERMISSION_RETURN_OBJECTS
      - ERR_GENERIC
      - ERR_PARCEL_PERMISSIONS
      - ERR_MALFORMED_PARAMS
      - ERR_RUNTIME_PERMISSIONS
      - ERR_THROTTLED
      - DEBUG_CHANNEL
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByOwner
      - llGetParcelPrimOwners
      - llDie
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Parcel
      - LSL_Region
      - LSL_Security
      - LSL_Cleanup
  required_permissions:
    - PERMISSION_RETURN_OBJECTS
  scope: support.function.builtin
  type: integer
  version: '13.06.18.277494'
llReturnObjectsByOwner:
  description: |-
      Return objects based upon their owner and a scope of parcel, parcel owner,
      or region. Requires that the script owner owns the parcel the returned
      objects are in, or is an estate manager or region owner.
  params:
    - name: owner
      type: key
    - name: scope
      type: integer
  related:
    constants:
      - PERMISSION_RETURN_OBJECTS
      - ERR_GENERIC
      - ERR_PARCEL_PERMISSIONS
      - ERR_MALFORMED_PARAMS
      - ERR_RUNTIME_PERMISSIONS
      - ERR_THROTTLED
      - DEBUG_CHANNEL
    events:
      - run_time_permissions
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llReturnObjectsByID
      - llGetParcelPrimOwners
      - llDie
    slwiki:
      - UUID
    slwiki_categories:
      - LSL_Permissions/Script
      - LSL_Requires_Permissions
      - LSL_Parcel
      - LSL_Region
      - LSL_Security
      - LSL_Cleanup
  required_permissions:
    - PERMISSION_RETURN_OBJECTS
  scope: support.function.builtin
  type: integer
  version: '13.06.18.277494'
llXorBase64:
  description: |-
      Performs an exclusive or on two Base64 strings and returns a Base64
      string. str2 repeats if it is shorter than str1.
  params:
    - description: Base64 string
      name: str1
      type: string
    - description: Base64 string
      name: str2
      type: string
  related:
    functions:
      - llBase64ToInteger
      - llBase64ToString
      - llIntegerToBase64
      - llStringToBase64
    slwiki_categories:
      - LSL_Base64
      - LSL_Encoding
    wikipedia:
        en:
          - Base64
          - Least_Common_Multiple
          - Greatest_Common_Divisor
  scope: support.function.builtin
  type: string
llScaleByFactor:
  description: |-
      Attempts to resize the entire object by ScalingFactor, maintaining the
      size-position ratios of the prims.

      Resizing is subject to prim scale limits and linkability limits. This
      function can not resize the object if the linkset is physical, a
      pathfinding character, in a keyframed motion, or if resizing would cause
      the parcel to overflow. Returns a boolean (an integer) TRUE if it
      succeeds, FALSE if it fails.
  params:
    - name: scaling_factor
      type: float
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    functions:
      - llGetMinScaleFactor
      - llGetMaxScaleFactor
      - llSetPrimitiveParams
      - llSetLinkPrimitiveParams
      - llSetLinkPrimitiveParamsFast
    slwiki:
      - Limits#Building
    slwiki_categories:
      - LSL_Integer/boolean
      - LSL_Functions/Returns_a_integer/boolean
  scope: support.function.builtin
  type: integer.boolean
llGetMinScaleFactor:
  description: |-
    Returns the smallest multiplicative uniform scale factor that can
    be successfully applied (via llScaleByFactor()) to the object without
    violating prim size or linkability rules.
  related:
    functions:
      - llGetMaxScaleFactor
      - llScaleByFactor
    slwiki:
      - Limits#Building
  scope: support.function.builtin
  type: float
llGetMaxScaleFactor:
  description: |-
    Returns the largest multiplicative uniform scale factor that can
    be successfully applied (via llScaleByFactor()) to the object without
    violating prim size or linkability rules.
  related:
    functions:
      - llGetMinScaleFactor
      - llScaleByFactor
    slwiki:
      - Limits#Building
  scope: support.function.builtin
  type: float
llAgentInExperience:
  description: |-
    Returns TRUE if the agent is in the Experience and the Experience
    can run in the current location.
  params:
    - name: agent
      type: key
  related:
    constants:
      - 'TRUE'
      - 'FALSE'
    functions:
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - UUID
      - Region
    slwiki_categories:
      - Experience_Tools
      - LSL_Integer/boolean
      - LSL_Avatar/As_A_Parameter
      - LSL_Experience
      - LSL_Functions/Returns_a_integer/boolean
  scope: support.function.builtin
  type: integer.boolean
  version: '14.07.18.292162'
llGetExperienceDetails:
  description: |-
    Returns a list with the following Experience properties: [Experience Name,
    Owner ID, Group ID, Experience ID, State, State Message]. State is an
    integer corresponding to one of the constants XP_ERROR_… and State Message
    is the string returned by llGetExperienceErrorMessage for that integer.
  params:
    - description: the ID of the experience to query
      name: experience_id
      type: key
  related:
    constants:
      - NULL_KEY
    functions:
      - llAgentInExperience
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - Experience_Tools
      - LSL_Experience
  scope: support.function.builtin
  type: list
  version: '14.07.18.292162'
llRequestExperiencePermissions:
  description: |-
    Ask the agent for permission to participate in an experience. This request
    is similar to llRequestPermissions with the following permissions:
    PERMISSION_TAKE_CONTROLS, PERMISSION_TRIGGER_ANIMATION, PERMISSION_ATTACH,
    PERMISSION_TRACK_CAMERA, PERMISSION_CONTROL_CAMERA and PERMISSION_TELEPORT.
    However, unlike llRequestPermissions the decision to allow or block the
    request is persistent and applies to all scripts using the experience grid
    wide. Subsequent calls to llRequestExperiencePermissions from scripts in the
    experience will receive the same response automatically with no user
    interaction. One of experience_permissions or experience_permissions_denied
    will be generated in response to this call. Outstanding permission requests
    will be lost if the script is derezzed, moved to another region or reset.
  params:
    - name: agent
      type: key
    - name: name
      type: string
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llReadKeyValue
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
  scope: support.function.builtin
  version: '14.07.18.292162'
llReadKeyValue:
  description: |-
    Starts an asychronous transaction to retrieve the value associated with the
    key given. Will fail with XP_ERROR_KEY_NOT_FOUND if the key does not exist.
    The dataserver callback will be executed with the key returned from this
    call and a string describing the result. The result is a two element
    commma-delimited list. The first item is an integer specifying if the
    transaction succeeded (1) or not (0). In the failure case, the second item
    will be an integer corresponding to one of the XP_ERROR_… constants. In the
    success case the second item will be the value associated with the key.
  params:
    - name: k
      type: string
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
      - LSL_Experience/Data
      - Experience_Tools
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '14.07.18.292162'
llCreateKeyValue:
  description: |-
    Starts an asychronous transaction to create a key-value pair. Will
    fail with XP_ERROR_STORAGE_EXCEPTION if the key already exists. The
    dataserver callback will be executed with the key returned from this call
    and a string describing the result. The result is a two element
    commma-delimited list. The first item is an integer specifying if the
    transaction succeeded (1) or not (0). In the failure case, the second item
    will be an integer corresponding to one of the XP_ERROR_… constants. In the
    success case the second item will be the value passed to the function.
  params:
    - name: k
      type: string
    - name: v
      type: string
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
      - LSL_Experience/Data
      - Experience_Tools
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '14.07.18.292162'
llUpdateKeyValue:
  description: |-
    Starts an asychronous transaction to update the value associated
    with the key given. The dataserver callback will be executed with the key
    returned from this call and a string describing the result. The result is
    a two element commma-delimited list. The first item is an integer specifying
    if the transaction succeeded (1) or not (0). In the failure case, the second
    item will be an integer corresponding to one of the XP_ERROR_… constants.
    In the success case the second item will be the value associated with the
    key. If Checked is 1 the existing value in the data store must match the
    OriginalValue passed or XP_ERROR_RETRY_UPDATE will be returned. If Checked
    is 0 the key will be created if necessary.
  params:
    - name: k
      type: string
    - name: v
      type: string
    - name: checked
      type: integer
    - name: original_value
      type: string
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llCreateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
      - LSL_Experience/Data
      - Experience_Tools
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '14.07.18.292162'
llDeleteKeyValue:
  description: |-
    Starts an asychronous transaction to delete a key-value pair. The
    dataserver callback will be executed with the key returned from this call
    and a string describing the result. The result is a two element
    commma-delimited list. The first item is an integer specifying if the
    transaction succeeded (1) or not (0). In the failure case, the second item
    will be an integer corresponding to one of the XP_ERROR_… constants. In the
    success case the second item will be the value associated with the key.
  params:
    - name: k
      type: string
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
      - LSL_Experience/Data
      - Experience_Tools
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '14.07.18.292162'
llDataSizeKeyValue:
  description: |-
    Starts an asychronous transaction the request the used and total
    amount of data allocated for the Experience. The dataserver callback will
    be executed with the key returned from this call and a string describing the
    result. The result is commma-delimited list. The first item is an integer
    specifying if the transaction succeeded (1) or not (0). In the failure case,
    the second item will be an integer corresponding to one of the XP_ERROR_…
    constants. In the success case the second item will be the the amount in use
    and the third item will be the total available.
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
      - LSL_Experience/Data
      - Experience_Tools
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '14.07.18.292162'
llKeysKeyValue:
  description: |-
    Starts an asychronous transaction the request a number of keys from
    the data store. The dataserver callback will be executed with the key
    returned from this call and a string describing the result. The result is
    commma-delimited list. The first item is an integer specifying if the
    transaction succeeded (1) or not (0). In the failure case, the second item
    will be an integer corresponding to one of the XP_ERROR_… constants. The
    error XP_ERROR_KEY_NOT_FOUND is returned if First is greater than or equal
    to the number of keys in the data store. In the success case the subsequent
    items will be the keys requested. The number of keys returned may be less
    than requested if the return value is too large or if there is not enough
    keys remaining. The order keys are returned is not guaranteed but is stable
    between subsequent calls as long as no keys are added or removed. Because
    the keys are returned in a comma-delimited list it is not recommended to use
    commas in key names if this function is used.
  params:
    - name: start
      type: integer
    - name: count
      type: integer
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeyCountKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
      - LSL_Experience/Data
      - Experience_Tools
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '14.07.18.292162'
llKeyCountKeyValue:
  description: |-
    Starts an asychronous transaction the request the number of keys
    in the data store. The dataserver callback will be executed with the key
    returned from this call and a string describing the result. The result is
    commma-delimited list. The first item is an integer specifying if the
    transaction succeeded (1) or not (0). In the failure case, the second item
    will be an integer corresponding to one of the XP_ERROR_… constants. In the
    success case the second item will the the number of keys in the system.
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llGetExperienceErrorMessage
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
      - LSL_Experience/Data
      - Experience_Tools
      - LSL_Dataserver
  scope: support.function.builtin
  type: key
  version: '14.07.18.292162'
llGetExperienceErrorMessage:
  description: |-
    Returns a string describing the error code passed or the string
    corresponding with XP_ERROR_UNKNOWN_ERROR if the value is not a valid
    Experience error code.
  params:
    - name: value
      type: integer
  related:
    constants:
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TRIGGER_ANIMATION
      - PERMISSION_ATTACH
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_TELEPORT
    events:
      - experience_permissions
      - experience_permissions_denied
    functions:
      - llAgentInExperience
      - llGetExperienceDetails
      - llRequestExperiencePermissions
      - llReadKeyValue
      - llCreateKeyValue
      - llUpdateKeyValue
      - llDeleteKeyValue
      - llDataSizeKeyValue
      - llKeysKeyValue
      - llKeyCountKeyValue
    slwiki:
      - TPV
    slwiki_categories:
      - LSL_Permissions/Experience
      - LSL_Experience
      - LSL_Experience/Data
      - Experience_Tools
      - LSL_Dataserver
  scope: support.function.builtin
  type: string
  version: '14.07.18.292162'
llGetAttachedList:
  description: |-
    Returns a list of keys of all visible (not HUD) attachments on the
    avatar identified by the ID argument.
  params:
    - description: avatar UUID that is in the same region
      name: agent
      type: key
  related:
    constants:
      - ATTACH_AVATAR_CENTER
      - ATTACH_BACK
      - ATTACH_BELLY
      - ATTACH_CHEST
      - ATTACH_CHIN
      - ATTACH_FACE_JAW
      - ATTACH_FACE_LEAR
      - ATTACH_FACE_LEYE
      - ATTACH_FACE_REAR
      - ATTACH_FACE_REYE
      - ATTACH_FACE_TONGUE
      - ATTACH_GROIN
      - ATTACH_HEAD
      - ATTACH_HIND_LFOOT
      - ATTACH_HIND_RFOOT
      - ATTACH_LEAR
      - ATTACH_LEFT_PEC
      - ATTACH_LEYE
      - ATTACH_LFOOT
      - ATTACH_LHAND
      - ATTACH_LHAND_RING1
      - ATTACH_LHIP
      - ATTACH_LLARM
      - ATTACH_LLLEG
      - ATTACH_LSHOULDER
      - ATTACH_LUARM
      - ATTACH_LULEG
      - ATTACH_LWING
      - ATTACH_MOUTH
      - ATTACH_NECK
      - ATTACH_NOSE
      - ATTACH_PELVIS
      - ATTACH_REAR
      - ATTACH_REYE
      - ATTACH_RFOOT
      - ATTACH_RHAND
      - ATTACH_RHAND_RING1
      - ATTACH_RHIP
      - ATTACH_RIGHT_PEC
      - ATTACH_RLARM
      - ATTACH_RLLEG
      - ATTACH_RSHOULDER
      - ATTACH_RUARM
      - ATTACH_RULEG
      - ATTACH_RWING
      - ATTACH_TAIL_BASE
      - ATTACH_TAIL_TIP
      - OBJECT_ATTACHED_POINT
    events:
      - attach
    functions:
      - llGetAttached
      - llAttachToAvatar
      - llDetachFromAvatar
      - llGetObjectDetails
    slwiki:
      - UUID
      - Region
      - Project_Bento_Skeleton_Guide
    slwiki_categories:
      - LSL_Avatar
      - LSL_Avatar/As_A_Parameter
      - LSL_Attachment
  scope: support.function.builtin
  type: list
  version: '15.09.14.305056'
llStartObjectAnimation:
  description: Start animation for the current object.
  params:
    - description: name of an animation in the inventory of the current object
      name: anim
      type: string
  related:
    functions:
      - llStopObjectAnimation
      - llGetObjectAnimationNames
    slwiki:
      - Animesh_User_Guide
    slwiki_categories:
      - LSL_Animation
  scope: support.function.builtin
  version: '18.06.14.516474'
llStopObjectAnimation:
  description: Stop animation for the current object.
  params:
    - description: |-
        name of an animation in the inventory of the current object,
        or an animation UUID
      name: anim
      type: string
  related:
    functions:
      - llStartObjectAnimation
      - llGetObjectAnimationNames
    slwiki:
      - Animesh_User_Guide
    slwiki_categories:
      - LSL_Animation
  scope: support.function.builtin
  version: '18.06.14.516474'
llGetObjectAnimationNames:
  description: |-
    Returns a list of names of animations playing in the current object.
  related:
    functions:
      - llStartObjectAnimation
      - llStopObjectAnimation
    slwiki:
      - Animesh_User_Guide
    slwiki_categories:
      - LSL_Animation
  scope: support.function.builtin
  type: list
  version: '18.06.14.516474'
llName2Key:
  description: |-
    Returns a key the Agent ID for the named agent in the region. If there is no
    agent with the specified name currently signed onto the region, this
    function returns the value NULL_KEY. Names are always provided in the form
    "First[ Last]" or "first[.last]" (first name with an optional last name.) If
    the last name is omitted a last name of "Resident" is assumed. Case is not
    considered when resolving agent names.
  related:
    functions:
      - llRequestUserKey
  params:
    - description: avatar name
      name: name
      type: string
  scope: support.function.builtin
  type: key
  version: '18.05.07.515224'
llRequestUserKey:
  description: |-
    Requests the Agent ID for the agent identified by name from the dataserver.
    The name given may be either the current name of an avatar or a historical
    name that has been used in the past. If no agent can be found with the
    supplied name this function returns the value NULL_KEY.

    Returns a handle (a key) that can be used to identify the request when the
    dataserver event is raised.

    The agent being searched for with this function does not need to be signed
    on to Second Life.
  params:
    - description: avatar name
      name: name
      type: string
  related:
    functions:
      - llRequestUsername
      - llName2Key
  scope: support.function.builtin
  type: key
  version: '18.05.07.515224'
llGetDayLength:
  description: |-
    Return the number of seconds in the day cycle applied to the current parcel.
    llGetDayLength returns the number of seconds for the current parcel,
    llGetRegionDayLength is the number of seconds in the day cycle applied to
    the entire region.
  related:
    functions:
      - llGetDayOffset
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: integer
  version: '18.11.02.521379'
llGetDayOffset:
  description: |-
    Return the number of seconds added to the current time before calculating
    the current environmental time for the parcel. llGetDayOffset returns the
    value for the current parcel, llGetRegionDayOffset produces the same value
    for the entire region.
  related:
    functions:
      - llGetDayLength
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: integer
  version: '18.11.02.521379'
llGetEnvironment:
  description: |-
    Returns a list containing the current environment values for the parcel and
    region as a list of attributes. Takes a list of attributes to retrieve in
    params and returns them in the order requested.

    If an unknown rule is encountered in the parameter list an error is sent to
    the debug channel.
  params:
    - description: |-
        A position in region coordinates. X and Y are in region coordinates and
        determine the parcel. If X and Y are both -1, the environment for the
        region is inspected. Z is the altitude in the region and determines
        which sky track is accessed.
      name: pos
      type: vector
    - description: |-
        A list of parameters to retrieve from the current environment.
      name: params
      type: list
  related:
    constants:
      - SKY_TRACKS
      - SKY_AMBIENT
      - SKY_TEXTURE_DEFAULTS
      - SKY_CLOUDS
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_MOON
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_PLANET
      - SKY_REFRACTION
      - SKY_LIGHT
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_TEXTURE_DEFAULTS
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
      - ENVIRONMENT_DAYINFO
  scope: support.function.builtin
  type: list
  version: '18.11.02.521379'
llGetMoonDirection:
  description: |-
    Returns a normalized vector to the current moon position at the location of
    object containing the script. llGetMoonDirection is the vector to the
    parcel's moon, llGetRegionMoonDirection is the vector to region's moon. If
    there is no custom environment set for the current parcel llGetMoonDirection
    returns the direction to the region's moon. These functions are altitude
    aware.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: vector
  version: '18.11.02.521379'
llGetMoonRotation:
  description: |-
    Return the rotation applied to the moon for the parcel at the location of
    the object containing the script. These function are altitude aware and so
    will pick up the moon for their current track. llGetRegionMoonRotation
    returns the rotation applied at the region level, llGetMoonRotation does the
    same for the parcel. If there is no custom environment applied to parcel
    llGetMoonRotation returns the same value as llGetRegionMoonRotation.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonDirection
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: rotation
  version: '18.11.02.521379'
llGetRegionDayLength:
  description: |-
    Return the number of seconds in the day cycle applied to the current region.
    llGetDayLength returns the number of seconds for the current parcel,
    llGetRegionDayLength is the number of seconds in the day cycle applied to
    the entire region.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: integer
  version: '18.11.02.521379'
llGetRegionDayOffset:
  description: |-
    Return the number of seconds added to the current time before calculating
    the current environmental time for the region. llGetDayOffset returns the
    value for the current parcel, llGetRegionDayOffset produces the same value
    for the entire region.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: integer
  version: '18.11.02.521379'
llGetRegionMoonDirection:
  description: |-
    Returns a normalized vector to the current moon position at the location of
    object containing the script. llGetMoonDirection is the vector to the
    parcel's moon, llGetRegionMoonDirection is the vector to region's moon. If
    there is no custom environment set for the current parcel llGetMoonDirection
    returns the direction to the region's moon. These functions are altitude
    aware.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: vector
  version: '18.11.02.521379'
llGetRegionMoonRotation:
  description: |-
    Return the rotation applied to the moon for the region at the location of
    the object containing the script. These function are altitude aware and so
    will pick up the moon for their current track. llGetRegionMoonRotation
    returns the rotation applied at the region level, llGetMoonRotation does the
    same for the parcel. If there is no custom environment applied to parcel
    llGetMoonRotation returns the same value as llGetRegionMoonRotation.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: rotation
  version: '18.11.02.521379'
llGetRegionSunDirection:
  description: |-
    Returns a normalized vector to the current sun position at the location of
    object containing the script. llGetSunDirection is the vector to the
    parcel's sun, llGetRegionSunDirection is the vector to region's sun. If
    there is no custom environment set for the current parcel llGetSunDirection
    returns the direction to the region's sun. These functions are altitude
    aware.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: vector
  version: '18.11.02.521379'
llGetRegionSunRotation:
  description: |-
    Return the rotation applied to the sun for the region at the location of the
    object containing the script. These functions are altitude aware and so will
    pick up the sun for their current track. llGetRegionSunRotation returns the
    rotation applied at the region level, llGetSunRotation does the same for the
    parcel. If there is no custom environment applied to parcel llGetSunRotation
    returns the same value as llGetRegionSunRotation.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetSunRotation
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
  scope: support.function.builtin
  type: rotation
  version: '18.11.02.521379'
llGetSunRotation:
  description: |-
    Return the rotation applied to the sun for the parcel at the location of the
    object containing the script. These function are altitude aware and so will
    pick up the sun for their current track. llGetRegionSunRotation returns the
    rotation applied at the region level, llGetSunRotation does the same for the
    parcel. If there is no custom environment applied to parcel llGetSunRotation
    returns the same value as llGetRegionSunRotation.
  related:
    functions:
      - llGetDayLength
      - llGetDayOffset
      - llGetMoonDirection
      - llGetMoonRotation
      - llGetSunDirection
      - llGetRegionDayLength
      - llGetRegionDayOffset
      - llGetRegionMoonDirection
      - llGetRegionMoonRotation
      - llGetRegionSunDirection
      - llGetRegionSunRotation
  scope: support.function.builtin
  type: rotation
  version: '18.11.02.521379'
llGetRegionTimeOfDay:
  type: float
  scope: support.function.builtin
  version: '19.02.01.523934'
llSetAgentEnvironment:
  description: |-
    This function sets environment values for an individual agent in an
    experience. The changes to the environment persist until the agent moves to
    a new region or llSetAgentEnvironment is called for an agent with an empty
    list. Passing an empty list in params will strip all environmental settings
    applied to this agent as part of the experience
  params:
    - description: |-
        The key for an agent in the region. The agent must be in the region and
        must be participating in the experience.
      name: agent_id
      type: key
    - description: |-
        The number of seconds over which to transition to the new settings.
      name: transition
      type: float
    - description: |-
        A list of parameters to retrieve from the current environment. See table
        below for details.
      name: params
      type: list
  related:
    constants:
      - ENV_NOT_EXPERIENCE
      - ENV_NO_EXPERIENCE_PERMISSION
      - ENV_NO_ENVIRONMENT
      - ENV_INVALID_AGENT
      - ENV_INVALID_RULE
      - ENV_VALIDATION_FAIL
      - ENV_NO_EXPERIENCE_LAND
      - ENV_THROTTLE
      - SKY_CLOUDS
      - SKY_CLOUD_TEXTURE
      - SKY_DOME
      - SKY_GAMMA
      - SKY_GLOW
      - SKY_MOON
      - SKY_MOON_TEXTURE
      - SKY_STAR_BRIGHTNESS
      - SKY_SUN
      - SKY_SUN_TEXTURE
      - SKY_PLANET
      - SKY_REFRACTION
      - WATER_BLUR_MULTIPLIER
      - WATER_FOG
      - WATER_FRESNEL
      - WATER_NORMAL_TEXTURE
      - WATER_NORMAL_SCALE
      - WATER_REFRACTION
      - WATER_WAVE_DIRECTION
  type: integer
  scope: support.function.builtin
  version: '19.02.01.523934'
llReplaceAgentEnvironment:
  description: |-
    This function overrides the current region and parcel environment seen by an
    agent. The new environment persists until the agent crosses to a new region
    or this function is called with the NULL_KEY or empty string in the
    environment parameter for the particular agent, doing so will strip all
    environmental settings applied to this agent as part of the experience. This
    function must be executed as part of an experience.
  params:
    - description: |-
        The key for an agent in the region. The agent must be in the region and
        must be participating in the experience.
      name: agent_id
      type: key
    - description: |-
        The number of seconds over which to transition to the new settings.
      name: transition
      type: float
    - description: |-
        The name of an environmental setting in the object's inventory or the
        asset ID for an environment.
      name: environment
      type: string
  type: integer
  scope: support.function.builtin
  version: '19.02.01.523934'
  usage:
    - |-
      // The script is not running as part of an experience with a valid
      // experience key.
      llReplaceAgentEnvironment(key agent_id, float transition, string environment) == ENV_NOT_EXPERIENCE
    - |-
      // The agent has not granted permission.
      llReplaceAgentEnvironment(key agent_id, float transition, string environment) == ENV_NO_EXPERIENCE_PERMISSION
    - |-
      // The environment inventory object could not be found.
      llReplaceAgentEnvironment(key agent_id, float transition, string environment) == ENV_NO_ENVIRONMENT
    - |-
      // Unable to find specified agent.
      llReplaceAgentEnvironment(key agent_id, float transition, string environment) ==  ENV_INVALID_AGENT
    - |-
      // The experience has not been enabled or can not run on the land.
      llReplaceAgentEnvironment(key agent_id, float transition, string environment) == ENV_NO_EXPERIENCE_LAND
    - |-
      // The scripts have exceeded the throttle. Wait and retry the request.
      llReplaceAgentEnvironment(key agent_id, float transition, string environment) == ENV_THROTTLE
llTargetedEmail:
  delay: 20.0
  description: |-
    Sends an email to the owner or creator (selected by target) of an object
    with subject and message.

    The entire message (including address, subject and other miscellaneous
    fields) cannot be longer than 4096 bytes combined.

    There is a limit of 500 messages per object per hour.
  params:
    - description: |-
        Selects which agent the email is sent to.
      name: target
      type: integer
    - name: subject
      type: string
    - description: |-
        The message is prefixed with information about the prim sending the
        email.
      name: message
      type: string
  related:
    constants:
      - TARGETED_EMAIL_OBJECT_OWNER
      - TARGETED_EMAIL_ROOT_CREATOR
  scope: support.function.builtin
  version: '2020-04-03'
llsRGB2Linear:
  description: |-
    Transforms a color specified in the sRGB colorspace to the linear RGB colorspace.
  params:
    - description: |-
        Color in the sRGB color space.
      name: srgb
      type: vector
  related:
    functions:
      - llLinear2sRGB
  type: vector
  scope: support.function.builtin
  version: '2020-04-16'
llLinear2sRGB:
  description: |-
    Transforms a color specified in linear RGB color space into the sRGB
    colorspace.
  params:
    - description: |-
        Color in the linear color space.
      name: color
      type: vector
  related:
    functions:
      - llsRGB2Linear
  type: vector
  scope: support.function.builtin
  version: '2020-04-16'
# support.function.event
at_rot_target:
  description: Result of LLRotTarget library function call
  params:
    - name: tnum
      type: integer
    - name: targetrot
      type: rotation
    - name: ourrot
      type: rotation
  related:
    functions:
      - llRotTarget
      - llRotTargetRemove
    slwiki_categories:
      - LSL_At_target
  scope: support.function.event
  usage:
    - |-
      at_rot_target(integer tnum, rotation targetrot, rotation ourrot)
      {
          ;
      }
at_target:
  description: Result of llTarget library function call
  params:
    - name: tnum
      type: integer
    - name: targetpos
      type: vector
    - name: ourpos
      type: vector
  related:
    functions:
      - llTarget
      - llTargetRemove
    slwiki_categories:
      - LSL_At_target
  scope: support.function.event
  usage:
    - |-
      at_rot(integer tnum, vector targetpos, vector ourpos)
      {
          ;
      }
attach:
  description: Triggered when task attaches or detaches from agent
  params:
    - name: id
      type: key
  scope: support.function.event
  usage:
    - |-
      attach(key id)
      {
          if (id)
          {
              ; // attached
          }
          else
          {
              ; // detached
          }
      }
changed:
  description: Triggered by various event changes to the task
  params:
    - name: change
      type: integer
  related:
    constants:
      - CHANGED_ALLOWED_DROP
      - CHANGED_COLOR
      - CHANGED_INVENTORY
      - CHANGED_LINK
      - CHANGED_MEDIA
      - CHANGED_OWNER
      - CHANGED_REGION
      - CHANGED_REGION_START
      - CHANGED_SCALE
      - CHANGED_SHAPE
      - CHANGED_TELEPORT
      - CHANGED_TEXTURE
    slwiki:
      - Bit_field
      - State
    slwiki_categories:
      - LSL_Integer/bit_field
  scope: support.function.event
  usage:
    - |-
      changed(integer change)
      {
          if (change & CHANGED_INVENTORY)
          {
              ; // inventory changed
          }
          if (change & CHANGED_COLOR)
          {
              ; // color or alpha changed
          }
          if (change & CHANGED_SHAPE)
          {
              ; // prim's shape changed
          }
          if (change & CHANGED_SCALE)
          {
              ; // prim's scale changed
          }
          if (change & CHANGED_TEXTURE)
          {
              ; // prim's texture or texture attributes changed
          }
          if (change & CHANGED_LINK)
          {
              ; // number of links changed
          }
          if (change & CHANGED_ALLOWED_DROP)
          {
              ; // inventory changed as a result of a user without mod perms
              ; // dropping an item on the prim and it being allowed by the
              ; // script
          }
          if (change & CHANGED_OWNER)
          {
              ; // owner changed
          }
          if (change & CHANGED_REGION)
          {
              ; // region the object is in changed
          }
          if (change & CHANGED_TELEPORT)
          {
              ; // object was teleported while attached
          }
          if (change & CHANGED_REGION_START)
          {
              ; // region has just restarted
          }
      }
collision:
  description: Triggered while task is colliding with another task
  params:
    - name: num_detected
      type: integer
  related:
    constants:
      - REGION_FLAG_DISABLE_COLLISIONS
    events:
      - collision_start
      - collision_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llGetRegionFlags
      - llPassCollisions
      - llVolumeDetect
    slwiki_categories:
      - LSL_Collision
      - LSL_Detected
      - LSL_Passable
  scope: support.function.event
  usage:
    - |-
      collision(integer num_detected)
      {
          ;
      }
collision_end:
  description: Triggered when task stops colliding with another task
  params:
    - name: num_detected
      type: integer
  related:
    constants:
      - REGION_FLAG_DISABLE_COLLISIONS
    events:
      - collision_start
      - collision
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llGetRegionFlags
      - llPassCollisions
      - llVolumeDetect
    slwiki_categories:
      - LSL_Collision
      - LSL_Detected
      - LSL_Passable
  scope: support.function.event
  usage:
    - |-
      collision_end(integer num_detected)
      {
          ;
      }
collision_start:
  description: Triggered when task starts colliding with another task
  params:
    - name: num_detected
      type: integer
  related:
    constants:
      - REGION_FLAG_DISABLE_COLLISIONS
    events:
      - collision
      - collision_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llGetRegionFlags
      - llPassCollisions
      - llVolumeDetect
    slwiki_categories:
      - LSL_Collision
      - LSL_Detected
      - LSL_Passable
  scope: support.function.event
  usage:
    - |-
      collision_start(integer num_detected)
      {
          ;
      }
control:
  description: Result of llTakeControls library function call
  params:
    - name: id
      type: key
    - name: level
      type: integer
    - name: edge
      type: integer
  related:
    functions:
      - llTakeControls
    slwiki_categories:
      - LSL_Integer/bit_field
  scope: support.function.event
  usage:
    - |-
      control(key id, integer level, integer edge)
      {
          ;
      }
dataserver:
  description: Triggered when task receives asynchronous data
  params:
    - name: query_id
      type: key
    - name: data
      type: string
  related:
    constants:
      - EOF
    functions:
      - llCreateKeyValue
      - llDataSizeKeyValue
      - llDeleteKeyValue
      - llGetNotecardLine
      - llGetNumberOfNotecardLines
      - llKeyCountKeyValue
      - llKeysKeyValue
      - llReadKeyValue
      - llRequestAgentData
      - llRequestDisplayName
      - llRequestInventoryData
      - llRequestSimulatorData
      - llRequestUsername
      - llUpdateKeyValue
    slwiki_categories:
      - LSL_Dataserver
      - LSL_Communications
      - LSL_Notecard
  scope: support.function.event
  usage:
    - |-
      dataserver(key query_id, string data)
      {
          ;
      }
email:
  description: Triggered when task receives email
  params:
    - name: time
      type: string
    - name: address
      type: string
    - name: subj
      type: string
    - name: message
      type: string
    - name: num_left
      type: integer
  related:
    slwiki_categories:
      - LSL_Communications
      - LSL_Email
  scope: support.function.event
  version: '1.3.0'
  usage:
    - |-
      email(string time, string address, string subject, string message, integer num_left)
      {
          ;
      }
experience_permissions:
  description: |-
    Triggered by llRequestExperiencePermissions when the permission has
    been granted.
  params:
    - name: agent
      type: key
  scope: support.function.event
  version: '14.07.18.292162'
  usage:
    - |-
      experience_permissions(key agent)
      {
          ;
      }
experience_permissions_denied:
  description: |-
    Triggered by llRequestExperiencePermissions when the permission has
    been denied.
  params:
    - name: agent
      type: key
    - name: reason
      type: integer
  scope: support.function.event
  version: '14.07.18.292162'
  usage:
    - |-
      experience_permissions_denied(key agent, integer reason)
      {
          ;
      }
http_request:
  description: |-
    Triggered when task receives an http request against a public URL
  params:
    - name: id
      type: key
    - name: method
      type: string
    - name: body
      type: string
  scope: support.function.event
  usage:
    - |-
      http_request(key id, string method, string body)
      {
          ;
      }
http_response:
  description: |-
    Triggered when task receives a response to one of its llHTTPRequests
  params:
    - name: request_id
      type: key
    - name: status
      type: integer
    - name: metadata
      type: list
    - name: body
      type: string
  scope: support.function.event
  version: '1.9.1.9'
  usage:
    - |-
      http_response(key request_id, integer status, list metadata, string body)
      {
          ;
      }
land_collision:
  description: Triggered when task is colliding with land
  params:
    - name: pos
      type: vector
  related:
    events:
      - land_collision_start
      - land_collision_end
    functions:
      - llGround
    slwiki_categories:
      - LSL_Collision
      - LSL_Land_Collision
  scope: support.function.event
  usage:
    - |-
      land_collision(vector pos)
      {
          ;
      }
land_collision_end:
  description: Triggered when task stops colliding with land
  params:
    - name: pos
      type: vector
  related:
    events:
      - land_collision_start
      - land_collision
    functions:
      - llGround
    slwiki_categories:
      - LSL_Collision
      - LSL_Land_Collision
  scope: support.function.event
  usage:
    - |-
      land_collision_end(vector pos)
      {
          ;
      }
land_collision_start:
  description: Triggered when task starts colliding with land
  params:
    - name: pos
      type: vector
  related:
    events:
      - land_collision
      - land_collision_end
    functions:
      - llGround
    slwiki_categories:
      - LSL_Collision
      - LSL_Land_Collision
  scope: support.function.event
  usage:
    - |-
      land_collision_start(vector pos)
      {
          ;
      }
link_message:
  description: |-
    Triggered when task receives a link message via LLMessageLinked library
    function call
  params:
    - name: sender_num
      type: integer
    - name: num
      type: integer.link
    - name: str
      type: string
    - name: id
      type: key
  related:
    functions:
      - llCSV2List
      - llDumpList2String
      - llJson2List
      - llList2CSV
      - llList2Json
      - llMessageLinked
      - llParseString2List
      - llParseStringKeepNulls
    slwiki:
      - Typecast
    slwiki_categories:
      - LSL_Communications
      - LSL_Link
      - LSL_Link_Message
  scope: support.function.event
  usage:
    - |-
      link_message(integer sender_num, integer num, string str, key id)
      {
          ;
      }
listen:
  description: Result of the llListen library function call
  params:
    - name: channel
      type: integer
    - name: name
      type: string
    - name: id
      type: key
    - name: message
      type: string
  scope: support.function.event
  usage:
    - |-
      listen(integer channel, string name, key id, string message)
      {
          ;
      }
money:
  description: Triggered when L$ is given to task
  params:
    - name: id
      type: key
    - name: amount
      type: integer
  related:
    constants:
      - PAY_DEFAULT
      - PAY_HIDE
      - PERMISSION_DEBIT
    functions:
      - llGiveMoney
      - llRequestPermissions
      - llSetClickAction
      - llSetPayPrice
      - llTransferLindenDollars
    slwiki_categories:
      - LSL_Money
      - LSL_Pie_Menu
  scope: support.function.event
  usage:
    - |-
      money(key id, integer amount)
      {
          ;
      }
moving_end:
  description: Triggered when task stops moving
  related:
    functions:
      - llSetKeyframedMotion
    slwiki:
      - Building_Tools
      - Linden_Vehicle_Tutorial
    slwiki_categories:
      - LSL_Movement
      - LSL_Physics
      - LSL_Damping
      - LSL_Hover
      - LSL_Strength
      - LSL_Effects
      - LSL_Vehicle
      - LSL_Vehicle/Flags
      - LSL_Vehicle/Parameters
      - LSL_Vehicle/Types
  scope: support.function.event
  usage:
    - |-
      moving_end()
      {
          ;
      }
moving_start:
  description: Triggered when task begins moving
  related:
    functions:
      - llSetKeyframedMotion
    slwiki:
      - Building_Tools
      - Linden_Vehicle_Tutorial
    slwiki_categories:
      - LSL_Movement
      - LSL_Physics
      - LSL_Damping
      - LSL_Hover
      - LSL_Strength
      - LSL_Effects
      - LSL_Vehicle
      - LSL_Vehicle/Flags
      - LSL_Vehicle/Parameters
      - LSL_Vehicle/Types
  scope: support.function.event
  usage:
    - |-
      moving_start()
      {
          ;
      }
no_sensor:
  description: Result of the llSensor library function call
  related:
    events:
      - sensor
    slwiki_categories:
      - LSL_Sensor
  scope: support.function.event
  usage:
    - |-
      no_sensor()
      {
          ;
      }
not_at_rot_target:
  description: Result of LLRotTarget library function call
  related:
    functions:
      - llRotTarget
      - llRotTargetRemove
    slwiki_categories:
      - LSL_At_target
  scope: support.function.event
  usage:
    - |-
      not_at_rot_target()
      {
          ;
      }
not_at_target:
  description: Result of llTarget library function call
  related:
    functions:
      - llTarget
      - llTargetRemove
    slwiki_categories:
      - LSL_At_target
  scope: support.function.event
  usage:
    - |-
      not_at_target()
      {
          ;
      }
object_rez:
  description: Triggered when task rezzes in another task
  params:
    - name: id
      type: key
  related:
    events:
      - on_rez
    functions:
      - llRezObject
      - llRezAtRoot
      - llGodLikeRezObject
    slwiki_categories:
      - LSL_Rez
  scope: support.function.event
  usage:
    - |-
      object_rez(key id)
      {
          ;
      }
on_rez:
  description: Triggered when task is rezzed in from inventory or another task
  params:
    - name: start_param
      type: integer
  related:
    events:
      - state_entry
      - attach
      - moving_start
      - moving_end
      - object_rez
    functions:
      - llGetStartParameter
      - llRemoteLoadScriptPin
      - llSetRemoteScriptAccessPin
    slwiki_categories:
      - LSL_Rez
  scope: support.function.event
  usage:
    - |-
      on_rez(integer start_param)
      {
          ;
      }
path_update:
  params:
    - name: type
      type: integer
    - name: reserved
      type: list
  scope: support.function.event
  usage:
    - |-
      path_update(integer type, list reserved)
      {
          ;
      }
remote_data:
  description: |-
    Triggered by various XML-RPC calls (event_type will be one of
    REMOTE_DATA_CHANNEL, REMOTE_DATA_REQUEST, REMOTE_DATA_REPLY)
  params:
    - name: event_type
      type: integer
    - name: channel
      type: key
    - name: message_id
      type: key
    - name: sender
      type: string
    - name: idata
      type: integer
    - name: sdata
      type: string
  related:
    constants:
      - REMOTE_DATA_CHANNEL
      - REMOTE_DATA_REQUEST
      - REMOTE_DATA_REPLY
    functions:
      - llCloseRemoteDataChannel
      - llOpenRemoteDataChannel
      - llRemoteDataReply
      - llSendRemoteData
    slwiki_categories:
      - LSL_Communications
      - LSL_XML-RPC
    wikipedia:
        en:
          - XML
          - XML-RPC
  scope: support.function.event
  usage:
    - |-
      remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)
      {
          ;
      }
run_time_permissions:
  description: Triggered when an agent grants run time permissions to task
  params:
    - name: perm
      type: integer
  related:
    constants:
      - PERMISSION_ATTACH
      - PERMISSION_CHANGE_LINKS
      - PERMISSION_CONTROL_CAMERA
      - PERMISSION_DEBIT
      - PERMISSION_OVERRIDE_ANIMATIONS
      - PERMISSION_RETURN_OBJECTS
      - PERMISSION_SILENT_ESTATE_MANAGEMENT
      - PERMISSION_TAKE_CONTROLS
      - PERMISSION_TELEPORT
      - PERMISSION_TRACK_CAMERA
      - PERMISSION_TRIGGER_ANIMATION
    functions:
      - llGetPermissions
      - llGetPermissionsKey
      - llRequestPermissions
      - llRequestExperiencePermissions
    slwiki_categories:
      - LSL_Permissions/Script
  scope: support.function.event
  usage:
    - |-
      run_time_permissions(integer perm)
      {
          ;
      }
sensor:
  description: Result of the llSensor library function call
  params:
    - name: num_detected
      type: integer
  related:
    events:
      - no_sensor
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
    slwiki_categories:
      - LSL_Sensor
  scope: support.function.event
  usage:
    - |-
      sensor(integer num_detected)
      {
          ;
      }
state_entry:
  description: Triggered on any state transition and startup
  related:
    functions:
      - llResetScript
      - llResetOtherScript
    slwiki:
      - State
    slwiki_categories:
      - LSL_Events
      - LSL_State
  scope: support.function.event
  usage:
    - |-
      state_entry()
      {
          ;
      }
state_exit:
  description: Triggered on any state transition
  related:
    slwiki:
      - State
    slwiki_categories:
      - LSL_Events
      - LSL_State
  scope: support.function.event
  usage:
    - |-
      state_exit()
      {
          ;
      }
timer:
  description: Result of the llSetTimerEvent library function call
  scope: support.function.event
  usage:
    - |-
      timer()
      {
          ;
      }
touch:
  description: Triggered while agent is clicking on task
  params:
    - name: num_detected
      type: integer
  related:
    constants:
      - PASS_ALWAYS
      - PASS_IF_NOT_HANDLED
      - PASS_NEVER
    events:
      - touch_start
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassTouches
    slwiki_categories:
      - LSL_Detected
      - LSL_Passable
      - LSL_Touch
  scope: support.function.event
  usage:
    - |-
      touch(integer num_detected)
      {
          ;
      }
touch_end:
  description: Triggered when agent stops clicking on task
  params:
    - name: num_detected
      type: integer
  related:
    constants:
      - PASS_ALWAYS
      - PASS_IF_NOT_HANDLED
      - PASS_NEVER
    events:
      - touch_start
      - touch
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassTouches
    slwiki_categories:
      - LSL_Detected
      - LSL_Passable
      - LSL_Touch
  scope: support.function.event
  usage:
    - |-
      touch_end(integer num_detected)
      {
          ;
      }
touch_start:
  description: Triggered by the start of agent clicking on task
  params:
    - name: num_detected
      type: integer
  related:
    constants:
      - PASS_ALWAYS
      - PASS_IF_NOT_HANDLED
      - PASS_NEVER
    events:
      - touch
      - touch_end
    functions:
      - llDetectedGrab
      - llDetectedGroup
      - llDetectedKey
      - llDetectedLinkNumber
      - llDetectedName
      - llDetectedOwner
      - llDetectedPos
      - llDetectedRot
      - llDetectedTouchBinormal
      - llDetectedTouchFace
      - llDetectedTouchNormal
      - llDetectedTouchPos
      - llDetectedTouchST
      - llDetectedTouchUV
      - llDetectedType
      - llDetectedVel
      - llPassTouches
    slwiki_categories:
      - LSL_Detected
      - LSL_Passable
      - LSL_Touch
  scope: support.function.event
  usage:
    - |-
      touch_start(integer num_detected)
      {
          ;
      }
transaction_result:
  description: |-
    Triggered when transferring L$ to Agent via llTransferLindenDollars
  params:
    - name: id
      type: key
    - name: success
      type: integer
    - name: data
      type: string
  related:
    functions:
      - llTransferLindenDollars
  scope: support.function.event
  usage:
    - |-
      transaction_result(key id, integer success, string data)
      {
          ;
      }
